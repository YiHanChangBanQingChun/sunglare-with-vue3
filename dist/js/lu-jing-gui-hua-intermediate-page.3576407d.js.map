{"version":3,"file":"js/lu-jing-gui-hua-intermediate-page.3576407d.js","mappings":"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","sources":["webpack://sun-glare-project/./src/views/IntermediatepageView.vue","webpack://sun-glare-project/./src/views/IntermediatepageView.vue?2cfd","webpack://sun-glare-project/./node_modules/@geoscene/core/layers/GraphicsLayer.js"],"sourcesContent":["<template>\r\n  <!-- 输入了起点和终点之后,还没有摁查询路径的画面 -->\r\n  <div class=\"lu-jing-gui-hua\">\r\n    <!-- 搜索框 -->\r\n    <!-- 外层容器 -->\r\n    <div class=\"search-containers\">\r\n      <!-- 交换的侧边栏 -->\r\n      <div class=\"revert-containers\">\r\n        <div class=\"car\"><img src=\"https://wx3.sinaimg.cn/orj360/008tIcISgy1hsgyr8gzsjj300o00odfl.jpg\"></div>\r\n        <div class=\"swap-action\">\r\n          <!-- 绑定 swap 方法到点击事件 -->\r\n          <button @click=\"swap\" title=\"切换起终点\">\r\n            <img src=\"https://wx1.sinaimg.cn/orj360/008tIcISgy1hsiz7qtw48j301s01sq2p.jpg\" alt=\"revert\" style=\"width: 22px; height: 25px;\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <!-- 搜索起点的容器 -->\r\n      <div class=\"search-container start\">\r\n        <!-- 图片 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src=\"https://wx1.sinaimg.cn/orj360/008tIcISgy1hsgyr8gv8dj300f00f0oh.jpg\" alt=\"pink\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryStart\" @input=\"onSearchInputChange($event, true)\" placeholder=\"请输入起点\" class=\"search-box search-box-start\"/>\r\n        <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete\" title=\"清空\" @click=\"clc1\">\r\n            <img src=\"https://wx2.sinaimg.cn/orj360/008tIcISgy1hsnss2ckv4j300k00k0m1.jpg\" alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 修正后的起点搜索结果展示 -->\r\n        <div class=\"search-results\" v-if=\"searchResults.length && searchQueryStart\" ref=\"searchResultsStart\">\r\n    <ul>\r\n      <li v-for=\"(result, index) in searchResults\" :key=\"index\" :class=\"{ 'highlighted': index === highlightedIndex }\" @click=\"selectResult(result, true)\">\r\n        {{ result.name }}\r\n      </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n      <!-- 搜索终点的容器 -->\r\n      <div class=\"search-container end\">\r\n        <!-- 图片容器 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src=\"https://wx4.sinaimg.cn/orj360/008tIcISgy1hsgyr8got8j300f00f0o9.jpg\" alt=\"green\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryEnd\" @input=\"onSearchInputChange($event, false)\" placeholder=\"请输入终点\" class=\"search-box search-box-end\"/>\r\n         <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete\" title=\"清空\" @click=\"clc2\">\r\n            <img src=\"https://wx2.sinaimg.cn/orj360/008tIcISgy1hsnss2ckv4j300k00k0m1.jpg\" alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 修正后的终点搜索结果展示 -->\r\n        <div class=\"search-results\" v-if=\"searchResultsEnd.length && searchQueryEnd\" ref=\"searchResultsEnd\">\r\n    <ul>\r\n      <li v-for=\"(result, index) in searchResultsEnd\" :key=\"index\" :class=\"{ 'highlighted': index === highlightedIndex }\" @click=\"selectResult(result, false)\">\r\n        {{ result.name }}\r\n      </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"search-action\" @click=\"onSearch\" title=\"搜索\">\r\n          <img src=\"https://wx4.sinaimg.cn/mw2000/008tIcISgy1hsq1fw9ob9j300w00w3ya.jpg\" alt=\"search\">\r\n      </div>\r\n      <!-- 新的覆盖层容器 -->\r\n      <div v-if=\"isLoading\" class=\"loader-overlay\">\r\n      <div class=\"loader\">\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- 地图展示 -->\r\n  <div id=\"viewDiv\"></div>\r\n  <!-- 时间选择框和路径展示框 -->\r\n  <div class=\"main-container\">\r\n    <!-- 时间选择框 -->\r\n    <div class=\"choose-time\">\r\n      <div class=\"form-group\">\r\n        <label for=\"date-input\">选择日期：</label>\r\n        <input id=\"date-input\" type=\"date\" v-model=\"selectedDate\" :min=\"minDate\" :max=\"maxDate\" :class=\"{ 'invalid-date': isDateDisabled(selectedDate) }\" @change=\"handleDateChange\">\r\n        <label for=\"time-input\">选择时间：</label>\r\n        <input id=\"time-input\" type=\"time\" v-model=\"formattedTime\" @input=\"onTimeInputChange\" step=\"600\"> <!-- 600秒 = 10分钟 -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Map from '@geoscene/core/Map.js'\r\nimport MapView from '@geoscene/core/views/MapView.js'\r\nimport Graphic from '@geoscene/core/Graphic'\r\nimport Point from '@geoscene/core/geometry/Point.js'\r\nimport GraphicsLayer from '@geoscene/core/layers/GraphicsLayer'\r\nimport axios from 'axios'\r\nimport Extent from '@geoscene/core/geometry/Extent'\r\nimport { ref, nextTick } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nexport default {\r\n  name: 'IntermediatePageView',\r\n  setup () {\r\n    const searchQueryStart = ref('')\r\n    const searchQueryEnd = ref('')\r\n    const selectedResultStart = ref(null)\r\n    const selectedResultEnd = ref(null)\r\n    const router = useRouter()\r\n\r\n    return {\r\n      searchQueryStart,\r\n      searchQueryEnd,\r\n      selectedResultStart,\r\n      selectedResultEnd,\r\n      router\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      searchResults: [],\r\n      searchResultsEnd: [],\r\n      isLoading: false,\r\n      selectedDate: '', // 用户选择的日期\r\n      selectedTime: '', // 用户选择的时间\r\n      highlightedIndex: -1 // 高亮的搜索结果索引\r\n    }\r\n  },\r\n  // 在组件挂载时初始化地图\r\n  mounted () {\r\n    // 初始化地图\r\n    this.initMap()\r\n    if (this.$route.query.start) {\r\n      // 如果URL中有起点参数，解析并设置为选中结果\r\n      this.selectedResultStart = JSON.parse(this.$route.query.start)\r\n    }\r\n    if (this.$route.query.end) {\r\n      // 如果URL中有终点参数，解析并设置为选中结果\r\n      this.selectedResultEnd = JSON.parse(this.$route.query.end)\r\n    }\r\n    // 解析URL参数\r\n    this.parseUrlParams()\r\n\r\n    // 设置定时器，每隔1分钟更新时间\r\n    setInterval(() => { this.updateTime() }, 60000)\r\n    window.addEventListener('keydown', this.handleKeydown)\r\n  },\r\n  beforeUnmount () {\r\n    window.removeEventListener('keydown', this.handleKeydown)\r\n  },\r\n  computed: {\r\n    minDate () {\r\n      return '2024-01-01'\r\n    },\r\n    maxDate () {\r\n      return '2024-12-31'\r\n    },\r\n    formattedTime () {\r\n      // 格式化时间为10分钟间隔\r\n      if (!this.selectedTime) return ''\r\n      const [hours, minutes] = this.selectedTime.split(':').map(Number)\r\n      const roundedMinutes = Math.floor(minutes / 10) * 10\r\n      return `${String(hours).padStart(2, '0')}:${String(roundedMinutes).padStart(2, '0')}`\r\n    }\r\n  },\r\n  methods: {\r\n    onTimeInputChange (event) {\r\n      const value = event.target.value\r\n      const [hours, minutes] = value.split(':').map(Number)\r\n      const roundedMinutes = Math.floor(minutes / 10) * 10\r\n      this.selectedTime = `${String(hours).padStart(2, '0')}:${String(roundedMinutes).padStart(2, '0')}`\r\n    },\r\n    isDateDisabled (date) {\r\n      if (!date) return false\r\n      const selected = new Date(date)\r\n      const month = selected.getMonth() + 1 // 月份从0开始\r\n      const day = selected.getDate()\r\n\r\n      if (month >= 1 && month <= 7 && day !== 15) {\r\n        return true\r\n      }\r\n      if (month === 8 && day <= 20) {\r\n        return true\r\n      }\r\n      if (month >= 10 && month <= 12 && day !== 15) {\r\n        return true\r\n      }\r\n      return false\r\n    },\r\n    handleDateChange (event) {\r\n      const date = event.target.value\r\n      if (this.isDateDisabled(date)) {\r\n        alert('选择的日期未进行模拟，请选择其他日期。可选日期为，1-7月的15日，8月20日-9月30日，10-12月的15日。')\r\n        this.selectedDate = ''\r\n      }\r\n    },\r\n    handleKeydown (event) {\r\n      if (this.searchResults.length && this.searchQueryStart) {\r\n        switch (event.key) {\r\n          case 'Escape':\r\n            this.searchResults = []\r\n            break\r\n          case 'Tab':\r\n            event.preventDefault()\r\n            this.highlightedIndex = (this.highlightedIndex + 1) % this.searchResults.length\r\n            nextTick(() => {\r\n              const highlightedElement = this.$refs.searchResultsStart.querySelector('li.highlighted')\r\n              if (highlightedElement) {\r\n                highlightedElement.scrollIntoView({ block: 'nearest', behavior: 'smooth' })\r\n              }\r\n            })\r\n            break\r\n          case 'Enter':\r\n            if (this.highlightedIndex >= 0 && this.highlightedIndex < this.searchResults.length) {\r\n              this.selectResult(this.searchResults[this.highlightedIndex], true)\r\n            }\r\n            break\r\n        }\r\n      } else if (this.searchResultsEnd.length && this.searchQueryEnd) {\r\n        switch (event.key) {\r\n          case 'Escape':\r\n            this.searchResultsEnd = []\r\n            break\r\n          case 'Tab':\r\n            event.preventDefault()\r\n            this.highlightedIndex = (this.highlightedIndex + 1) % this.searchResultsEnd.length\r\n            nextTick(() => {\r\n              const highlightedElement = this.$refs.searchResultsEnd.querySelector('li.highlighted')\r\n              if (highlightedElement) {\r\n                highlightedElement.scrollIntoView({ block: 'nearest', behavior: 'smooth' })\r\n              }\r\n            })\r\n            break\r\n          case 'Enter':\r\n            if (this.highlightedIndex >= 0 && this.highlightedIndex < this.searchResultsEnd.length) {\r\n              this.selectResult(this.searchResultsEnd[this.highlightedIndex], false)\r\n            }\r\n            break\r\n        }\r\n      }\r\n    },\r\n    // 更新时间，日期\r\n    updateTime () {\r\n      const now = new Date()\r\n      const currentTime = `${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`\r\n      // 只有当 selectedTime 是当前时间时，才更新\r\n      if (!this.isTimeFromUrl || this.selectedTime === currentTime) {\r\n        this.selectedTime = currentTime\r\n        this.isTimeFromUrl = false // 重置标志位\r\n      }\r\n    },\r\n    // 清空搜索框\r\n    clc1 () {\r\n      // 清空搜索框1\r\n      this.searchQueryStart = ''\r\n    },\r\n    // 清空搜索框2\r\n    clc2 () {\r\n      this.searchQueryEnd = ''\r\n    },\r\n    // 解析URL参数\r\n    parseUrlParams () {\r\n      // 获取URL中的查询参数\r\n      const urlParams = new URLSearchParams(window.location.search)\r\n      const startParam = urlParams.get('start')\r\n      const endParam = urlParams.get('end')\r\n      const dateParam = urlParams.get('date')\r\n      const timeParam = urlParams.get('time')\r\n      // 如果有起点参数，进行解析\r\n      if (startParam) {\r\n        try {\r\n          const startObj = JSON.parse(decodeURIComponent(startParam))\r\n          if (startObj && startObj.address) {\r\n            this.searchQueryStart = startObj.name\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing start parameter:', e)\r\n        }\r\n      }\r\n      // 如果有终点参数，进行解析\r\n      if (endParam) {\r\n        try {\r\n          const endObj = JSON.parse(decodeURIComponent(endParam))\r\n          if (endObj && endObj.address) {\r\n            this.searchQueryEnd = endObj.name // 绑定终点查询字符串\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing end parameter:', e)\r\n        }\r\n      }\r\n      // 如果有日期参数，进行解析\r\n      if (dateParam) {\r\n        this.selectedDate = dateParam\r\n      }\r\n      // 如果有时间参数，进行解析\r\n      if (timeParam) {\r\n        this.selectedTime = timeParam\r\n        this.isTimeFromUrl = true // 设置标志位\r\n      }\r\n    },\r\n    // 交换起点和终点信息并跳转页面\r\n    swap () {\r\n      const tempQuery = this.searchQueryStart\r\n      this.searchQueryStart = this.searchQueryEnd\r\n      this.searchQueryEnd = tempQuery\r\n      // 交换 selectedResultStart 和 selectedResultEnd\r\n      const tempResult = this.selectedResultStart\r\n      this.selectedResultStart = this.selectedResultEnd\r\n      this.selectedResultEnd = tempResult\r\n      // 跳转到 intermediate-page 页面，并传递交换后的起点和终点信息\r\n      this.router.push({\r\n        path: '/lu-jing-gui-hua/result',\r\n        query: {\r\n          start: JSON.stringify(this.selectedResultStart),\r\n          end: JSON.stringify(this.selectedResultEnd),\r\n          date: this.selectedDate,\r\n          time: this.selectedTime\r\n        }\r\n      })\r\n    },\r\n    // 处理搜索框输入变化\r\n    onSearchInputChange (event, isStart) {\r\n      // 获取搜索框的值\r\n      const query = event.target.value\r\n      const searchResultsField = isStart ? 'searchResults' : 'searchResultsEnd'\r\n      // 检查是否是输入法临时输入\r\n      if (query.includes(\"'\")) {\r\n        console.log('输入法临时输入，不发送请求')\r\n        return\r\n      }\r\n      // 发送请求获取搜索结果\r\n      if (query.length >= 2) {\r\n        // 使用的是本地的Flask后端，需要根据实际情况修改URL，结合后端接口的标识使用不同的URL\r\n        fetch(`${process.env.VUE_APP_API_URL}/api/search`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ searchQueryStart: query })\r\n        })\r\n        // 解析JSON响应\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            this[searchResultsField] = data\r\n          })\r\n          .catch((error) => {\r\n            console.error('错误:', error)\r\n          })\r\n      } else {\r\n        // 清空搜索结果\r\n        this[searchResultsField] = []\r\n      }\r\n    },\r\n    // 选择搜索结果\r\n    selectResult (result, isStart = true) {\r\n      // poi所含的信息\r\n      const simplifiedResult = {\r\n        name: result.name,\r\n        address: result.address,\r\n        wgs84_latitude: result.wgs84_latitude,\r\n        wgs84_longitude: result.wgs84_longitude,\r\n        location: [result.wgs84_longitude, result.wgs84_latitude],\r\n        baidu_index: result.baidu_index,\r\n        baidu_latitude: result.baidu_latitude,\r\n        baidu_longitude: result.baidu_longitude,\r\n        id: result.id,\r\n        label: result.label\r\n      }\r\n      let isUpdate = false\r\n      if (isStart && this.selectedResultStart) {\r\n        isUpdate = true\r\n        this.selectedResultStart = simplifiedResult\r\n        this.searchQueryStart = simplifiedResult.name\r\n        this.searchResults = []\r\n      } else if (!isStart && this.selectedResultEnd) {\r\n        isUpdate = true\r\n        this.selectedResultEnd = simplifiedResult\r\n        this.searchQueryEnd = simplifiedResult.name\r\n        this.searchResultsEnd = []\r\n      } else {\r\n        // 设置选中结果并清空搜索结果\r\n        if (isStart) {\r\n          this.selectedResultStart = simplifiedResult\r\n          this.searchQueryStart = simplifiedResult.name\r\n          this.searchResults = []\r\n        } else {\r\n          this.selectedResultEnd = simplifiedResult\r\n          this.searchQueryEnd = simplifiedResult.name\r\n          this.searchResultsEnd = []\r\n        }\r\n      }\r\n      // 检查是否需要导航\r\n      const shouldNavigate = this.selectedResultStart || this.selectedResultEnd\r\n      // 导航逻辑\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        this.navigateToResultPage()\r\n      } else if (shouldNavigate) {\r\n        this.navigateToIntermediatePage(isStart ? 'start' : 'end', simplifiedResult, isUpdate)\r\n      }\r\n    },\r\n    // 导航到结果页面\r\n    navigateToResultPage () {\r\n      this.$router.push({\r\n        path: '/lu-jing-gui-hua/result',\r\n        // 带着参数跳转，将经纬度绑定传递给result页面\r\n        query: {\r\n          start: JSON.stringify({\r\n            ...this.selectedResultStart,\r\n            location: [this.selectedResultStart.wgs84_longitude, this.selectedResultStart.wgs84_latitude]\r\n          }),\r\n          end: JSON.stringify({\r\n            ...this.selectedResultEnd,\r\n            location: [this.selectedResultEnd.wgs84_longitude, this.selectedResultEnd.wgs84_latitude]\r\n          }),\r\n          date: this.selectedDate,\r\n          time: this.selectedTime\r\n        }\r\n      })\r\n    },\r\n    navigateToIntermediatePage (type, result, isUpdate = false) {\r\n      const path = '/lu-jing-gui-hua/intermediate-page'\r\n      const query = {\r\n        [type]: JSON.stringify(result),\r\n        date: this.selectedDate,\r\n        time: this.selectedTime\r\n      }\r\n\r\n      if (isUpdate) {\r\n        // 更新URL并刷新页面\r\n        this.$router.replace({ path, query }).then(() => {\r\n          window.location.reload()\r\n        })\r\n      } else {\r\n        // 正常导航\r\n        this.$router.push({ path, query })\r\n      }\r\n    },\r\n    // 处理路径规划事件\r\n    onSearch () {\r\n      // 检查是否两个结果都已选择\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        // 显示加载动画\r\n        this.isLoading = true\r\n        // 构造包含location属性的起点和终点对象\r\n        const startWithLocation = {\r\n          ...this.selectedResultStart,\r\n          location: [this.selectedResultStart.wgs84_longitude, this.selectedResultStart.wgs84_latitude]\r\n        }\r\n        const endWithLocation = {\r\n          ...this.selectedResultEnd,\r\n          location: [this.selectedResultEnd.wgs84_longitude, this.selectedResultEnd.wgs84_latitude]\r\n        }\r\n        const formattedTime = this.selectedTime.length === 5 ? `${this.selectedTime}:00` : this.selectedTime\r\n        console.log('Formatted Time:', formattedTime) // 打印时间参数\r\n        // 发送请求到后端进行路径规划\r\n        axios.post(`${process.env.VUE_APP_API_URL}/api/route/plan`, { start: startWithLocation, end: endWithLocation, date: this.selectedDate, time: formattedTime })\r\n          .then(response => {\r\n            // 后端返回的路径规划结果ID\r\n            const defaultRoutePlanId = response.data.default_id\r\n            const timeBasedRoutePlanId = response.data.time_based_id\r\n            console.log('默认路径规划结果ID:', defaultRoutePlanId)\r\n            console.log('基于时间的路径规划结果ID:', timeBasedRoutePlanId)\r\n            console.log('路径规划成功，时间日期是:', this.selectedDate, this.selectedTime)\r\n            // 隐藏加载动画\r\n            this.isLoading = false\r\n            // 使用Vue Router跳转到结果页面，并传递路径规划结果ID\r\n            this.$router.push({\r\n              path: '/lu-jing-gui-hua/route',\r\n              query: {\r\n                start: JSON.stringify(startWithLocation),\r\n                end: JSON.stringify(endWithLocation),\r\n                default_id: defaultRoutePlanId,\r\n                time_based_id: timeBasedRoutePlanId,\r\n                date: this.selectedDate,\r\n                time: formattedTime\r\n              }\r\n            })\r\n          })\r\n          .catch(error => {\r\n            console.error(error)\r\n            // 隐藏加载动画\r\n            this.isLoading = false\r\n            // 错误处理，例如显示提示信息\r\n            alert('路径规划失败，请稍后再试。')\r\n          })\r\n      } else {\r\n        // 如果起点或终点未选择，显示提示信息\r\n        alert('请确保起点和终点都已选择。')\r\n      }\r\n    },\r\n    // 初始化地图\r\n    initMap () {\r\n      const map = new Map({\r\n        basemap: 'tianditu-vector' // 使用适合的底图\r\n      })\r\n      this.map = map\r\n\r\n      this.view = new MapView({\r\n        container: 'viewDiv', // 使用正确的容器ID\r\n        map: map,\r\n        center: [114.3, 30.7], // 默认中心点坐标\r\n        zoom: 4, // 默认缩放级别\r\n        constraints: {\r\n          geometry: {\r\n            type: 'extent',\r\n            xmin: 113.6,\r\n            ymin: 29.9,\r\n            xmax: 115.0,\r\n            ymax: 31.3\r\n          },\r\n          minScale: 500,\r\n          maxScale: 2000000,\r\n          rotationEnabled: false,\r\n          // 假设tileInfo.lods已经在某处定义，否则这里需要调整\r\n          // lods: tileInfo.lods,\r\n          snapToZoom: false\r\n        }\r\n      })\r\n      // 移动缩放控件到左下角\r\n      this.view.ui.move('zoom', 'bottom-left')\r\n      // 创建一个新的GraphicsLayer实例，以便在地图上绘制点\r\n      const graphicsLayer = new GraphicsLayer()\r\n      map.add(graphicsLayer)\r\n      this.view.when(() => {\r\n        this.drawPoints(graphicsLayer)\r\n        this.adjustView()\r\n      }).catch((err) => {\r\n        console.error('MapView initialization error:', err)\r\n      })\r\n    },\r\n    // 调整视图以适应起点和终点\r\n    adjustView () {\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        const padding = 0.01 // 调整这个值以增加或减少边界的放宽程度\r\n        const extent = new Extent({\r\n          xmin: Math.min(this.selectedResultStart.location[0], this.selectedResultEnd.location[0]) - 10 * padding,\r\n          ymin: Math.min(this.selectedResultStart.location[1], this.selectedResultEnd.location[1]) - 10 * padding,\r\n          xmax: Math.max(this.selectedResultStart.location[0], this.selectedResultEnd.location[0]) + 10 * padding,\r\n          ymax: Math.max(this.selectedResultStart.location[1], this.selectedResultEnd.location[1]) + 10 * padding\r\n        })\r\n        this.view.goTo(extent).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      } else if (this.selectedResultStart) {\r\n        this.view.goTo({\r\n          center: [this.selectedResultStart.location[0], this.selectedResultStart.location[1]],\r\n          zoom: 10\r\n        }).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      } else if (this.selectedResultEnd) {\r\n        this.view.goTo({\r\n          center: [this.selectedResultEnd.location[0], this.selectedResultEnd.location[1]],\r\n          zoom: 10\r\n        }).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      }\r\n    },\r\n    // 绘制起点和终点\r\n    drawPoints (graphicsLayer) {\r\n      // 绘制起点\r\n      if (this.selectedResultStart) {\r\n        const start = this.selectedResultStart\r\n        const startPoint = new Point({\r\n          longitude: start.location[0],\r\n          latitude: start.location[1]\r\n        })\r\n\r\n        const startGraphic = new Graphic({\r\n          // 点参数设置\r\n          geometry: startPoint,\r\n          symbol: {\r\n            type: 'simple-marker', // 自动转换为 SimpleMarkerSymbol\r\n            color: 'red',\r\n            size: '20px'\r\n          },\r\n          popupTemplate: {\r\n            title: '起点信息',\r\n            content: [\r\n              {\r\n                type: 'fields',\r\n                fieldInfos: [\r\n                  {\r\n                    fieldName: 'address',\r\n                    label: '地址'\r\n                  },\r\n                  {\r\n                    fieldName: 'name',\r\n                    label: '名称'\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          attributes: start\r\n        })\r\n\r\n        graphicsLayer.add(startGraphic)\r\n      }\r\n      // 绘制终点\r\n      if (this.selectedResultEnd) {\r\n        const end = this.selectedResultEnd\r\n        const endPoint = new Point({\r\n          longitude: end.location[0],\r\n          latitude: end.location[1]\r\n        })\r\n        const endGraphic = new Graphic({\r\n          geometry: endPoint,\r\n          symbol: {\r\n            type: 'simple-marker',\r\n            color: 'green',\r\n            size: '20px'\r\n          },\r\n          popupTemplate: {\r\n            title: '终点信息',\r\n            content: [\r\n              {\r\n                type: 'fields',\r\n                fieldInfos: [\r\n                  {\r\n                    fieldName: 'address',\r\n                    label: '地址'\r\n                  },\r\n                  {\r\n                    fieldName: 'name',\r\n                    label: '名称'\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          attributes: end\r\n        })\r\n\r\n        graphicsLayer.add(endGraphic)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/*之后要自己调样式的大小，这个仅作参考*/\r\n#viewDiv {\r\n  position: absolute; /* 固定定位 */\r\n  top: 0; /* 紧贴网页顶部 */\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height:100%; /* 将高度设置为视口高度的100% */\r\n  width: 100%; /* 将宽度设置为视口宽度的100% */\r\n  z-index: -1; /* 设置较低的z-index值，使其在App.vue的下部分 */\r\n  margin: auto;\r\n}\r\n\r\n.lu-jing-gui-hua {\r\n  position: fixed; /* 固定定位 */\r\n  display: flex;\r\n  flex-direction: column; /* 使子元素垂直排列,使大框和revert小框水平分布 */\r\n  z-index: 2;\r\n}\r\n\r\n.search-containers {\r\n  display: flex;\r\n  flex-direction: column; /* 保持垂直排列 */\r\n  justify-content: flex-start; /* 从顶部开始排列 */\r\n  align-items: flex-start; /* 子元素沿交叉轴的开始边缘对齐，即顶部对齐 */\r\n  width: 357px; /* 设置一个固定宽度 */\r\n  height:85px;\r\n  padding-right: 10px; /* 根据需要调整，确保搜索框周围有足够空间 */\r\n  padding-left:32px;/*整个搜索框的左边空间*/\r\n  padding-top: 6px;\r\n  background: #FFFFFF; /* 应用深色毛玻璃效果 */\r\n  -webkit-backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  border-top-left-radius: 10px; /* 设置圆角 */\r\n  border-top-right-radius: 10px;\r\n  border: 1px solid rgba(255, 255, 255, 0.45); /* 添加边框 */\r\n  position: absolute; /* 添加相对定位 */\r\n}\r\n\r\n/* 移除左右外边距 */\r\n.search-container.start,\r\n.search-container.end {\r\n  position: relative; /* 设置相对定位 */\r\n  margin-top: 5px;\r\n  padding-left: 0px; /* 留出图片的空间 */\r\n  margin-left: 24px; /* 根据侧边栏宽度来设置左边距 */\r\n}\r\n/* 更改 输入字体的框 的样式 */\r\n.search-box {\r\n  position: relative; /* 允许绝对定位的子元素 */\r\n  padding: 8px 8px; /* 初始内边距 */\r\n  border: 2px solid #ccc;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  flex-grow: 1;\r\n  box-sizing: border-box;\r\n  text-indent: 0px; /* 初始文本缩进，保持文本在左侧 */\r\n  width: 303px; /* 使搜索框填充容器 */\r\n  display: flex;\r\n  align-items: center; /* 垂直居中对齐 */\r\n}\r\n\r\n/* 鼠标悬停时只改变边框颜色，不改变宽度 */\r\n.search-box:hover {\r\n  border-color: blue; /* 改变边框颜色而不是宽度 */\r\n}\r\n\r\n.search-box:focus {\r\n  border-width: 2px;\r\n  border-color: blue;\r\n  text-indent: 0px; /* 聚焦时减少文本缩进 */\r\n}\r\n\r\n.search-results {\r\n  position: absolute;\r\n  z-index: 9999 !important; /* !important可以使这个css代码优先执行，让这个框显示为最高层级 */\r\n  top: 105%; /* 确保列表紧贴搜索框的底部 */\r\n  left: 0;\r\n  width: 100%; /* 使列表宽度与搜索框相同 */\r\n  background-color: white; /* 或其他背景色，确保列表可见 */\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1); /* 可选：添加一些阴影以提升视觉效果 */\r\n  max-height: 200px; /* 限制最大高度，5行大约160px，根据实际行高调整 */\r\n  overflow-y: auto; /* 超出部分显示滚动条 */\r\n  display: flex;\r\n  border-radius: 10px; /* 添加圆角 */\r\n}\r\n\r\n.search-results li:hover {\r\n  text-decoration: underline; /* 添加下划线 */\r\n  background-color: #f0f0f0; /* 更改背景颜色以提高对比度 */\r\n  cursor: pointer; /* 更改鼠标指针为手形，更明显地指示可点击 */\r\n}\r\n\r\n/* 查询按钮的容器样式 */\r\n.search-action {\r\n  display: flex;\r\n  position: absolute; /* 绝对定位 */\r\n  margin-left: 328px; /* 与左边界保持一定距离 */\r\n  top: 13px; /* 与底部保持一定距离 */\r\n  border: 2px solid  #ccc;\r\n  justify-content: flex-start;\r\n  border-radius: 10px;\r\n  cursor: pointer; /* 鼠标悬停时显示指针 */\r\n}\r\n\r\n/* 将CSS链接转换为@import语句 */\r\n@import url(\"https://js.geoscene.cn/4.27/@geoscene/core/assets/geoscene/themes/light/main.css\");\r\n\r\n.car{\r\n  padding-top:3px;\r\n  left:1px;\r\n}\r\n\r\n/* 交换的容器样式 */\r\n.revert-containers{\r\n  position: absolute; /* 或使用 fixed，根据需要 */\r\n  left: 0; /* 侧边栏靠在最左边 */\r\n  top: 0; /* 根据需要调整垂直位置 */\r\n  width: 20px;\r\n  height:85px;\r\n  padding-left:5px;\r\n  background-color: #FFFFFF;\r\n  border-radius: 10px; /* 设置圆角 */\r\n  -webkit-backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n}\r\n.swap-action button {\r\n  display:flex;\r\n  flex-direction: row; /* 保持水平排列 */\r\n  justify-content: flex-start; /* 水平排列的子元素靠左对齐 */\r\n  position: absolute;\r\n  left: 5px; /* 图标距离父容器左边的距离 */\r\n  top: 50%; /* 垂直居中对齐 */\r\n  transform: translateY(-50%); /* 使用transform属性垂直居中 */\r\n  border:white;/* 边框颜色设置为白色 */\r\n  padding:0px;\r\n  background-color: #FFFFFF;\r\n  cursor: pointer; /* 鼠标悬停时显示指针 */\r\n}\r\n\r\n/* 搜索框框前面的圆圈的样式 */\r\n.search-icon-wrapper {\r\n  display: inline-block; /* 或者使用 flex 布局 */\r\n  position: absolute; /* 绝对定位 */\r\n  left: -20px; /* 根据需要调整 */\r\n  top: 50%;\r\n  transform: translateY(-50%); /* 垂直居中对齐 */\r\n}\r\n\r\n/* 删除logo的样式 */\r\n.search-box-img {/* 作用：使得 删除logo 在搜索框内 */\r\n  display: flex;\r\n  position: absolute;\r\n  left:278px;\r\n  top: 50%;\r\n  transform: translateY(-35%); /* 垂直居中对齐 */\r\n  padding-inline-end: 0px;\r\n}\r\n.delete{\r\n  cursor: pointer; /* 鼠标悬停时显示指针 */\r\n}\r\n.delete img {\r\n  pointer-events: none; /* 点击图片时不会影响输入框 （记得改成删除这个框框内容）*/\r\n}\r\n\r\n/* 搜索logo的样式 */\r\n.search-action img {\r\n  transform: scale(0.85); /* 将图片缩放到原始尺寸的50% */\r\n}\r\n.search-action:hover{\r\n  border-color: blue;\r\n}\r\n\r\n.main-container{\r\n  position: fixed;\r\n  z-index: 1;\r\n}\r\n\r\n.main-container{\r\n  position: absolute;\r\n  z-index: 1;\r\n}\r\n\r\n/* 选择时间框的样式 */\r\n.choose-time{\r\n  transform: none;\r\n  position: absolute;\r\n  display: block;\r\n  width: 390px;\r\n  height: 30px;\r\n  border-bottom-left-radius: 10px; /* 设置圆角 */\r\n  border-bottom-right-radius: 10px;\r\n  background-color:#FFFFFF;\r\n  margin-top: 90px;/* 控制时间选择框在网页垂直方向的位置 */\r\n  padding-left: 10px;\r\n  padding-top: 3px;\r\n}\r\n.form-group label,\r\n.form-group input {\r\n  margin-right: 10px; /* 右侧外边距 */\r\n}\r\n/* 新的覆盖层容器样式 */\r\n.loader-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 50%;\r\n  width: 45%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(255, 255, 255, 0.8); /* 可选：添加半透明背景 */\r\n  transform: translateX(-50%);\r\n  z-index: 10; /* 确保覆盖层在最上层 */\r\n}\r\n\r\n/* 加载动画的样式 */\r\n.loader {\r\n  display: inline-grid;\r\n  width: 90px;\r\n  aspect-ratio: 1;\r\n  animation: l3-0 5s steps(10) infinite;\r\n}\r\n.loader:before,\r\n.loader:after {\r\n  content:\"\";\r\n  grid-area: 1/1;\r\n}\r\n.loader:before {\r\n  clip-path: polygon(100% 50%,90.45% 79.39%,65.45% 97.55%,34.55% 97.55%,9.55% 79.39%,0% 50%,9.55% 20.61%,34.55% 2.45%,65.45% 2.45%,90.45% 20.61%,100% 50%,85.6% 24.14%,63.6% 8.15%,36.4% 8.15%,14.4% 24.14%,6% 50%,14.4% 75.86%,36.4% 91.85%,63.6% 91.85%,85.6% 75.86%,94% 50%,85.6% 24.14%);\r\n  background: #574951;\r\n}\r\n.loader:after {\r\n  background: #83988E;\r\n  clip-path: polygon(100% 50%,65.45% 97.55%,9.55% 79.39%,9.55% 20.61%,65.45% 2.45%);\r\n  margin: 27%;\r\n  translate: 46% 0;\r\n  transform-origin: right;\r\n  animation: l3-1 .5s linear infinite;\r\n}\r\n@keyframes l3-0 {to{rotate: 1turn}}\r\n@keyframes l3-1 {\r\n  0%{rotate:  18deg}\r\n  to{rotate: -18deg}\r\n}\r\n\r\n.search-results li.highlighted {\r\n  background-color: #f0f0f0; /* 高亮背景颜色 */\r\n}\r\n</style>\r\n","import { render } from \"./IntermediatepageView.vue?vue&type=template&id=3b3b7a82\"\nimport script from \"./IntermediatepageView.vue?vue&type=script&lang=js\"\nexport * from \"./IntermediatepageView.vue?vue&type=script&lang=js\"\n\nimport \"./IntermediatepageView.vue?vue&type=style&index=0&id=3b3b7a82&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/*\r\nAll material copyright GeoScene, All Rights Reserved, unless otherwise specified.\r\nSee https://js.geoscene.cn/4.27/geoscene/copyright.txt for details.\r\n*/\r\nimport{_ as r}from\"../chunks/tslib.es6.js\";import{property as e}from\"../core/accessorSupport/decorators/property.js\";import\"../core/accessorSupport/ensureType.js\";import\"../core/arrayUtils.js\";import\"../core/has.js\";import{subclass as o}from\"../core/accessorSupport/decorators/subclass.js\";import{owningCollectionProperty as s}from\"../core/support/OwningCollection.js\";import t from\"./Layer.js\";import{BlendLayer as i}from\"./mixins/BlendLayer.js\";import{ScaleRangeLayer as p}from\"./mixins/ScaleRangeLayer.js\";import{GraphicsCollection as a}from\"../support/GraphicsCollection.js\";import c from\"../symbols/support/ElevationInfo.js\";let n=class extends(i(p(t))){constructor(r){super(r),this.elevationInfo=null,this.graphics=new a,this.screenSizePerspectiveEnabled=!0,this.type=\"graphics\",this.internal=!1}destroy(){this.removeAll(),this.graphics.destroy()}add(r){return this.graphics.add(r),this}addMany(r){return this.graphics.addMany(r),this}removeAll(){return this.graphics.removeAll(),this}remove(r){this.graphics.remove(r)}removeMany(r){this.graphics.removeMany(r)}on(r,e){return super.on(r,e)}graphicChanged(r){this.emit(\"graphic-update\",r)}};r([e({type:c})],n.prototype,\"elevationInfo\",void 0),r([e(s(a,\"graphics\"))],n.prototype,\"graphics\",void 0),r([e({type:[\"show\",\"hide\"]})],n.prototype,\"listMode\",void 0),r([e()],n.prototype,\"screenSizePerspectiveEnabled\",void 0),r([e({readOnly:!0})],n.prototype,\"type\",void 0),r([e({constructOnly:!0})],n.prototype,\"internal\",void 0),n=r([o(\"geoscene.layers.GraphicsLayer\")],n);const h=n;export{h as default};"],"names":["class","_createElementVNode","src","alt","style","_hoisted_6","_hoisted_11","key","ref","_hoisted_18","_hoisted_22","_hoisted_25","id","for","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","onClick","_cache","args","$options","swap","title","_hoisted_7","_hoisted_8","_hoisted_9","type","$event","$setup","searchQueryStart","onInput","onSearchInputChange","placeholder","_hoisted_10","clc1","_hoisted_12","$data","searchResults","length","_hoisted_13","_renderList","result","index","_normalizeClass","highlightedIndex","selectResult","name","_hoisted_14","_createCommentVNode","_hoisted_15","_hoisted_16","searchQueryEnd","_hoisted_17","clc2","_hoisted_19","searchResultsEnd","_hoisted_20","_hoisted_21","onSearch","_hoisted_23","isLoading","_hoisted_24","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","selectedDate","min","minDate","max","maxDate","isDateDisabled","onChange","handleDateChange","_hoisted_32","_hoisted_33","formattedTime","onTimeInputChange","step","setup","selectedResultStart","selectedResultEnd","router","useRouter","data","selectedTime","mounted","this","initMap","$route","query","start","JSON","parse","end","parseUrlParams","setInterval","updateTime","window","addEventListener","handleKeydown","beforeUnmount","removeEventListener","computed","hours","minutes","split","map","Number","roundedMinutes","Math","floor","String","padStart","methods","event","value","target","date","selected","Date","month","getMonth","day","getDate","alert","preventDefault","nextTick","highlightedElement","$refs","searchResultsStart","querySelector","scrollIntoView","block","behavior","now","currentTime","getHours","getMinutes","isTimeFromUrl","urlParams","URLSearchParams","location","search","startParam","get","endParam","dateParam","timeParam","startObj","decodeURIComponent","address","e","console","error","endObj","tempQuery","tempResult","push","path","stringify","time","isStart","searchResultsField","includes","log","fetch","method","headers","body","then","response","json","catch","simplifiedResult","wgs84_latitude","wgs84_longitude","baidu_index","baidu_latitude","baidu_longitude","label","isUpdate","shouldNavigate","navigateToResultPage","navigateToIntermediatePage","$router","replace","reload","startWithLocation","endWithLocation","axios","post","defaultRoutePlanId","default_id","timeBasedRoutePlanId","time_based_id","Map","basemap","view","MapView","container","center","zoom","constraints","geometry","xmin","ymin","xmax","ymax","minScale","maxScale","rotationEnabled","snapToZoom","ui","move","graphicsLayer","GraphicsLayer","add","when","drawPoints","adjustView","err","padding","extent","Extent","goTo","startPoint","Point","longitude","latitude","startGraphic","Graphic","symbol","color","size","popupTemplate","content","fieldInfos","fieldName","attributes","endPoint","endGraphic","__exports__","render","n","i","p","t","constructor","r","super","elevationInfo","graphics","a","screenSizePerspectiveEnabled","internal","destroy","removeAll","addMany","remove","removeMany","on","graphicChanged","emit","c","prototype","s","readOnly","constructOnly","o","h"],"sourceRoot":""}