{"version":3,"file":"js/lu-jing-gui-hua-intermediate-page.6ffe66e1.js","mappings":"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","sources":["webpack://sun-glare-project/./src/views/IntermediatepageView.vue","webpack://sun-glare-project/./src/views/IntermediatepageView.vue?2cfd"],"sourcesContent":["<template>\r\n  <!-- 输入了起点和终点之后,还没有摁查询路径的画面 -->\r\n  <div class=\"lu-jing-gui-hua\">\r\n    <!-- 搜索框 -->\r\n    <!-- 外层容器 -->\r\n    <div class=\"search-containers\">\r\n      <!-- 交换的侧边栏 -->\r\n      <div class=\"revert-containers\">\r\n        <div class=\"car\"><img src='@/assets/car.png'></div>\r\n        <div class=\"swap-action\">\r\n          <!-- 绑定 swap 方法到点击事件 -->\r\n          <button @click=\"swap\" title=\"切换起终点\">\r\n            <img :src=\"require('@/assets/revert.png')\" alt=\"\" class=\"revert\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <!-- 搜索起点的容器 -->\r\n      <div class=\"search-container start\">\r\n        <!-- 图片 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src='@/assets/pink-circle.png' alt=\"pink\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryStart\" @input=\"onSearchInputChange($event, true)\" placeholder=\"请输入起点\" class=\"search-box search-box-start\"/>\r\n        <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete\" title=\"清空\" @click=\"clc1\">\r\n            <img src='@/assets/cancel.png' alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 修正后的起点搜索结果展示 -->\r\n        <div class=\"search-results\" v-if=\"searchResults.length && searchQueryStart\" ref=\"searchResultsStart\">\r\n    <ul>\r\n      <li v-for=\"(result, index) in searchResults\" :key=\"index\" :class=\"{ 'highlighted': index === highlightedIndex }\" @click=\"selectResult(result, true)\">\r\n        {{ result.name }}\r\n      </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n      <!-- 搜索终点的容器 -->\r\n      <div class=\"search-container end\">\r\n        <!-- 图片容器 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src='@/assets/green-circle.png' alt=\"green\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryEnd\" @input=\"onSearchInputChange($event, false)\" placeholder=\"请输入终点\" class=\"search-box search-box-end\"/>\r\n         <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete\" title=\"清空\" @click=\"clc2\">\r\n            <img src='@/assets/cancel.png' alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 修正后的终点搜索结果展示 -->\r\n        <div class=\"search-results\" v-if=\"searchResultsEnd.length && searchQueryEnd\" ref=\"searchResultsEnd\">\r\n    <ul>\r\n      <li v-for=\"(result, index) in searchResultsEnd\" :key=\"index\" :class=\"{ 'highlighted': index === highlightedIndex }\" @click=\"selectResult(result, false)\">\r\n        {{ result.name }}\r\n      </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"search-action\" @click=\"onSearch\" title=\"搜索\">\r\n        <img :src=\"require('@/assets/search.png')\" alt=\"\" class=\"search\">\r\n      </div>\r\n      <!-- 新的覆盖层容器 -->\r\n      <div v-if=\"isLoading\" class=\"loader-overlay\">\r\n      <div class=\"loader\">\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- 地图展示 -->\r\n  <div id=\"viewDiv\"></div>\r\n  <div v-if=\"ismaploading\" class=\"maploader-overlay\">\r\n    <div class=\"maploader\">\r\n    </div>\r\n  </div>\r\n  <!-- 时间选择框和路径展示框 -->\r\n  <div class=\"main-container\">\r\n    <!-- 时间选择框 -->\r\n    <div class=\"choose-time\">\r\n      <div class=\"form-group\">\r\n        <label for=\"date-input\">选择日期：</label>\r\n        <input id=\"date-input\" type=\"date\" v-model=\"selectedDate\" :min=\"minDate\" :max=\"maxDate\" :class=\"{ 'invalid-date': isDateDisabled(selectedDate) }\" @change=\"handleDateChange\">\r\n        <label for=\"time-input\">选择时间：</label>\r\n        <input id=\"time-input\" type=\"time\" v-model=\"formattedTime\" @input=\"onTimeInputChange\" step=\"600\"> <!-- 600秒 = 10分钟 -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Map from '@geoscene/core/Map.js'\r\nimport MapView from '@geoscene/core/views/MapView.js'\r\nimport Graphic from '@geoscene/core/Graphic'\r\nimport Point from '@geoscene/core/geometry/Point.js'\r\nimport GraphicsLayer from '@geoscene/core/layers/GraphicsLayer'\r\nimport axios from 'axios'\r\nimport Extent from '@geoscene/core/geometry/Extent'\r\nimport { ref, nextTick } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport BasemapGallery from '@geoscene/core/widgets/BasemapGallery.js'\r\nimport FeatureLayer from '@geoscene/core/layers/FeatureLayer.js'\r\nimport Compass from '@geoscene/core/widgets/Compass.js'\r\nimport ScaleBar from '@geoscene/core/widgets/ScaleBar.js'\r\nimport DistanceMeasurement2D from '@geoscene/core/widgets/DistanceMeasurement2D.js'\r\nimport LayerList from '@geoscene/core/widgets/LayerList'\r\n\r\nexport default {\r\n  name: 'IntermediatePageView',\r\n  setup () {\r\n    const searchQueryStart = ref('')\r\n    const searchQueryEnd = ref('')\r\n    const selectedResultStart = ref(null)\r\n    const selectedResultEnd = ref(null)\r\n    const router = useRouter()\r\n\r\n    return {\r\n      searchQueryStart,\r\n      searchQueryEnd,\r\n      selectedResultStart,\r\n      selectedResultEnd,\r\n      router\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      searchResults: [],\r\n      searchResultsEnd: [],\r\n      isLoading: false,\r\n      ismaploading: true,\r\n      selectedDate: '', // 用户选择的日期\r\n      selectedTime: '', // 用户选择的时间\r\n      BasemapLayer: null, // 默认底图\r\n      highlightedIndex: -1 // 高亮的搜索结果索引\r\n    }\r\n  },\r\n  // 在组件挂载时初始化地图\r\n  mounted () {\r\n    if (this.$route.query.start) {\r\n      // 如果URL中有起点参数，解析并设置为选中结果\r\n      this.selectedResultStart = JSON.parse(this.$route.query.start)\r\n    }\r\n    if (this.$route.query.end) {\r\n      // 如果URL中有终点参数，解析并设置为选中结果\r\n      this.selectedResultEnd = JSON.parse(this.$route.query.end)\r\n    }\r\n    // 解析URL参数\r\n    this.parseUrlParams()\r\n    // 初始化地图\r\n    this.initMap()\r\n    // 设置定时器，每隔1分钟更新时间\r\n    setInterval(() => { this.updateTime() }, 60000)\r\n    window.addEventListener('keydown', this.handleKeydown)\r\n  },\r\n  beforeUnmount () {\r\n    window.removeEventListener('keydown', this.handleKeydown)\r\n  },\r\n  computed: {\r\n    minDate () {\r\n      return '2024-01-01'\r\n    },\r\n    maxDate () {\r\n      return '2024-12-31'\r\n    },\r\n    formattedTime () {\r\n      // 格式化时间为10分钟间隔\r\n      if (!this.selectedTime) return ''\r\n      const [hours, minutes] = this.selectedTime.split(':').map(Number)\r\n      const roundedMinutes = Math.floor(minutes / 10) * 10\r\n      return `${String(hours).padStart(2, '0')}:${String(roundedMinutes).padStart(2, '0')}`\r\n    }\r\n  },\r\n  methods: {\r\n    // 处理时间输入变化\r\n    onTimeInputChange (event) {\r\n      const value = event.target.value\r\n      const [hours, minutes] = value.split(':').map(Number)\r\n      const roundedMinutes = Math.floor(minutes / 10) * 10\r\n      this.selectedTime = `${String(hours).padStart(2, '0')}:${String(roundedMinutes).padStart(2, '0')}`\r\n    },\r\n    // 检查日期是否被禁用\r\n    isDateDisabled (date) {\r\n      if (!date) return false\r\n      const selected = new Date(date)\r\n      const month = selected.getMonth() + 1 // 月份从0开始\r\n      const day = selected.getDate()\r\n      if (month >= 1 && month <= 7 && day !== 15) {\r\n        return true\r\n      }\r\n      if (month === 8 && day <= 25) {\r\n        return true\r\n      }\r\n      if ((month === 10 || month === 12) && day !== 15) {\r\n        return true\r\n      }\r\n      if (month === 11 && day >= 9) {\r\n        return true\r\n      }\r\n      return false\r\n    },\r\n    // 处理日期变化\r\n    handleDateChange (event) {\r\n      const date = event.target.value\r\n      if (this.isDateDisabled(date)) {\r\n        // alert('选择的日期未进行模拟，请选择其他日期。可选日期为，1-7月的15日，8月20日-9月30日，10-12月的15日。')\r\n        alert('抱歉，选择的日期未进行模拟，请选择其他日期。可选日期为，9月1日-9月30日，11月1日到9日，以及其他月份的15日.')\r\n        this.selectedDate = ''\r\n      }\r\n    },\r\n    // 处理键盘按下事件\r\n    handleKeydown (event) {\r\n      if (this.searchResults.length && this.searchQueryStart) {\r\n        switch (event.key) {\r\n          case 'Escape':\r\n            this.searchResults = []\r\n            break\r\n          case 'Tab':\r\n            event.preventDefault()\r\n            this.highlightedIndex = (this.highlightedIndex + 1) % this.searchResults.length\r\n            nextTick(() => {\r\n              const highlightedElement = this.$refs.searchResultsStart.querySelector('li.highlighted')\r\n              if (highlightedElement) {\r\n                highlightedElement.scrollIntoView({ block: 'nearest', behavior: 'smooth' })\r\n              }\r\n            })\r\n            break\r\n          case 'Enter':\r\n            if (this.highlightedIndex >= 0 && this.highlightedIndex < this.searchResults.length) {\r\n              this.selectResult(this.searchResults[this.highlightedIndex], true)\r\n            }\r\n            break\r\n        }\r\n      } else if (this.searchResultsEnd.length && this.searchQueryEnd) {\r\n        switch (event.key) {\r\n          case 'Escape':\r\n            this.searchResultsEnd = []\r\n            break\r\n          case 'Tab':\r\n            event.preventDefault()\r\n            this.highlightedIndex = (this.highlightedIndex + 1) % this.searchResultsEnd.length\r\n            nextTick(() => {\r\n              const highlightedElement = this.$refs.searchResultsEnd.querySelector('li.highlighted')\r\n              if (highlightedElement) {\r\n                highlightedElement.scrollIntoView({ block: 'nearest', behavior: 'smooth' })\r\n              }\r\n            })\r\n            break\r\n          case 'Enter':\r\n            if (this.highlightedIndex >= 0 && this.highlightedIndex < this.searchResultsEnd.length) {\r\n              this.selectResult(this.searchResultsEnd[this.highlightedIndex], false)\r\n            }\r\n            break\r\n        }\r\n      }\r\n    },\r\n    // 更新时间，日期\r\n    updateTime () {\r\n      const now = new Date()\r\n      const currentTime = `${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`\r\n      // 只有当 selectedTime 是当前时间时，才更新\r\n      if (!this.isTimeFromUrl || this.selectedTime === currentTime) {\r\n        this.selectedTime = currentTime\r\n        this.isTimeFromUrl = false // 重置标志位\r\n      }\r\n    },\r\n    // 清空搜索框\r\n    clc1 () {\r\n      // 清空搜索框1\r\n      this.searchQueryStart = ''\r\n    },\r\n    // 清空搜索框2\r\n    clc2 () {\r\n      this.searchQueryEnd = ''\r\n    },\r\n    // 解析URL参数\r\n    parseUrlParams () {\r\n      // 获取URL中的查询参数\r\n      const urlParams = new URLSearchParams(window.location.search)\r\n      const startParam = urlParams.get('start')\r\n      const endParam = urlParams.get('end')\r\n      const dateParam = urlParams.get('date')\r\n      const timeParam = urlParams.get('time')\r\n      // const BasemapLayer = urlParams.get('BasemapLayer')\r\n      // 如果有起点参数，进行解析\r\n      if (startParam) {\r\n        try {\r\n          const startObj = JSON.parse(decodeURIComponent(startParam))\r\n          if (startObj && startObj.address) {\r\n            this.searchQueryStart = startObj.name\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing start parameter:', e)\r\n        }\r\n      }\r\n      // 如果有终点参数，进行解析\r\n      if (endParam) {\r\n        try {\r\n          const endObj = JSON.parse(decodeURIComponent(endParam))\r\n          if (endObj && endObj.address) {\r\n            this.searchQueryEnd = endObj.name // 绑定终点查询字符串\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing end parameter:', e)\r\n        }\r\n      }\r\n      // 如果有日期参数，进行解析\r\n      if (dateParam) {\r\n        this.selectedDate = dateParam\r\n      }\r\n      // 如果有时间参数，进行解析\r\n      if (timeParam) {\r\n        this.selectedTime = timeParam\r\n        this.isTimeFromUrl = true // 设置标志位\r\n      }\r\n\r\n      this.created()\r\n      // 如果有底图参数，进行解析\r\n      // if (BasemapLayer) {\r\n      //   this.BasemapLayer = BasemapLayer\r\n      // }\r\n    },\r\n    // 交换起点和终点信息并跳转页面\r\n    swap () {\r\n      const tempQuery = this.searchQueryStart\r\n      this.searchQueryStart = this.searchQueryEnd\r\n      this.searchQueryEnd = tempQuery\r\n      // 交换 selectedResultStart 和 selectedResultEnd\r\n      const tempResult = this.selectedResultStart\r\n      this.selectedResultStart = this.selectedResultEnd\r\n      this.selectedResultEnd = tempResult\r\n      // 跳转到 intermediate-page 页面，并传递交换后的起点和终点信息\r\n      this.router.push({\r\n        path: '/lu-jing-gui-hua/result',\r\n        query: {\r\n          start: JSON.stringify(this.selectedResultStart),\r\n          end: JSON.stringify(this.selectedResultEnd),\r\n          date: this.selectedDate,\r\n          time: this.selectedTime,\r\n          BasemapLayer: this.BasemapName\r\n        }\r\n      })\r\n    },\r\n    // 处理搜索框输入变化\r\n    onSearchInputChange (event, isStart) {\r\n      // 获取搜索框的值\r\n      const query = event.target.value\r\n      const searchResultsField = isStart ? 'searchResults' : 'searchResultsEnd'\r\n      // 检查是否是输入法临时输入\r\n      if (query.includes(\"'\")) {\r\n        console.log('输入法临时输入，不发送请求')\r\n        return\r\n      }\r\n      // 发送请求获取搜索结果\r\n      if (query.length >= 2) {\r\n        // 使用的是本地的Flask后端，需要根据实际情况修改URL，结合后端接口的标识使用不同的URL\r\n        fetch(`${process.env.VUE_APP_API_URL}/api/search`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ searchQueryStart: query })\r\n        })\r\n        // 解析JSON响应\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            this[searchResultsField] = data\r\n          })\r\n          .catch((error) => {\r\n            console.error('错误:', error)\r\n          })\r\n      } else {\r\n        // 清空搜索结果\r\n        this[searchResultsField] = []\r\n      }\r\n    },\r\n    // 选择搜索结果\r\n    selectResult (result, isStart = true) {\r\n      // poi所含的信息\r\n      const simplifiedResult = {\r\n        name: result.name,\r\n        address: result.address,\r\n        wgs84_latitude: result.wgs84_latitude,\r\n        wgs84_longitude: result.wgs84_longitude,\r\n        location: [result.wgs84_longitude, result.wgs84_latitude],\r\n        baidu_index: result.baidu_index,\r\n        baidu_latitude: result.baidu_latitude,\r\n        baidu_longitude: result.baidu_longitude,\r\n        id: result.id,\r\n        label: result.label\r\n      }\r\n      let isUpdate = false\r\n\r\n      // const BasemapName = this.mapView.map.basemap.title\r\n      const BasemapName = this.BasemapLayer\r\n      console.log('BasemapName:', BasemapName)\r\n\r\n      if (isStart && this.selectedResultStart) {\r\n        isUpdate = true\r\n        this.selectedResultStart = simplifiedResult\r\n        this.searchQueryStart = simplifiedResult.name\r\n        this.searchResults = []\r\n      } else if (!isStart && this.selectedResultEnd) {\r\n        isUpdate = true\r\n        this.selectedResultEnd = simplifiedResult\r\n        this.searchQueryEnd = simplifiedResult.name\r\n        this.searchResultsEnd = []\r\n      } else {\r\n        // 设置选中结果并清空搜索结果\r\n        if (isStart) {\r\n          this.selectedResultStart = simplifiedResult\r\n          this.searchQueryStart = simplifiedResult.name\r\n          this.searchResults = []\r\n        } else {\r\n          this.selectedResultEnd = simplifiedResult\r\n          this.searchQueryEnd = simplifiedResult.name\r\n          this.searchResultsEnd = []\r\n        }\r\n      }\r\n      // 检查是否需要导航\r\n      const shouldNavigate = this.selectedResultStart || this.selectedResultEnd\r\n      // 导航逻辑\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        this.navigateToResultPage()\r\n      } else if (shouldNavigate) {\r\n        this.navigateToIntermediatePage(isStart ? 'start' : 'end', simplifiedResult, isUpdate)\r\n      }\r\n    },\r\n    // 导航到结果页面\r\n    navigateToResultPage () {\r\n      this.$router.push({\r\n        path: '/lu-jing-gui-hua/result',\r\n        // 带着参数跳转，将经纬度绑定传递给result页面\r\n        query: {\r\n          start: JSON.stringify({\r\n            ...this.selectedResultStart,\r\n            location: [this.selectedResultStart.wgs84_longitude, this.selectedResultStart.wgs84_latitude]\r\n          }),\r\n          end: JSON.stringify({\r\n            ...this.selectedResultEnd,\r\n            location: [this.selectedResultEnd.wgs84_longitude, this.selectedResultEnd.wgs84_latitude]\r\n          }),\r\n          date: this.selectedDate,\r\n          time: this.selectedTime,\r\n          // BasemapLayer: this.mapView.map.basemap.title\r\n          BasemapLayer: this.BasemapName\r\n        }\r\n      })\r\n    },\r\n    navigateToIntermediatePage (type, result, isUpdate = false) {\r\n      const path = '/lu-jing-gui-hua/intermediate-page'\r\n      const query = {\r\n        [type]: JSON.stringify(result),\r\n        date: this.selectedDate,\r\n        time: this.selectedTime,\r\n        // BasemapLayer: this.mapView.map.basemap.title\r\n        BasemapLayer: this.BasemapName\r\n      }\r\n\r\n      if (isUpdate) {\r\n        // 更新URL并刷新页面\r\n        this.$router.replace({ path, query }).then(() => {\r\n          window.location.reload()\r\n        })\r\n      } else {\r\n        // 正常导航\r\n        this.$router.push({ path, query })\r\n      }\r\n    },\r\n    // 处理路径规划事件\r\n    onSearch () {\r\n      // 检查是否两个结果都已选择\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        // 显示加载动画\r\n        this.isLoading = true\r\n        // 构造包含location属性的起点和终点对象\r\n        const startWithLocation = {\r\n          ...this.selectedResultStart,\r\n          location: [this.selectedResultStart.wgs84_longitude, this.selectedResultStart.wgs84_latitude]\r\n        }\r\n        const endWithLocation = {\r\n          ...this.selectedResultEnd,\r\n          location: [this.selectedResultEnd.wgs84_longitude, this.selectedResultEnd.wgs84_latitude]\r\n        }\r\n        const formattedTime = this.selectedTime.length === 5 ? `${this.selectedTime}:00` : this.selectedTime\r\n        console.log('Formatted Time:', formattedTime) // 打印时间参数\r\n        // 发送请求到后端进行路径规划\r\n        axios.post(`${process.env.VUE_APP_API_URL}/api/route/plan`, { start: startWithLocation, end: endWithLocation, date: this.selectedDate, time: formattedTime })\r\n          .then(response => {\r\n            // 后端返回的路径规划结果ID\r\n            const defaultRoutePlanId = response.data.default_id\r\n            const timeBasedRoutePlanId = response.data.time_based_id\r\n            console.log('默认路径规划结果ID:', defaultRoutePlanId)\r\n            console.log('基于时间的路径规划结果ID:', timeBasedRoutePlanId)\r\n            console.log('路径规划成功，时间日期是:', this.selectedDate, this.selectedTime)\r\n            // 隐藏加载动画\r\n            this.isLoading = false\r\n            // 使用Vue Router跳转到结果页面，并传递路径规划结果ID\r\n            this.$router.push({\r\n              path: '/lu-jing-gui-hua/route',\r\n              query: {\r\n                start: JSON.stringify(startWithLocation),\r\n                end: JSON.stringify(endWithLocation),\r\n                default_id: defaultRoutePlanId,\r\n                time_based_id: timeBasedRoutePlanId,\r\n                date: this.selectedDate,\r\n                time: formattedTime,\r\n                // BasemapLayer: this.mapView.map.basemap.title\r\n                BasemapLayer: this.BasemapName\r\n              }\r\n            })\r\n          })\r\n          .catch(error => {\r\n            console.error(error)\r\n            // 隐藏加载动画\r\n            this.isLoading = false\r\n            // 错误处理，例如显示提示信息\r\n            alert('路径规划失败，请稍后再试。')\r\n          })\r\n      } else {\r\n        // 如果起点或终点未选择，显示提示信息\r\n        alert('请确保起点和终点都已选择。')\r\n      }\r\n    },\r\n    // 初始化地图\r\n    initMap () {\r\n      const map = new Map({\r\n        // basemap: 'tianditu-vector' // 使用适合的底图\r\n        basemap: this.BasemapName || 'tianditu-vector'\r\n      })\r\n      this.map = map\r\n\r\n      this.view = new MapView({\r\n        container: 'viewDiv', // 使用正确的容器ID\r\n        map: map,\r\n        center: [114.3, 30.7], // 默认中心点坐标\r\n        zoom: 4, // 默认缩放级别\r\n        constraints: {\r\n          geometry: {\r\n            type: 'extent',\r\n            xmin: 113.6,\r\n            ymin: 29.9,\r\n            xmax: 115.0,\r\n            ymax: 31.3\r\n          },\r\n          minScale: 500,\r\n          maxScale: 2000000,\r\n          rotationEnabled: false,\r\n          snapToZoom: false\r\n        }\r\n      })\r\n      // 创建 BasemapGallery 实例\r\n      const basemapGallery = new BasemapGallery({\r\n        view: this.view,\r\n        source: {\r\n          query: {\r\n            title: '\"Basemaps for Developers\" AND owner:geoscenedev'\r\n          }\r\n        }\r\n      })\r\n      // 监听底图选择事件\r\n      basemapGallery.watch('activeBasemap', (newBasemap) => {\r\n        this.handleBasemapChange(newBasemap)\r\n      })\r\n      // 创建 LayerList 实例\r\n      const layerList = new LayerList({\r\n        view: this.view\r\n      })\r\n      // 创建 Compass 实例\r\n      const compass = new Compass({\r\n        view: this.view\r\n      })\r\n      // 创建 ScaleBar 实例\r\n      const scaleBar = new ScaleBar({\r\n        view: this.view,\r\n        unit: 'metric', // 使用公制单位\r\n        style: 'ruler' // 使用标尺样式\r\n      })\r\n      // 创建 DistanceMeasurement2D 实例\r\n      const distanceMeasurement2D = new DistanceMeasurement2D({\r\n        view: this.view,\r\n        unit: 'metric',\r\n        unitOptions: {\r\n          metric: ['kilometers', 'meters'],\r\n          nonMetric: ['miles', 'feet']\r\n        },\r\n        iconClass: 'esri-icon-measure-line' // 设置图标类\r\n      })\r\n      // 将 DistanceMeasurement2D 添加到地图视图的左下角\r\n      this.view.ui.add(distanceMeasurement2D, {\r\n        position: 'bottom-leading',\r\n        index: 0 // 确保它在最上面\r\n      })\r\n      // 将 BasemapGallery 添加到地图视图的右下角\r\n      this.view.ui.add(basemapGallery, {\r\n        position: 'bottom-right',\r\n        index: 0\r\n      })\r\n      // 将 LayerList 添加到地图视图的右下角\r\n      this.view.ui.add(layerList, {\r\n        position: 'bottom-right',\r\n        index: 1\r\n      })\r\n      // 移动缩放控件到左下角\r\n      this.view.ui.move('zoom', {\r\n        position: 'bottom-left',\r\n        index: 1\r\n      })\r\n      // 将指南针添加到地图视图的左下角\r\n      this.view.ui.add(compass, {\r\n        position: 'bottom-left',\r\n        index: 2\r\n      })\r\n      // 将 ScaleBar 添加到地图视图的左下角\r\n      this.view.ui.add(scaleBar, {\r\n        position: 'bottom-left',\r\n        index: 3\r\n      })\r\n      // 创建一个新的GraphicsLayer实例，以便在地图上绘制点\r\n      const graphicsLayer = new GraphicsLayer(\r\n        {\r\n          title: '起点和终点'\r\n        }\r\n      )\r\n      map.add(graphicsLayer)\r\n      // 创建 FeatureLayer 实例\r\n      const featureLayer = new FeatureLayer({\r\n        url: 'https://www.geosceneonline.cn/server/rest/services/Hosted/wuhan_village/FeatureServer',\r\n        title: '武汉县区面',\r\n        renderer: {\r\n          type: 'simple', // 使用简单渲染器\r\n          symbol: {\r\n            type: 'simple-fill', // 使用简单填充符号\r\n            color: [0, 0, 0, 0], // 填充颜色透明\r\n            outline: {\r\n              color: [0, 0, 0, 1], // 轮廓颜色红色\r\n              width: 1\r\n            }\r\n          }\r\n        },\r\n        popupTemplate: {\r\n          content: [{\r\n            type: 'fields',\r\n            fieldInfos: [{\r\n              fieldName: '县区name',\r\n              label: '县区名称'\r\n            }]\r\n          }]\r\n        }\r\n      })\r\n      // 将 FeatureLayer 添加到地图\r\n      map.add(featureLayer)\r\n      // 当视图加载完成时，绘制起点和终点\r\n      this.view.when(() => {\r\n        this.drawPoints(graphicsLayer)\r\n        this.adjustView()\r\n        this.ismaploading = false\r\n      }).catch((err) => {\r\n        console.error('MapView initialization error:', err)\r\n      })\r\n    },\r\n    // 调整视图以适应起点和终点\r\n    adjustView () {\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        const padding = 0.01 // 调整这个值以增加或减少边界的放宽程度\r\n        const extent = new Extent({\r\n          xmin: Math.min(this.selectedResultStart.location[0], this.selectedResultEnd.location[0]) - 10 * padding,\r\n          ymin: Math.min(this.selectedResultStart.location[1], this.selectedResultEnd.location[1]) - 10 * padding,\r\n          xmax: Math.max(this.selectedResultStart.location[0], this.selectedResultEnd.location[0]) + 10 * padding,\r\n          ymax: Math.max(this.selectedResultStart.location[1], this.selectedResultEnd.location[1]) + 10 * padding\r\n        })\r\n        this.view.goTo(extent).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      } else if (this.selectedResultStart) {\r\n        this.view.goTo({\r\n          center: [this.selectedResultStart.location[0], this.selectedResultStart.location[1]],\r\n          zoom: 10\r\n        }).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      } else if (this.selectedResultEnd) {\r\n        this.view.goTo({\r\n          center: [this.selectedResultEnd.location[0], this.selectedResultEnd.location[1]],\r\n          zoom: 10\r\n        }).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      }\r\n    },\r\n    // 绘制起点和终点\r\n    drawPoints (graphicsLayer) {\r\n      // 绘制起点\r\n      if (this.selectedResultStart) {\r\n        const start = this.selectedResultStart\r\n        const startPoint = new Point({\r\n          longitude: start.location[0],\r\n          latitude: start.location[1]\r\n        })\r\n\r\n        const startGraphic = new Graphic({\r\n          // 点参数设置\r\n          geometry: startPoint,\r\n          symbol: {\r\n            type: 'simple-marker', // 自动转换为 SimpleMarkerSymbol\r\n            color: 'red',\r\n            size: '20px'\r\n          },\r\n          popupTemplate: {\r\n            title: '起点信息',\r\n            content: [\r\n              {\r\n                type: 'fields',\r\n                fieldInfos: [\r\n                  {\r\n                    fieldName: 'address',\r\n                    label: '地址'\r\n                  },\r\n                  {\r\n                    fieldName: 'name',\r\n                    label: '名称'\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          attributes: start\r\n        })\r\n\r\n        graphicsLayer.add(startGraphic)\r\n      }\r\n      // 绘制终点\r\n      if (this.selectedResultEnd) {\r\n        const end = this.selectedResultEnd\r\n        const endPoint = new Point({\r\n          longitude: end.location[0],\r\n          latitude: end.location[1]\r\n        })\r\n        const endGraphic = new Graphic({\r\n          geometry: endPoint,\r\n          symbol: {\r\n            type: 'simple-marker',\r\n            color: 'green',\r\n            size: '20px'\r\n          },\r\n          popupTemplate: {\r\n            title: '终点信息',\r\n            content: [\r\n              {\r\n                type: 'fields',\r\n                fieldInfos: [\r\n                  {\r\n                    fieldName: 'address',\r\n                    label: '地址'\r\n                  },\r\n                  {\r\n                    fieldName: 'name',\r\n                    label: '名称'\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          attributes: end\r\n        })\r\n        graphicsLayer.add(endGraphic)\r\n      }\r\n    },\r\n    // 处理底图选择\r\n    handleBasemapChange (basemap) {\r\n      const basemapMapping = {\r\n        '天地图-矢量（球面墨卡托投影）': 'tianditu-vector',\r\n        '天地图-影像（球面墨卡托投影）': 'tianditu-image',\r\n        '天地图-地形（球面墨卡托投影）': 'tianditu-topography'\r\n      }\r\n      // 检查 basemap.title 是否是中文\r\n      if (basemapMapping[basemap.title]) {\r\n        this.BasemapName = basemapMapping[basemap.title]\r\n      } else {\r\n        this.BasemapName = basemap.title\r\n      }\r\n      console.log('Basemap changed:', this.BasemapName)\r\n      const urlParams = new URLSearchParams(window.location.search)\r\n      urlParams.set('BasemapLayer', this.BasemapName)\r\n      window.history.replaceState({}, '', `${window.location.pathname}?${urlParams}`)\r\n    },\r\n    created () {\r\n      const BasemapLayer = this.$route.query.BasemapLayer\r\n      const basemapMapping = {\r\n        '天地图-矢量（球面墨卡托投影）': 'tianditu-vector',\r\n        '天地图-影像（球面墨卡托投影）': 'tianditu-image',\r\n        '天地图-地形（球面墨卡托投影）': 'tianditu-topography'\r\n      }\r\n\r\n      // 如果有底图参数，进行解析\r\n      if (BasemapLayer) {\r\n        // 检查 BasemapLayer 是否是中文\r\n        if (basemapMapping[BasemapLayer]) {\r\n          this.BasemapName = basemapMapping[BasemapLayer]\r\n        } else {\r\n          this.BasemapName = BasemapLayer\r\n        }\r\n      }\r\n      console.log('BasemapLayer is', this.BasemapName)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/*之后要自己调样式的大小，这个仅作参考*/\r\n#viewDiv {\r\n  position: absolute; /* 固定定位 */\r\n  top: 0; /* 紧贴网页顶部 */\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height:100%; /* 将高度设置为视口高度的100% */\r\n  width: 100%; /* 将宽度设置为视口宽度的100% */\r\n  z-index: -1; /* 设置较低的z-index值，使其在App.vue的下部分 */\r\n  margin: auto;\r\n}\r\n\r\n.lu-jing-gui-hua {\r\n  position: fixed; /* 固定定位 */\r\n  display: flex;\r\n  flex-direction: column; /* 使子元素垂直排列,使大框和revert小框水平分布 */\r\n  z-index: 2;\r\n}\r\n\r\n.search-containers {\r\n  display: flex;\r\n  flex-direction: column; /* 保持垂直排列 */\r\n  justify-content: flex-start; /* 从顶部开始排列 */\r\n  align-items: flex-start; /* 子元素沿交叉轴的开始边缘对齐，即顶部对齐 */\r\n  width: 357px; /* 设置一个固定宽度 */\r\n  height:85px;\r\n  padding-right: 10px; /* 根据需要调整，确保搜索框周围有足够空间 */\r\n  padding-left:32px;/*整个搜索框的左边空间*/\r\n  padding-top: 6px;\r\n  background: #FFFFFF; /* 应用深色毛玻璃效果 */\r\n  -webkit-backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  border-top-left-radius: 10px; /* 设置圆角 */\r\n  border-top-right-radius: 10px;\r\n  border: 1px solid rgba(255, 255, 255, 0.45); /* 添加边框 */\r\n  position: absolute; /* 添加相对定位 */\r\n  margin-left: 9px;\r\n}\r\n\r\n/* 移除左右外边距 */\r\n.search-container.start,\r\n.search-container.end {\r\n  position: relative; /* 设置相对定位 */\r\n  margin-top: 5px;\r\n  padding-left: 0px; /* 留出图片的空间 */\r\n  margin-left: 24px; /* 根据侧边栏宽度来设置左边距 */\r\n}\r\n\r\n/* 更改 输入字体的框 的样式 */\r\n.search-box {\r\n  position: relative; /* 允许绝对定位的子元素 */\r\n  padding: 8px 8px; /* 初始内边距 */\r\n  border: 2px solid #ccc;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  flex-grow: 1;\r\n  box-sizing: border-box;\r\n  text-indent: 0px; /* 初始文本缩进，保持文本在左侧 */\r\n  width: 303px; /* 使搜索框填充容器 */\r\n  display: flex;\r\n  align-items: center; /* 垂直居中对齐 */\r\n}\r\n\r\n/* 鼠标悬停时只改变边框颜色，不改变宽度 */\r\n.search-box:hover {\r\n  border-color: rgb(109, 72, 72); /* 改变边框颜色而不是宽度 */\r\n}\r\n\r\n.search-box:focus {\r\n  border-width: 2px;\r\n  border-color: rgb(109, 72, 72);\r\n  text-indent: 0px; /* 聚焦时减少文本缩进 */\r\n}\r\n\r\n.search-results {\r\n  position: absolute;\r\n  z-index: 9999 !important; /* !important可以使这个css代码优先执行，让这个框显示为最高层级 */\r\n  top: 105%; /* 确保列表紧贴搜索框的底部 */\r\n  left: 0;\r\n  width: 100%; /* 使列表宽度与搜索框相同 */\r\n  background-color: white; /* 或其他背景色，确保列表可见 */\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1); /* 可选：添加一些阴影以提升视觉效果 */\r\n  max-height: 200px; /* 限制最大高度，5行大约160px，根据实际行高调整 */\r\n  overflow-y: auto; /* 超出部分显示滚动条 */\r\n  display: flex;\r\n  border-radius: 10px; /* 添加圆角 */\r\n}\r\n\r\n.search-results li:hover {\r\n  text-decoration: underline; /* 添加下划线 */\r\n  background-color: #f0f0f0; /* 更改背景颜色以提高对比度 */\r\n  cursor: pointer; /* 更改鼠标指针为手形，更明显地指示可点击 */\r\n}\r\n\r\n/* 查询按钮的容器样式 */\r\n.search-action {\r\n  display: flex;\r\n  position: absolute; /* 绝对定位 */\r\n  margin-left: 328px; /* 与左边界保持一定距离 */\r\n  top: 11px; /* 与底部保持一定距离 */\r\n  border: 2px solid  #ccc;\r\n  justify-content: flex-start;\r\n  border-radius: 10px;\r\n  cursor: pointer; /* 鼠标悬停时显示指针 */\r\n}\r\n\r\n/* 将CSS链接转换为@import语句 */\r\n@import url(\"https://js.geoscene.cn/4.27/@geoscene/core/assets/geoscene/themes/light/main.css\");\r\n\r\n.car{\r\n  padding-top:3px;\r\n  left:1px;\r\n}\r\n\r\n/* 交换的容器样式 */\r\n.revert{\r\n  width:25px;\r\n  height:28px;\r\n  padding-top: 10px;\r\n  padding-left: 3px;\r\n}\r\n\r\n.revert-containers{\r\n  position: absolute; /* 或使用 fixed，根据需要 */\r\n  left: 0; /* 侧边栏靠在最左边 */\r\n  top: 0; /* 根据需要调整垂直位置 */\r\n  width: 20px;\r\n  height:85px;\r\n  padding-left:5px;\r\n  background-color: #FFFFFF;\r\n  border-radius: 10px; /* 设置圆角 */\r\n  -webkit-backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n}\r\n\r\n.swap-action button {\r\n  display:flex;\r\n  flex-direction: row; /* 保持水平排列 */\r\n  justify-content: flex-start; /* 水平排列的子元素靠左对齐 */\r\n  position: absolute;\r\n  left: 5px; /* 图标距离父容器左边的距离 */\r\n  top: 50%; /* 垂直居中对齐 */\r\n  transform: translateY(-50%); /* 使用transform属性垂直居中 */\r\n  border:white;/* 边框颜色设置为白色 */\r\n  padding:0px;\r\n  background-color: #FFFFFF;\r\n  cursor: pointer; /* 鼠标悬停时显示指针 */\r\n}\r\n\r\n/* 搜索框框前面的圆圈的样式 */\r\n.search-icon-wrapper {\r\n  display: inline-block; /* 或者使用 flex 布局 */\r\n  position: absolute; /* 绝对定位 */\r\n  left: -20px; /* 根据需要调整 */\r\n  top: 50%;\r\n  transform: translateY(-50%); /* 垂直居中对齐 */\r\n}\r\n\r\n/* 删除logo的样式 */\r\n.search-box-img {/* 作用：使得 删除logo 在搜索框内 */\r\n  display: flex;\r\n  position: absolute;\r\n  left:278px;\r\n  top: 50%;\r\n  transform: translateY(-35%); /* 垂直居中对齐 */\r\n  padding-inline-end: 0px;\r\n}\r\n\r\n.delete{\r\n  cursor: pointer; /* 鼠标悬停时显示指针 */\r\n}\r\n\r\n.delete img {\r\n  pointer-events: none; /* 点击图片时不会影响输入框 （记得改成删除这个框框内容）*/\r\n}\r\n\r\n/* 搜索logo的样式 */\r\n.search-action img {\r\n  transform: scale(0.85); /* 将图片缩放到原始尺寸的50% */\r\n}\r\n\r\n.search-action:hover{\r\n  border-color: rgb(216, 180, 133);\r\n}\r\n\r\n.main-container{\r\n  position: fixed;\r\n  z-index: 1;\r\n}\r\n\r\n.main-container{\r\n  position: absolute;\r\n  z-index: 1;\r\n}\r\n\r\n/* 选择时间框的样式 */\r\n.choose-time{\r\n  transform: none;\r\n  position: absolute;\r\n  display: block;\r\n  width: 390px;\r\n  height: 30px;\r\n  border-bottom-left-radius: 10px; /* 设置圆角 */\r\n  border-bottom-right-radius: 10px;\r\n  background-color:#FFFFFF;\r\n  margin-top: 90px;/* 控制时间选择框在网页垂直方向的位置 */\r\n  padding-left: 10px;\r\n  padding-top: 3px;\r\n  margin-left: 9px;\r\n}\r\n\r\n.form-group label,\r\n.form-group input {\r\n  margin-right: 10px; /* 右侧外边距 */\r\n}\r\n\r\n/* 新的覆盖层容器样式 */\r\n.loader-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 50%;\r\n  width: 45%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(255, 255, 255, 0.8); /* 可选：添加半透明背景 */\r\n  transform: translateX(-50%);\r\n  z-index: 10; /* 确保覆盖层在最上层 */\r\n}\r\n\r\n/* 加载动画的样式 */\r\n.loader {\r\n  display: inline-grid;\r\n  width: 90px;\r\n  aspect-ratio: 1;\r\n  animation: l3-0 5s steps(10) infinite;\r\n}\r\n\r\n.loader:before,\r\n.loader:after {\r\n  content:\"\";\r\n  grid-area: 1/1;\r\n}\r\n\r\n.loader:before {\r\n  clip-path: polygon(100% 50%,90.45% 79.39%,65.45% 97.55%,34.55% 97.55%,9.55% 79.39%,0% 50%,9.55% 20.61%,34.55% 2.45%,65.45% 2.45%,90.45% 20.61%,100% 50%,85.6% 24.14%,63.6% 8.15%,36.4% 8.15%,14.4% 24.14%,6% 50%,14.4% 75.86%,36.4% 91.85%,63.6% 91.85%,85.6% 75.86%,94% 50%,85.6% 24.14%);\r\n  background: #574951;\r\n}\r\n\r\n.loader:after {\r\n  background: #83988E;\r\n  clip-path: polygon(100% 50%,65.45% 97.55%,9.55% 79.39%,9.55% 20.61%,65.45% 2.45%);\r\n  margin: 27%;\r\n  translate: 46% 0;\r\n  transform-origin: right;\r\n  animation: l3-1 .5s linear infinite;\r\n}\r\n\r\n/* 新的覆盖层容器样式 */\r\n.maploader-overlay {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 25%;\r\n  height: 25%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(255, 255, 255, 0.8); /* 可选：添加半透明背景 */\r\n  transform: translate(-50%, -50%);\r\n  z-index: 10; /* 确保覆盖层在最上层 */\r\n}\r\n\r\n/* 加载动画的样式 */\r\n.maploader {\r\n  display: inline-grid;\r\n  width: 90px;\r\n  aspect-ratio: 1;\r\n  animation: l3-0 5s steps(10) infinite;\r\n}\r\n\r\n.maploader:before,\r\n.maploader:after {\r\n  content:\"\";\r\n  grid-area: 1/1;\r\n}\r\n\r\n.maploader:before {\r\n  clip-path: polygon(100% 50%,90.45% 79.39%,65.45% 97.55%,34.55% 97.55%,9.55% 79.39%,0% 50%,9.55% 20.61%,34.55% 2.45%,65.45% 2.45%,90.45% 20.61%,100% 50%,85.6% 24.14%,63.6% 8.15%,36.4% 8.15%,14.4% 24.14%,6% 50%,14.4% 75.86%,36.4% 91.85%,63.6% 91.85%,85.6% 75.86%,94% 50%,85.6% 24.14%);\r\n  background: #574951;\r\n}\r\n\r\n.maploader:after {\r\n  background: #83988E;\r\n  clip-path: polygon(100% 50%,65.45% 97.55%,9.55% 79.39%,9.55% 20.61%,65.45% 2.45%);\r\n  margin: 27%;\r\n  translate: 46% 0;\r\n  transform-origin: right;\r\n  animation: l3-1 .5s linear infinite;\r\n}\r\n\r\n@keyframes l3-0 {to{rotate: 1turn}}\r\n@keyframes l3-1 {\r\n  0%{rotate:  18deg}\r\n  to{rotate: -18deg}\r\n}\r\n\r\n.search-results li.highlighted {\r\n  background-color: #f0f0f0; /* 高亮背景颜色 */\r\n}\r\n\r\n.geoscene-distance-measurement-2d__clear-button{\r\n  background-color: antiquewhite;\r\n  border-left-color: antiquewhite;\r\n  border-right-color: antiquewhite;\r\n  border-top-color: antiquewhite;\r\n  border-bottom-color: antiquewhite;\r\n  color:rgb(109, 72, 72);\r\n}\r\n\r\n.geoscene-distance-measurement-2d__clear-button:hover{\r\n  background-color: rgb(216, 180, 133);\r\n  border-left-color: rgb(216, 180, 133);\r\n  border-right-color: rgb(216, 180, 133);\r\n  border-top-color: rgb(216, 180, 133);\r\n  border-bottom-color: rgb(216, 180, 133);\r\n  color: rgb(109, 72, 72);\r\n}\r\n\r\n.geoscene-layer-list__item-container{\r\n  background-color: antiquewhite;\r\n  border-left-color: antiquewhite;\r\n  border-right-color: antiquewhite;\r\n  border-top-color: antiquewhite;\r\n  border-bottom-color: antiquewhite;\r\n  color:rgb(109, 72, 72);\r\n}\r\n\r\n.geoscene-layer-list__item-container:hover{\r\n  background-color: rgb(216, 180, 133);\r\n  border-left-color: rgb(216, 180, 133);\r\n  border-right-color: rgb(216, 180, 133);\r\n  border-top-color: rgb(216, 180, 133);\r\n  border-bottom-color: rgb(216, 180, 133);\r\n  color: rgb(109, 72, 72);\r\n}\r\n\r\n.geoscene-distance-measurement-2d__container{\r\n  width:170px;\r\n  margin: auto;\r\n}\r\n\r\n.geoscene-component.geoscene-distance-measurement-2d.geoscene-widget.geoscene-widget--panel{\r\n  width:180px;\r\n}\r\n\r\n/* .geoscene-ui-bottom-right.geoscene-ui-corner{\r\n  width:300px;\r\n} */\r\n\r\n.geoscene-component.geoscene-basemap-gallery.geoscene-widget.geoscene-widget--panel-height-only.geoscene-basemap-gallery--grid{\r\n  width: 200px;\r\n  height: 200px;\r\n}\r\n\r\n.geoscene-component.geoscene-layer-list.geoscene-widget.geoscene-widget--panel{\r\n  width:200px;\r\n}\r\n</style>\r\n","import { render } from \"./IntermediatepageView.vue?vue&type=template&id=67abaf91\"\nimport script from \"./IntermediatepageView.vue?vue&type=script&lang=js\"\nexport * from \"./IntermediatepageView.vue?vue&type=script&lang=js\"\n\nimport \"./IntermediatepageView.vue?vue&type=style&index=0&id=67abaf91&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","key","ref","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","src","_imports_0","_hoisted_4","onClick","_cache","args","$options","swap","title","require","alt","_hoisted_5","_hoisted_6","_imports_1","type","$event","$setup","searchQueryStart","onInput","onSearchInputChange","placeholder","_hoisted_7","clc1","_imports_2","$data","searchResults","length","_hoisted_8","_renderList","result","index","_normalizeClass","highlightedIndex","selectResult","name","_hoisted_9","_createCommentVNode","_hoisted_10","_imports_3","searchQueryEnd","_hoisted_11","clc2","searchResultsEnd","_hoisted_12","_hoisted_13","onSearch","_hoisted_14","isLoading","_hoisted_15","id","ismaploading","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","for","selectedDate","min","minDate","max","maxDate","isDateDisabled","onChange","handleDateChange","_hoisted_20","formattedTime","onTimeInputChange","step","setup","selectedResultStart","selectedResultEnd","router","useRouter","data","selectedTime","BasemapLayer","mounted","this","$route","query","start","JSON","parse","end","parseUrlParams","initMap","setInterval","updateTime","window","addEventListener","handleKeydown","beforeUnmount","removeEventListener","computed","hours","minutes","split","map","Number","roundedMinutes","Math","floor","String","padStart","methods","event","value","target","date","selected","Date","month","getMonth","day","getDate","alert","preventDefault","nextTick","highlightedElement","$refs","searchResultsStart","querySelector","scrollIntoView","block","behavior","now","currentTime","getHours","getMinutes","isTimeFromUrl","urlParams","URLSearchParams","location","search","startParam","get","endParam","dateParam","timeParam","startObj","decodeURIComponent","address","e","console","error","endObj","created","tempQuery","tempResult","push","path","stringify","time","BasemapName","isStart","searchResultsField","includes","log","fetch","method","headers","body","then","response","json","catch","simplifiedResult","wgs84_latitude","wgs84_longitude","baidu_index","baidu_latitude","baidu_longitude","label","isUpdate","shouldNavigate","navigateToResultPage","navigateToIntermediatePage","$router","replace","reload","startWithLocation","endWithLocation","axios","post","defaultRoutePlanId","default_id","timeBasedRoutePlanId","time_based_id","Map","basemap","view","MapView","container","center","zoom","constraints","geometry","xmin","ymin","xmax","ymax","minScale","maxScale","rotationEnabled","snapToZoom","basemapGallery","BasemapGallery","source","watch","newBasemap","handleBasemapChange","layerList","LayerList","compass","Compass","scaleBar","ScaleBar","unit","style","distanceMeasurement2D","DistanceMeasurement2D","unitOptions","metric","nonMetric","iconClass","ui","add","position","move","graphicsLayer","GraphicsLayer","featureLayer","FeatureLayer","url","renderer","symbol","color","outline","width","popupTemplate","content","fieldInfos","fieldName","when","drawPoints","adjustView","err","padding","extent","Extent","goTo","startPoint","Point","longitude","latitude","startGraphic","Graphic","size","attributes","endPoint","endGraphic","basemapMapping","set","history","replaceState","pathname","__exports__","render"],"sourceRoot":""}