"use strict";(self["webpackChunksun_glare_project"]=self["webpackChunksun_glare_project"]||[]).push([[527],{10527:function(e,t,s){s.r(t),s.d(t,{default:function(){return d}});var r=s(49067),a=s(47966),n=s(15114),i=s(71120),u=s(72465),o=s(41312),h=s(29153),y=s(33292),c=s(86121),p=s(95477),l=s(59316),_=s(66607),g=s(27678);class d{constructor(){this._queryEngine=null,this._customParameters=null,this._snapshotFeatures=async e=>{const{objectIdField:t}=this._queryEngine,s=await(0,_.x$)(this._getFeatureUrl??"",this._featureType.typeName,this._getFeatureOutputFormat,{customParameters:this._customParameters,dateFields:this._queryEngine.fieldsIndex.dateFields.map((e=>e.name)),signal:e});await(0,p.sO)(s),(0,i.Te)(e);const r=(0,p.bd)(s,{geometryType:this._queryEngine.geometryType,hasZ:!1,objectIdField:t});if(!(0,u.aI)(this._queryEngine.spatialReference,u.w5))for(const n of r)null!=n.geometry&&(n.geometry=(0,o.Ux)((0,y.Cv)((0,o.zv)(n.geometry,this._queryEngine.geometryType,!1,!1),u.w5,this._queryEngine.spatialReference)));let a=1;for(const n of r){const e={};(0,l.MB)(this._fieldsIndex,e,n.attributes,!0),n.attributes=e,null==n.attributes[t]&&(n.objectId=n.attributes[t]=a++)}return r}}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(e,t){const{getFeatureUrl:s,getFeatureOutputFormat:r,spatialReference:a,fields:n,geometryType:u,featureType:o,objectIdField:y,customParameters:p}=e;this._featureType=o,this._customParameters=p,this._getFeatureUrl=s,this._getFeatureOutputFormat=r,this._fieldsIndex=new g.A(n),await this._checkProjection(a),(0,i.Te)(t),this._queryEngine=new c.d({fields:n,geometryType:u,hasM:!1,hasZ:!1,objectIdField:y,spatialReference:a,timeInfo:null,featureStore:new h.A({geometryType:u,hasM:!1,hasZ:!1})});const l=await this._snapshotFeatures(t.signal);return this._queryEngine.featureStore.addMany(l),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new a.A("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){return this._customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=(0,r.UT)(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),e&&this._queryEngine.featureStore.addMany(e)}),(e=>{this._queryEngine.featureStore.clear(),(0,i.zf)(e)||n.A.getLogger("geoscene.layers.WFSLayer").error(new a.A("wfs-layer:getfeature-error","An error occurred during the GetFeature request",{error:e}))})),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _checkProjection(e){try{await(0,y.Nk)(u.w5,e)}catch{throw new a.A("unsupported-projection","Projection not supported",{spatialReference:e})}}}}}]);
//# sourceMappingURL=527.3d3bd91f.js.map