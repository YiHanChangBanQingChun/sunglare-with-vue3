"use strict";(self["webpackChunksun_glare_project"]=self["webpackChunksun_glare_project"]||[]).push([[7922],{58750:function(e,t,s){s.r(t),s.d(t,{default:function(){return ee}});var i=s(56768),a=s(45130),l=s(24232),n=s(71132),o=s(91971),r=s(1774),d=s(65438);const h={class:"lu-jing-gui-hua"},c={class:"search-containers"},u={class:"revert-containers"},m={class:"swap-action"},p=["src"],g={class:"search-container start"},y={class:"search-box-img"},b={key:0,class:"search-results",ref:"searchResultsStart"},w=["onClick"],R={class:"search-container end"},f={class:"search-box-img"},k={key:0,class:"search-results",ref:"searchResultsEnd"},v=["onClick"],S=["src"],L={key:0,class:"loader-overlay"},E={key:0,class:"maploader-overlay"},I={class:"main-container"},T={class:"choose-time"},x={class:"form-group"},C=["min","max"],_={class:"routelist"},N={class:"cardlist"},D={class:"intro"},Q={class:"intro"},$={class:"intro"},G={class:"intro"};function B(e,t,B,M,j,A){return(0,i.uX)(),(0,i.CE)(i.FK,null,[(0,i.Lk)("div",h,[(0,i.Lk)("div",c,[(0,i.Lk)("div",u,[t[16]||(t[16]=(0,i.Lk)("div",{class:"car"},[(0,i.Lk)("img",{src:n})],-1)),(0,i.Lk)("div",m,[(0,i.Lk)("button",{onClick:t[0]||(t[0]=(...e)=>A.swap&&A.swap(...e)),title:"切换起终点"},[(0,i.Lk)("img",{src:s(70697),alt:"",class:"revert"},null,8,p)])])]),(0,i.Lk)("div",g,[t[18]||(t[18]=(0,i.Lk)("div",{class:"search-icon-wrapper"},[(0,i.Lk)("img",{src:o,alt:"pink"})],-1)),(0,i.bo)((0,i.Lk)("input",{type:"text","onUpdate:modelValue":t[1]||(t[1]=e=>j.searchQueryStart=e),onInput:t[2]||(t[2]=e=>A.onSearchInputChange(e,!0)),placeholder:"请输入起点",class:"search-box search-box-start"},null,544),[[a.Jo,j.searchQueryStart]]),(0,i.Lk)("span",y,[(0,i.Lk)("div",{class:"delete",title:"清空",onClick:t[3]||(t[3]=(...e)=>A.clc1&&A.clc1(...e))},t[17]||(t[17]=[(0,i.Lk)("img",{src:r,alt:"delete1"},null,-1)]))]),j.searchResults.length&&j.searchQueryStart?((0,i.uX)(),(0,i.CE)("div",b,[(0,i.Lk)("ul",null,[((0,i.uX)(!0),(0,i.CE)(i.FK,null,(0,i.pI)(j.searchResults,((e,t)=>((0,i.uX)(),(0,i.CE)("li",{key:t,class:(0,l.C4)({highlighted:t===j.highlightedIndex}),onClick:t=>A.selectResult(e,!0)},(0,l.v_)(e.name),11,w)))),128))])],512)):(0,i.Q3)("",!0)]),(0,i.Lk)("div",R,[t[20]||(t[20]=(0,i.Lk)("div",{class:"search-icon-wrapper"},[(0,i.Lk)("img",{src:d,alt:"green"})],-1)),(0,i.bo)((0,i.Lk)("input",{type:"text","onUpdate:modelValue":t[4]||(t[4]=e=>j.searchQueryEnd=e),onInput:t[5]||(t[5]=e=>A.onSearchInputChange(e,!1)),placeholder:"请输入终点",class:"search-box search-box-end"},null,544),[[a.Jo,j.searchQueryEnd]]),(0,i.Lk)("span",f,[(0,i.Lk)("div",{class:"delete",title:"清空",onClick:t[6]||(t[6]=(...e)=>A.clc2&&A.clc2(...e))},t[19]||(t[19]=[(0,i.Lk)("img",{src:r,alt:"delete1"},null,-1)]))]),j.searchResultsEnd.length&&j.searchQueryEnd?((0,i.uX)(),(0,i.CE)("div",k,[(0,i.Lk)("ul",null,[((0,i.uX)(!0),(0,i.CE)(i.FK,null,(0,i.pI)(j.searchResultsEnd,((e,t)=>((0,i.uX)(),(0,i.CE)("li",{key:t,class:(0,l.C4)({highlighted:t===j.highlightedIndex}),onClick:t=>A.selectResult(e,!1)},(0,l.v_)(e.name),11,v)))),128))])],512)):(0,i.Q3)("",!0)]),(0,i.Lk)("div",{class:"search-action",onClick:t[7]||(t[7]=(...e)=>A.onSearch&&A.onSearch(...e)),title:"搜索"},[(0,i.Lk)("img",{src:s(91060),alt:"",class:"search"},null,8,S)]),j.isLoading?((0,i.uX)(),(0,i.CE)("div",L,t[21]||(t[21]=[(0,i.Lk)("div",{class:"loader"},null,-1)]))):(0,i.Q3)("",!0)])]),t[28]||(t[28]=(0,i.Lk)("div",{id:"viewDiv"},null,-1)),j.ismaploading?((0,i.uX)(),(0,i.CE)("div",E,t[22]||(t[22]=[(0,i.Lk)("div",{class:"maploader"},null,-1)]))):(0,i.Q3)("",!0),(0,i.Lk)("div",I,[(0,i.Lk)("div",T,[(0,i.Lk)("div",x,[t[23]||(t[23]=(0,i.Lk)("label",{for:"date-input"},"选择日期：",-1)),(0,i.bo)((0,i.Lk)("input",{id:"date-input",type:"date","onUpdate:modelValue":t[8]||(t[8]=e=>j.selectedDate=e),min:A.minDate,max:A.maxDate,class:(0,l.C4)({"invalid-date":A.isDateDisabled(j.selectedDate)}),onChange:t[9]||(t[9]=(...e)=>A.handleDateChange&&A.handleDateChange(...e))},null,42,C),[[a.Jo,j.selectedDate]]),t[24]||(t[24]=(0,i.Lk)("label",{for:"time-input"},"选择时间：",-1)),(0,i.bo)((0,i.Lk)("input",{id:"time-input",type:"time","onUpdate:modelValue":t[10]||(t[10]=e=>A.formattedTime=e),onInput:t[11]||(t[11]=(...e)=>A.onTimeInputChange&&A.onTimeInputChange(...e)),step:"600"},null,544),[[a.Jo,A.formattedTime]])])]),(0,i.Lk)("div",null,[(0,i.bF)(a.eB,{name:"fade"},{default:(0,i.k6)((()=>[(0,i.bo)((0,i.Lk)("div",_,[(0,i.Lk)("ul",N,[(0,i.Lk)("div",{class:"route","data-index":"1",onClick:t[12]||(t[12]=e=>A.highlightRoute("noGlareRouteId"))},[(0,i.Lk)("div",{class:"introduction",style:(0,l.Tr)({color:A.getColor(1)})},"无眩光路径",4),(0,i.Lk)("p",D,[(0,i.Lk)("span",null,"用时："+(0,l.v_)(j.totalHours)+"小时"+(0,l.v_)(j.totalMinutes)+"分钟",1),t[25]||(t[25]=(0,i.eW)(" | ")),(0,i.Lk)("span",null,"路长："+(0,l.v_)(j.totalDistance),1)]),(0,i.Lk)("p",Q,[(0,i.Lk)("span",null,"途径："+(0,l.v_)(j.totalPass),1)])]),(0,i.Lk)("div",{class:"route","data-index":"0",onClick:t[13]||(t[13]=e=>A.highlightRoute("defaultRouteId"))},[(0,i.Lk)("div",{class:"introduction",style:(0,l.Tr)({color:A.getColor(0)})},"常规路径",4),(0,i.Lk)("p",$,[(0,i.Lk)("span",null,"用时："+(0,l.v_)(j.noGlareTotalHours)+"小时"+(0,l.v_)(j.noGlareTotalMinutes)+"分钟",1),t[26]||(t[26]=(0,i.eW)(" | ")),(0,i.Lk)("span",null,"路长："+(0,l.v_)(j.noGlareTotalDistance),1)]),(0,i.Lk)("p",G,[(0,i.Lk)("span",null,"途径："+(0,l.v_)(j.noGlareTotalPass),1)])])]),(0,i.Lk)("span",{class:"toggle-button",onClick:t[14]||(t[14]=(...e)=>A.toggleRouteList&&A.toggleRouteList(...e)),title:"隐藏"},t[27]||(t[27]=[(0,i.Lk)("img",{src:r,alt:"delete1"},null,-1)]))],512),[[a.aG,j.isRouteListVisible]])])),_:1}),j.isRouteListVisible?(0,i.Q3)("",!0):((0,i.uX)(),(0,i.CE)("button",{key:0,onClick:t[15]||(t[15]=(...e)=>A.toggleRouteList&&A.toggleRouteList(...e)),class:"open-button"},"展开路线结果"))])])],64)}s(44114),s(14603),s(47566),s(98721);var M=s(7382),j=s(43487),A=s(11134),q=s(74036),J=s(58423),O=s(3949),P=s(41759),U=s(94373),V=s(90144),F=s(57829),X=s(95587),H=s(87923),z=s(44432),K=s(50346),W={name:"RouteView",data(){return{searchQueryStart:"",searchQueryEnd:"",selectedResultStart:null,selectedResultEnd:null,searchResults:[],searchResultsEnd:[],isLoading:!1,ismaploading:!1,totalHours:0,totalMinutes:0,totalDistance:"0千米",selectedDate:"",selectedTime:"",noGlareTotalHours:0,noGlareTotalMinutes:0,highlightedIndex:-1,noGlareTotalDistance:"0千米",highlightedRouteId:null,routeLayers:{},blinkingTimers:{},highlightedColor:[0,123,255,1],highlightedBlinkColor:[0,123,255,.2],noGlareColor:[244,96,108],defaultColor:[25,202,173],noGlareRouteId:"noGlareRouteId",defaultRouteId:"defaultRouteId",isRouteListVisible:!0,totalPass:"",noGlareTotalPass:"",BasemapName:null}},mounted(){this.created(),this.initMap(),this.$route.query.start&&this.$route.query.end&&(this.selectedResultStart=JSON.parse(this.$route.query.start),this.selectedResultEnd=JSON.parse(this.$route.query.end)),this.parseUrlParams(),window.addEventListener("keydown",this.handleKeydown)},beforeUnmount(){window.removeEventListener("keydown",this.handleKeydown)},computed:{minDate(){return"2024-01-01"},maxDate(){return"2024-12-31"},formattedTime(){if(!this.selectedTime)return"";const[e,t]=this.selectedTime.split(":").map(Number),s=10*Math.floor(t/10);return`${String(e).padStart(2,"0")}:${String(s).padStart(2,"0")}`}},methods:{toggleRouteList(){this.isRouteListVisible=!this.isRouteListVisible},getColor(e){return 0===e?"rgb(25, 202, 173)":1===e?"rgb(244, 96, 108)":"black"},highlightRoute(e){e="defaultRouteId"===e?"noGlareRouteId":"defaultRouteId",this.highlightedRouteId&&this.highlightedRouteId!==e&&this.resetRouteStyle(this.highlightedRouteId),this.blinkingTimers[e]&&(clearInterval(this.blinkingTimers[e]),delete this.blinkingTimers[e],this.resetRouteStyle(e));const t=this.routeLayers[e];if(t){const e=this.highlightedColor,s={type:"simple",title:"路径",symbol:{type:"simple-line",color:e,width:5}};t.renderer=s}this.highlightedRouteId=e,this.startBlinking(e)},startBlinking(e){const t=this.routeLayers[e];if(!t)return;let s=!1;const i=e===this.noGlareRouteId?this.noGlareColor:this.defaultColor,a=setInterval((()=>{s=!s;const e=s?this.highlightedColor:this.highlightedBlinkColor,i={type:"simple",title:"路径",symbol:{type:"simple-line",color:e,width:4.5}};t.renderer=i}),300);this.blinkingTimers[e]=a,setTimeout((()=>{clearInterval(this.blinkingTimers[e]),delete this.blinkingTimers[e];const s={type:"simple",title:"路径",symbol:{type:"simple-line",color:this.highlightedColor,width:4.5}};t.renderer=s,setTimeout((()=>{this.resetRouteStyle(e,i)}),3e3)}),3e3)},resetRouteStyle(e,t=null){this.blinkingTimers[e]&&(clearInterval(this.blinkingTimers[e]),delete this.blinkingTimers[e]);const s=this.routeLayers[e];if(s){const t=e===this.noGlareRouteId,i=t?this.defaultColor:this.noGlareColor,a={type:"simple",title:"路径",symbol:{type:"simple-line",color:i,width:t?4.5:3}};s.renderer=a}},onTimeInputChange(e){const t=e.target.value,[s,i]=t.split(":").map(Number),a=10*Math.floor(i/10);this.selectedTime=`${String(s).padStart(2,"0")}:${String(a).padStart(2,"0")}`},isDateDisabled(e){if(!e)return!1;const t=new Date(e),s=t.getMonth()+1,i=t.getDate();return s>=1&&s<=7&&15!==i||(8===s&&i<=25||((10===s||12===s)&&15!==i||11===s&&i>=9))},handleDateChange(e){const t=e.target.value;this.isDateDisabled(t)&&(alert("抱歉，选择的日期未进行模拟，请选择其他日期。可选日期为，9月1日-9月30日，11月1日到9日，以及其他月份的15日."),this.selectedDate="")},handleKeydown(e){if(this.searchResults.length&&this.searchQueryStart)switch(e.key){case"Escape":this.searchResults=[];break;case"Tab":e.preventDefault(),this.highlightedIndex=(this.highlightedIndex+1)%this.searchResults.length,(0,i.dY)((()=>{const e=this.$refs.searchResultsStart.querySelector("li.highlighted");e&&e.scrollIntoView({block:"nearest",behavior:"smooth"})}));break;case"Enter":this.highlightedIndex>=0&&this.highlightedIndex<this.searchResults.length&&this.selectResult(this.searchResults[this.highlightedIndex],!0);break}else if(this.searchResultsEnd.length&&this.searchQueryEnd)switch(e.key){case"Escape":this.searchResultsEnd=[];break;case"Tab":e.preventDefault(),this.highlightedIndex=(this.highlightedIndex+1)%this.searchResultsEnd.length,(0,i.dY)((()=>{const e=this.$refs.searchResultsEnd.querySelector("li.highlighted");e&&e.scrollIntoView({block:"nearest",behavior:"smooth"})}));break;case"Enter":this.highlightedIndex>=0&&this.highlightedIndex<this.searchResultsEnd.length&&this.selectResult(this.searchResultsEnd[this.highlightedIndex],!1);break}},updateTime(){const e=new Date,t=`${String(e.getHours()).padStart(2,"0")}:${String(e.getMinutes()).padStart(2,"0")}`;this.isTimeFromUrl&&this.selectedTime!==t||(this.selectedTime=t,this.isTimeFromUrl=!1)},clc1(){this.searchQueryStart=""},clc2(){this.searchQueryEnd=""},swap(){this.isSwapping=!0;const e=this.searchQueryStart;this.searchQueryStart=this.searchQueryEnd,this.searchQueryEnd=e;const t=this.selectedResultStart;this.selectedResultStart=this.selectedResultEnd,this.selectedResultEnd=t,this.onSearch().then((()=>{this.parseUrlParams(),this.initMap(),this.searchQueryStart=this.selectedResultStart.name,this.searchQueryEnd=this.selectedResultEnd.name,this.isSwapping=!1})).catch((()=>{this.isSwapping=!1}))},parseUrlParams(){const e=new URLSearchParams(window.location.search),t=e.get("start"),s=e.get("end"),i=e.get("date"),a=e.get("time"),l=e.get("default_id"),n=e.get("time_based_id");if(t)try{const e=JSON.parse(decodeURIComponent(t));e&&e.address&&(this.searchQueryStart=e.name)}catch(o){console.error("Error parsing start parameter:",o)}if(s)try{const e=JSON.parse(decodeURIComponent(s));e&&e.address&&(this.searchQueryEnd=e.name)}catch(o){console.error("Error parsing end parameter:",o)}i&&(this.selectedDate=i),a&&(this.selectedTime=a,this.isTimeFromUrl=!0),l&&(this.defaultRouteId=l),n&&(this.timeBasedRouteId=n),this.created()},onSearchInputChange(e,t){const s=e.target.value,i=t?"searchResults":"searchResultsEnd";s.includes("'")?console.log("输入法临时输入，不发送请求"):s.length>=2?fetch("http://172.30.114.151/sun-glare-project/api/search",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({searchQueryStart:s})}).then((e=>e.json())).then((e=>{this[i]=e})).catch((e=>{console.error("错误:",e)})):this[i]=[]},selectResult(e,t=!0){console.log("用户选择了搜索结果:",e);const s={name:e.name,address:e.address,wgs84_latitude:e.wgs84_latitude,wgs84_longitude:e.wgs84_longitude,location:[e.wgs84_longitude,e.wgs84_latitude],baidu_index:e.baidu_index,baidu_latitude:e.baidu_latitude,baidu_longitude:e.baidu_longitude,id:e.id,label:e.label};let i=this.selectedResultStart?JSON.stringify(this.selectedResultStart):null,a=this.selectedResultEnd?JSON.stringify(this.selectedResultEnd):null;t?(this.selectedResultStart=s,this.searchQueryStart=s.name,this.searchResults=[],i=JSON.stringify(s)):(this.selectedResultEnd=s,this.searchQueryEnd=s.name,this.searchResultsEnd=[],a=JSON.stringify(s)),this.$router.push({path:"/lu-jing-gui-hua/Intermediate-page",query:{start:i,end:a,date:this.selectedDate,time:this.selectedTime,BasemapLayer:this.BasemapName}})},onSearch(){return new Promise(((e,t)=>{if(this.selectedResultStart&&this.selectedResultEnd){this.isLoading=!0;const s={...this.selectedResultStart,location:[this.selectedResultStart.wgs84_longitude,this.selectedResultStart.wgs84_latitude]},i={...this.selectedResultEnd,location:[this.selectedResultEnd.wgs84_longitude,this.selectedResultEnd.wgs84_latitude]},a=5===this.selectedTime.length?`${this.selectedTime}:00`:this.selectedTime;console.log("Formatted Time:",a),U.A.post("http://172.30.114.151/sun-glare-project/api/route/plan",{start:s,end:i,date:this.selectedDate,time:a}).then((t=>{const l=t.data.default_id,n=t.data.time_based_id;console.log("默认路径规划结果ID:",l),console.log("基于时间的路径规划结果ID:",n),console.log("路径规划成功，时间日期是:",this.selectedDate,this.selectedTime),this.isLoading=!1,this.$router.push({path:"/lu-jing-gui-hua/routesw",query:{start:JSON.stringify(s),end:JSON.stringify(i),default_id:l,time_based_id:n,date:this.selectedDate,time:a,BasemapLayer:this.BasemapName}}),this.searchQueryStart=s.name,this.searchQueryEnd=i.name,e()})).catch((e=>{console.error(e),this.isLoading=!1,alert("路径规划失败，请稍后再试。"),t(e)}))}else alert("请确保起点和终点都已选择。"),t(new Error("请确保起点和终点都已选择。"))}))},initMap(e){const t=new M.A({basemap:e||this.BasemapName||"tianditu-vector"});this.map=t,this.view=new j.A({container:"viewDiv",map:t,center:[114.3,30.7],zoom:4,constraints:{geometry:{type:"extent",xmin:113.6,ymin:29.9,xmax:115,ymax:31.3},minScale:500,maxScale:2e6,rotationEnabled:!1,snapToZoom:!1}});const s=new F.A({view:this.view,source:{query:{title:'"Basemaps for Developers" AND owner:geoscenedev'}}});s.watch("activeBasemap",(e=>{this.handleBasemapChange(e)}));const i=new X.A({view:this.view}),a=new H.A({view:this.view,unit:"metric",style:"ruler"}),l=new z.A({view:this.view,unit:"metric",unitOptions:{metric:["kilometers","meters"],nonMetric:["miles","feet"]},iconClass:"esri-icon-measure-line"}),n=new K.A({view:this.view});this.view.ui.add(l,{position:"bottom-leading",index:0}),this.view.ui.add(s,{position:"bottom-right",index:0}),this.view.ui.add(n,{position:"bottom-right",index:1}),this.view.ui.move("zoom",{position:"bottom-left",index:1}),this.view.ui.add(i,{position:"bottom-left",index:2}),this.view.ui.add(a,{position:"bottom-left",index:3});const o=new J.A({title:"起点与终点"});t.add(o);const r=new O["default"]({url:"https://www.geosceneonline.cn/server/rest/services/Hosted/wuhan_village/FeatureServer",title:"武汉县区面",renderer:{type:"simple",title:"县区边界",symbol:{type:"simple-fill",color:[0,0,0,0],outline:{color:[0,0,0,1],width:1}}},popupTemplate:{content:[{type:"fields",fieldInfos:[{fieldName:"县区name",label:"县区名称"}]}]}});t.add(r),t.add(o),this.view.when((()=>{this.drawPoints(o),this.adjustView(),this.drawRoutes(t)})).catch((e=>{console.error("MapView initialization error:",e)}))},handleBasemapChange(e){const t={"天地图-矢量（球面墨卡托投影）":"tianditu-vector","天地图-影像（球面墨卡托投影）":"tianditu-image","天地图-地形（球面墨卡托投影）":"tianditu-topography"};t[e.title]?this.BasemapName=t[e.title]:this.BasemapName=e.title,console.log("Basemap changed:",this.BasemapName);const s=new URLSearchParams(window.location.search);s.set("BasemapLayer",this.BasemapName),window.history.replaceState({},"",`${window.location.pathname}?${s}`)},created(){const e=this.$route.query.BasemapLayer,t={"天地图-矢量（球面墨卡托投影）":"tianditu-vector","天地图-影像（球面墨卡托投影）":"tianditu-image","天地图-地形（球面墨卡托投影）":"tianditu-topography","天地图-矢量（含注记）（球面墨卡托投影）":"tianditu-vector"};e&&(t[e]?this.BasemapName=t[e]:this.BasemapName=e),console.log("BasemapLayer is update",this.BasemapName)},adjustView(){if(this.selectedResultStart&&this.selectedResultEnd){const e=.01,t=new P.A({xmin:Math.min(this.selectedResultStart.location[0],this.selectedResultEnd.location[0])-10*e,ymin:Math.min(this.selectedResultStart.location[1],this.selectedResultEnd.location[1])-10*e,xmax:Math.max(this.selectedResultStart.location[0],this.selectedResultEnd.location[0])+10*e,ymax:Math.max(this.selectedResultStart.location[1],this.selectedResultEnd.location[1])+10*e});this.view.goTo(t).catch((e=>{console.error("Error adjusting view:",e)}))}else this.selectedResultStart?this.view.goTo({center:[this.selectedResultStart.location[0],this.selectedResultStart.location[1]],zoom:10}).catch((e=>{console.error("Error adjusting view:",e)})):this.selectedResultEnd&&this.view.goTo({center:[this.selectedResultEnd.location[0],this.selectedResultEnd.location[1]],zoom:10}).catch((e=>{console.error("Error adjusting view:",e)}))},drawPoints(e){if(!this.$route.query.start||!this.$route.query.end)return void console.error("Start or end point is undefined.");const t=JSON.parse(this.$route.query.start),s=JSON.parse(this.$route.query.end);if(!t.location||!s.location)return void console.error("Start or end point does not have a location.");const i=new q.A({longitude:t.location[0],latitude:t.location[1]}),a=new q.A({longitude:s.location[0],latitude:s.location[1]}),l=new A.A({geometry:i,title:"起点",symbol:{type:"simple-marker",color:"red",size:"20px"},popupTemplate:{title:"起点信息",content:[{type:"fields",fieldInfos:[{fieldName:"address",label:"地址"},{fieldName:"name",label:"名称"},{fieldName:"wgs84_latitude",label:"WGS84纬度"},{fieldName:"wgs84_longitude",label:"WGS84经度"},{fieldName:"baidu_index",label:"百度索引"},{fieldName:"baidu_latitude",label:"百度纬度"},{fieldName:"baidu_longitude",label:"百度经度"},{fieldName:"id",label:"ID"},{fieldName:"label",label:"标签"}]}]},attributes:t}),n=new A.A({geometry:a,title:"终点",symbol:{type:"simple-marker",color:"green",size:"20px"},popupTemplate:{title:"终点信息",content:[{type:"fields",fieldInfos:[{fieldName:"address",label:"地址"},{fieldName:"name",label:"名称"},{fieldName:"wgs84_latitude",label:"WGS84纬度"},{fieldName:"wgs84_longitude",label:"WGS84经度"},{fieldName:"baidu_index",label:"百度索引"},{fieldName:"baidu_latitude",label:"百度纬度"},{fieldName:"baidu_longitude",label:"百度经度"},{fieldName:"id",label:"ID"},{fieldName:"label",label:"标签"}]}]},attributes:s});e.addMany([l,n])},drawRoutes(e){const t=this.$route.query.default_id,s=this.$route.query.time_based_id;t||s?(t&&this.fetchAndDrawRoute(e,t,[25,202,173],!0),s&&this.fetchAndDrawRoute(e,s,[244,96,108])):console.error("Route IDs are undefined.")},fetchAndDrawRoute(e,t,s,i=!1){const a=`http://172.30.114.151/sun-glare-project/api/get_geojson/${t}`;fetch(a).then((e=>e.json())).then((t=>{let a=0,l=0;const n={},o=t.features.map(((e,t)=>(99999!==e.properties.cost&&(a+=e.properties.length,l+=e.properties.cost),e.properties.name.includes("未知")||(n[e.properties.name]||(n[e.properties.name]={length:0,order:t}),n[e.properties.name].length+=e.properties.length),{geometry:{type:"polyline",paths:e.geometry.coordinates},attributes:{...e.properties,id:t,routeType:i?"耗时少路径":"无眩光路径"}}))),r=Object.entries(n).sort(((e,t)=>t[1].length-e[1].length||e[1].order-t[1].order)),d=r.slice(0,3).map((e=>e[0])).join("->"),h=new O["default"]({title:i?"耗时少路径":"无眩光路径",source:o,renderer:{type:"simple",title:i?"耗时少路径":"无眩光路径",symbol:{type:"simple-line",color:s,width:i?4.5:3}},objectIdField:"id",fields:[{name:"id",type:"oid"},{name:"seq",type:"integer"},{name:"path_seq",type:"integer"},{name:"node",type:"integer"},{name:"edge",type:"integer"},{name:"cost",type:"double"},{name:"agg_cost",type:"double"},{name:"length",type:"double"},{name:"name",type:"string"},{name:"maxspeed",type:"integer"},{name:"routeType",type:"string"}],popupTemplate:{title:"{routeType} - {name}",content:[{type:"text",text:`总距离: ${(a/1e3).toFixed(2)} km<br>总耗时: ${(l/3600).toFixed(2)} 小时`},{type:"fields",fieldInfos:[{fieldName:"length",label:"长度（米）"},{fieldName:"cost",label:"耗时（秒）"},{fieldName:"maxspeed",label:"最大速度"},{fieldName:"name",label:"名称"}]}]}}),c=(0,V.IG)(h);e.layers.add(c),l<3600&&(l+=60);const u=Math.floor(l/3600),m=Math.floor(l%3600/60);let p;p=a<1e3?`${a.toFixed(2)}米`:`${(a/1e3).toFixed(2)}千米`,i?(this.noGlareTotalHours=u,console.log("Hours:",u),this.noGlareTotalMinutes=m,this.noGlareTotalDistance=p,this.noGlareTotalPass=d,this.routeLayers.noGlareRouteId=h):(this.totalHours=u,this.totalMinutes=m,this.totalDistance=p,this.totalPass=d,this.routeLayers.defaultRouteId=h)})).catch((e=>console.error("Error loading the geojson file:",e)))}}},Y=s(71241);const Z=(0,Y.A)(W,[["render",B]]);var ee=Z}}]);
//# sourceMappingURL=lu-jing-gui-hua-route.0b85c9cd.js.map