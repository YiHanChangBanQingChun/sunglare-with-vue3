"use strict";(self["webpackChunksun_glare_project"]=self["webpackChunksun_glare_project"]||[]).push([[1501],{64632:function(t,e,i){i.d(e,{g:function(){return f}});var r=i(69292),s=i(15114),n=i(79908),h=i(48119),o=i(82236),a=i(28161),c=i(73719);const u=s.A.getLogger("geoscene.views.webgl.BufferObject");class f{static createIndex(t,e,i){return new f(t,c.NZ.ELEMENT_ARRAY_BUFFER,e,i)}static createVertex(t,e,i){return new f(t,c.NZ.ARRAY_BUFFER,e,i)}static createUniform(t,e,i){if(t.type!==a.EL.WEBGL2)throw new Error("Uniform buffers are supported in WebGL2 only!");return new f(t,c.NZ.UNIFORM_BUFFER,e,i)}static createPixelPack(t,e=c._U.STREAM_READ,i){if(t.type!==a.EL.WEBGL2)throw new Error("Pixel pack buffers are supported in WebGL2 only!");const r=new f(t,c.NZ.PIXEL_PACK_BUFFER,e);return i&&r.setSize(i),r}static createPixelUnpack(t,e=c._U.STREAM_DRAW,i){if(t.type!==a.EL.WEBGL2)throw new Error("Pixel unpack buffers are supported in WebGL2 only!");return new f(t,c.NZ.PIXEL_UNPACK_BUFFER,e,i)}constructor(t,e,i,r){this._context=t,this.bufferType=e,this.usage=i,this._glName=null,this._size=-1,this._indexType=void 0,t.instanceCounter.increment(c.vt.BufferObject,this),this._glName=this._context.gl.createBuffer(),(0,o.Y2)(this._context.gl),r&&this.setData(r)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get byteLength(){return this.bufferType===c.NZ.ELEMENT_ARRAY_BUFFER?this._indexType===c.pe.UNSIGNED_INT?4*this._size:2*this._size:this._size}get _isVAOAware(){return this.bufferType===c.NZ.ELEMENT_ARRAY_BUFFER||this.bufferType===c.NZ.ARRAY_BUFFER}dispose(){this._context?.gl?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(c.vt.BufferObject,this),this._context=(0,n.wF)(this._context)):this._glName&&u.warn("Leaked WebGL buffer object")}setSize(t,e=null){if(t<=0&&u.error("Buffer size needs to be positive!"),this.bufferType===c.NZ.ELEMENT_ARRAY_BUFFER&&null!=e)switch(this._indexType=e,e){case c.pe.UNSIGNED_SHORT:t*=2;break;case c.pe.UNSIGNED_INT:t*=4}this._setBufferData(t)}setData(t){if(!t)return;let e=t.byteLength;this.bufferType===c.NZ.ELEMENT_ARRAY_BUFFER&&((0,h.jq)(t)&&(e/=2,this._indexType=c.pe.UNSIGNED_SHORT),(0,h.XJ)(t)&&(e/=4,this._indexType=c.pe.UNSIGNED_INT)),this._setBufferData(e,t)}_setBufferData(t,e=null){this._size=t;const i=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const r=this._context.gl;null!=e?r.bufferData(this.bufferType,e,this.usage):r.bufferData(this.bufferType,t,this.usage),(0,o.Y2)(r),this._isVAOAware&&this._context.bindVAO(i)}setSubData(t,e,i,r){if(!t)return;(e<0||e*t.BYTES_PER_ELEMENT>=this.byteLength)&&u.error("offset is out of range!"),i>=r&&u.error("end must be bigger than start!"),(e+(r-i))*t.BYTES_PER_ELEMENT>this.byteLength&&u.error("An attempt to write beyond the end of the buffer!");const s=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const n=this._context.gl;if(this._context.type===a.EL.WEBGL2)n.bufferSubData(this.bufferType,e*t.BYTES_PER_ELEMENT,t,i,r-i);else{const s=0===i&&r===t.length?t:t.subarray(i,r);n.bufferSubData(this.bufferType,e*t.BYTES_PER_ELEMENT,s)}(0,o.Y2)(n),this._isVAOAware&&this._context.bindVAO(s)}getSubData(t,e=0,i,r){if(this._context.type!==a.EL.WEBGL2)return void u.error("Get buffer subdata is supported in WebGL2 only!");if(i<0||r<0)return void u.error("Problem getting subdata: offset and length were less than zero!");const s=_(t)?t.BYTES_PER_ELEMENT:1;if(s*((i??0)+(r??0))>t.byteLength)return void u.error("Problem getting subdata: offset and length exceeded destination size!");e+s*(r??0)>this.byteLength&&u.warn("Potential problem getting subdata: requested data exceeds buffer size!");const n=this._context.gl;this._context.bindBuffer(this,c.NZ.COPY_READ_BUFFER),n.getBufferSubData(c.NZ.COPY_READ_BUFFER,e,t,i,r),this._context.unbindBuffer(c.NZ.COPY_READ_BUFFER)}async getSubDataAsync(t,e=0,i,r){this._context.type===a.EL.WEBGL2?(await this._context.clientWaitAsync(),this.getSubData(t,e,i,r)):u.error("Get buffer subdata is supported in WebGL2 only!")}}function _(t){return(0,r.Xj)(t)}},99513:function(t,e,i){i.d(e,{H:function(){return l}});i(51020);var r=i(15114),s=i(79908),n=i(64632),h=i(82236),o=i(28161),a=i(73719),c=i(38153),u=i(45727),f=i(69635);const _=r.A.getLogger("geoscene.views.webgl.FramebufferObject");class l{constructor(t,e,i=null){this._context=t,this._glName=null,this._colorAttachments=new Map,this._depthBuffer=null,this._stencilBuffer=null,this._depthStencilTexture=null,this._initialized=!1,t.instanceCounter.increment(a.vt.FramebufferObject,this);const r=d(e)?e:new f.g(this._context,e);if(this._colorAttachments.set(a.Nm.COLOR_ATTACHMENT0,r),this._validateTextureDescriptor(r.descriptor),this._validateColorAttachmentPoint(a.Nm.COLOR_ATTACHMENT0),null!=i)if(E(i))this._context.capabilities.depthTexture||console.error("Setting the depth/stencil texture as an attachment requires WEBGL_depth_texture or WebGL2"),this._depthStencilTexture=d(i)?i:new f.g(this._context,i),this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else{const t=T(i)?i:new u.l(this._context,i),e=t.descriptor;e.internalFormat===a.yQ.STENCIL_INDEX8?this._stencilBuffer=t:this._depthBuffer=t,this._validateRenderBufferDescriptor(e)}}dispose(){if(0===this._colorAttachments.size&&!this._glName)return;const t=this._context.getBoundFramebufferObject();this._colorAttachments.forEach(((t,e)=>this.detachColorTexture(e)?.dispose())),this.detachDepthStencilBuffer()?.dispose(),this.detachDepthStencilTexture()?.dispose(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(t),this._context.instanceCounter.decrement(a.vt.FramebufferObject,this)}get glName(){return this._glName}get colorTexture(){return this._colorAttachments.get(a.Nm.COLOR_ATTACHMENT0)}get depthStencilAttachment(){return this._depthStencilTexture||this._depthBuffer||this._stencilBuffer}get depthStencilTexture(){return this._depthStencilTexture}get width(){const t=this._colorAttachments.get(a.Nm.COLOR_ATTACHMENT0);return t?.descriptor?.width??0}get height(){const t=this._colorAttachments.get(a.Nm.COLOR_ATTACHMENT0);return t?.descriptor?.height??0}get gpuMemoryUsage(){return[...this._colorAttachments].reduce(((t,[e,i])=>t+i.gpuMemoryUsage),this.depthStencilAttachment?.gpuMemoryUsage??0)}getColorTexture(t){const e=this._colorAttachments.get(t);return e&&d(e)?e:null}attachColorTexture(t,e=a.Nm.COLOR_ATTACHMENT0){if(!t)return;this._validateColorAttachmentPoint(e);const i=t.descriptor;this._validateTextureDescriptor(i),this.detachColorTexture(e)?.dispose(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,e)),this._colorAttachments.set(e,t)}detachColorTexture(t=a.Nm.COLOR_ATTACHMENT0){const e=this._colorAttachments.get(t);if(e)return this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t)),this._colorAttachments.delete(t),e}setColorTextureTarget(t,e=a.Nm.COLOR_ATTACHMENT0){const i=this._colorAttachments.get(e);i&&this._framebufferTexture2D(i.glName,e,t)}attachDepthStencil(t){if(t)switch(t.type){case c.p.Texture:return this._attachDepthStencilTexture(t);case c.p.RenderBuffer:return this._attachDepthStencilBuffer(t)}}_attachDepthStencilTexture(t){if(null==t)return;const e=t.descriptor;e.pixelFormat!==a.Ab.DEPTH_STENCIL&&e.pixelFormat!==a.Ab.DEPTH24_STENCIL8&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),e.dataType!==a.ld.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),this._validateTextureDescriptor(e),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,a.nI)),this._depthStencilTexture?.dispose(),this._depthStencilTexture=t}detachDepthStencilTexture(){const t=this._depthStencilTexture;return t&&this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,a.nI)),this._depthStencilTexture=null,t}_attachDepthStencilBuffer(t){if(null==t)return;const e=t.descriptor;if(e.internalFormat!==a.yQ.DEPTH_STENCIL&&e.internalFormat!==a.yQ.DEPTH_COMPONENT16&&console.error("Depth/Stencil buffer must have correct internalFormat"),this._validateRenderBufferDescriptor(e),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);const i=this._context.gl,r=this._getGLAttachmentPoint(e);i.framebufferRenderbuffer(a.R.FRAMEBUFFER,r,i.RENDERBUFFER,t.glName)}this._depthBuffer?.dispose(),this._depthBuffer=t}detachDepthStencilBuffer(){const t=this._depthBuffer;if(t&&this._initialized){this._context.bindFramebuffer(this);const e=this._context.gl,i=this._getGLAttachmentPoint(t.descriptor);e.framebufferRenderbuffer(a.R.FRAMEBUFFER,i,e.RENDERBUFFER,null),t.dispose()}return this._depthBuffer=null,t}copyToTexture(t,e,i,r,s,n,h){(t<0||e<0||s<0||n<0)&&console.error("Offsets cannot be negative!"),(i<=0||r<=0)&&console.error("Copy width and height must be greater than zero!");const o=h.descriptor;h.descriptor.target!==a.Ap.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(null==o?.width||null==o?.height||t+i>this.width||e+r>this.height||s+i>o.width||n+r>o.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const c=this._context,u=c.bindTexture(h,f.g.TEXTURE_UNIT_FOR_UPDATES);c.setActiveTexture(f.g.TEXTURE_UNIT_FOR_UPDATES),c.bindFramebuffer(this),c.gl.copyTexSubImage2D(a.Ap.TEXTURE_2D,0,s,n,t,e,i,r),c.bindTexture(u,f.g.TEXTURE_UNIT_FOR_UPDATES)}readPixels(t,e,i,r,s,n,h){(i<=0||r<=0)&&console.error("Copy width and height must be greater than zero!"),h||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(t,e,i,r,s,n,h)}async readPixelsAsync(t,e,i,r,s,c,u){if(this._context.type!==o.EL.WEBGL2)return(0,h.en)()&&console.warn("Attempting to read pixels using pixel buffer object without WebGL2"),void this.readPixels(t,e,i,r,s,c,u);const f=this._context.gl,_=n.g.createPixelPack(this._context,a._U.STREAM_READ,u.byteLength);this._context.bindBuffer(_),this._context.bindFramebuffer(this),f.readPixels(t,e,i,r,s,c,0),this._context.unbindBuffer(a.NZ.PIXEL_PACK_BUFFER),await _.getSubDataAsync(u),_.dispose()}resize(t,e){if(this.width===t&&this.height===e)return;const i={width:t,height:e};p(i,this._context.parameters.maxTextureSize),this._colorAttachments.forEach((t=>t.resize(i.width,i.height))),this._depthStencilTexture?.resize(i.width,i.height),this._initialized&&(p(i,this._context.parameters.maxRenderbufferSize),this._depthBuffer?.resize(i.width,i.height),this._stencilBuffer?.resize(i.width,i.height),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1)}initializeAndBind(t=a.R.FRAMEBUFFER){const e=this._context.gl;if(this._initialized)return void e.bindFramebuffer(t,this.glName);this._glName&&e.deleteFramebuffer(this._glName);const i=e.createFramebuffer();e.bindFramebuffer(t,i),this._colorAttachments.forEach(((e,i)=>this._framebufferTexture2D(e.glName,i,b(e),t)));const r=this._depthBuffer||this._stencilBuffer;if(r){const i=this._getGLAttachmentPoint(r.descriptor);e.framebufferRenderbuffer(t,i,e.RENDERBUFFER,r.glName)}else this._depthStencilTexture&&this._framebufferTexture2D(this._depthStencilTexture.glName,e.DEPTH_STENCIL_ATTACHMENT,b(this._depthStencilTexture),t);(0,h.en)()&&e.checkFramebufferStatus(t)!==e.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=i,this._initialized=!0}_framebufferTexture2D(t,e=a.Nm.COLOR_ATTACHMENT0,i=a.Ap.TEXTURE_2D,r=a.R.FRAMEBUFFER,s=0){this._context.gl.framebufferTexture2D(r,e,i,t,s)}_disposeDepthStencilAttachments(){const t=this._context.gl;if(this._depthBuffer){if(this._initialized){this._context.bindFramebuffer(this);const e=this._getGLAttachmentPoint(this._depthBuffer.descriptor);t.framebufferRenderbuffer(a.R.FRAMEBUFFER,e,t.RENDERBUFFER,null)}this._depthBuffer=(0,s.WD)(this._depthBuffer)}this._stencilBuffer&&(this._initialized&&(this._context.bindFramebuffer(this),t.framebufferRenderbuffer(a.R.FRAMEBUFFER,t.STENCIL_ATTACHMENT,t.RENDERBUFFER,null)),this._stencilBuffer=(0,s.WD)(this._stencilBuffer)),this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture=(0,s.WD)(this._depthStencilTexture))}_validateTextureDescriptor(t){t.target!==a.Ap.TEXTURE_2D&&t.target!==a.Ap.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),p(t,this._context.parameters.maxTextureSize),this._validateBufferDimensions(t)}_validateRenderBufferDescriptor(t){p(t,this._context.parameters.maxRenderbufferSize),this._validateBufferDimensions(t)}_validateBufferDimensions(t){t.width<=0&&(t.width=this.width),t.height<=0&&(t.height=this.height),this.width>0&&this.height>0&&(this.width===t.width&&this.height===t.height||console.error("Attachment size must match framebuffer size!"))}_getGLAttachmentPoint(t){switch(t.internalFormat){case a.yQ.DEPTH_COMPONENT16:case a.yQ.DEPTH_COMPONENT24:case a.yQ.DEPTH_COMPONENT32F:return this._context.gl.DEPTH_ATTACHMENT;case a.yQ.DEPTH24_STENCIL8:case a.yQ.DEPTH32F_STENCIL8:case a.yQ.DEPTH_STENCIL:return this._context.gl.DEPTH_STENCIL_ATTACHMENT;case a.yQ.STENCIL_INDEX8:return this._context.gl.STENCIL_ATTACHMENT}}_validateColorAttachmentPoint(t){if(-1===l._MAX_COLOR_ATTACHMENTS){const t=this._context.capabilities.drawBuffers;if(t){const e=this._context.gl;l._MAX_COLOR_ATTACHMENTS=e.getParameter(t.MAX_COLOR_ATTACHMENTS)}else l._MAX_COLOR_ATTACHMENTS=1}const e=t-a.Nm.COLOR_ATTACHMENT0;e+1>l._MAX_COLOR_ATTACHMENTS&&r.A.getLogger("geoscene.views.webgl.FrameBufferObject").error("geoscene.FrameBufferObject",`illegal attachment point for color attachment: ${e+1}. Implementation supports up to ${l._MAX_COLOR_ATTACHMENTS} color attachments`)}}function d(t){return null!=t&&"type"in t&&t.type===c.p.Texture}function T(t){return null!=t&&"type"in t&&t.type===c.p.RenderBuffer}function E(t){return d(t)||null!=t&&"pixelFormat"in t}function p(t,e){const i=Math.max(t.width,t.height);if(i>e){_.warn(`Resizing FBO attachment size ${t.width}x${t.height} to device limit ${e}`);const r=e/i;return t.width=Math.round(t.width*r),t.height=Math.round(t.height*r),!1}return!0}function b(t){return t.descriptor.target===a.Ap.TEXTURE_CUBE_MAP?a.Ap.TEXTURE_CUBE_MAP_POSITIVE_X:a.Ap.TEXTURE_2D}l._MAX_COLOR_ATTACHMENTS=-1},45727:function(t,e,i){i.d(e,{l:function(){return a}});var r=i(79908),s=i(28161),n=i(73719),h=i(38153),o=i(76010);class a{constructor(t,e){this._context=t,this._descriptor=e,this.type=h.p.RenderBuffer,this._context.instanceCounter.increment(n.vt.Renderbuffer,this);const i=this._context.gl;this.glName=i.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:r,height:o,internalFormat:a,multisampled:c}=e;if(c){if(this._context.type!==s.EL.WEBGL2)throw new Error("Multisampled renderbuffers are not supported in WebGL1!");i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,a,r,o)}else i.renderbufferStorage(i.RENDERBUFFER,a,r,o)}get descriptor(){return this._descriptor}get samples(){const t=this._descriptor.samples,e=this._context.parameters.maxSamples;return t?Math.min(t,e):e}get gpuMemoryUsage(){return(0,o.e)(this._descriptor)}resize(t,e){const i=this._descriptor;if(i.width===t&&i.height===e)return;i.width=t,i.height=e;const r=this._context.gl;this._context.bindRenderbuffer(this),i.multisampled?r.renderbufferStorageMultisample(r.RENDERBUFFER,this.samples,i.internalFormat,i.width,i.height):r.renderbufferStorage(r.RENDERBUFFER,i.internalFormat,i.width,i.height)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(n.vt.Renderbuffer,this),this._context=(0,r.wF)(this._context))}}},76010:function(t,e,i){i.d(e,{e:function(){return n},q:function(){return s}});var r=i(1257);class s{constructor(t,e,i=e){this.internalFormat=t,this.width=e,this.height=i,this.multisampled=!1,this.samples=1}}function n(t){return t.width<=0||t.height<=0||null==t.internalFormat?0:t.width*t.height*(0,r.IB)(t.internalFormat)}},79925:function(t,e,i){i.d(e,{Z:function(){return c}});var r=i(15114),s=i(79908),n=i(48119),h=i(73719),o=i(1257);const a=r.A.getLogger("geoscene.views.webgl.VertexArrayObject");let c=class{constructor(t,e,i,r,s=null){this._context=t,this._locations=e,this._layout=i,this._buffers=r,this._indexBuffer=s,this._glName=null,this._initialized=!1,t.instanceCounter.increment(h.vt.VertexArrayObject,this)}get glName(){return this._glName}get context(){return this._context}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get byteSize(){return Object.keys(this._buffers).reduce(((t,e)=>t+this._buffers[e].byteLength),null!=this._indexBuffer?this._indexBuffer.byteLength:0)}get layout(){return this._layout}get locations(){return this._locations}get memoryEstimate(){return this.byteSize+(Object.keys(this._buffers).length+(this._indexBuffer?1:0))*n.zQ}dispose(){if(this._context){this._context.getBoundVAO()===this&&this._context.bindVAO(null);for(const t in this._buffers)this._buffers[t]?.dispose(),delete this._buffers[t];this._indexBuffer=(0,s.WD)(this._indexBuffer),this.disposeVAOOnly()}else(this._glName||Object.getOwnPropertyNames(this._buffers).length>0)&&a.warn("Leaked WebGL VAO")}disposeVAOOnly(){if(this._glName){const t=this._context?.capabilities?.vao;t.deleteVertexArray(this._glName),this._glName=null}this._context.instanceCounter.decrement(h.vt.VertexArrayObject,this),this._context=(0,s.wF)(this._context)}initialize(){if(this._initialized)return;const t=this._context.capabilities.vao;if(t){const e=t.createVertexArray();t.bindVertexArray(e),this._bindLayout(),t.bindVertexArray(null),this._glName=e}this._initialized=!0}bind(){this.initialize();const t=this._context.capabilities.vao;t?t.bindVertexArray(this.glName):(this._context.bindVAO(null),this._bindLayout())}_bindLayout(){const{_buffers:t,_layout:e,_indexBuffer:i}=this;t||a.error("Vertex buffer dictionary is empty!");const r=this._context.gl;for(const s in t){const i=t[s];i||a.error("Vertex buffer is uninitialized!");const r=e[s];r||a.error("Vertex element descriptor is empty!"),(0,o.yu)(this._context,this._locations,i,r)}null!=i&&(this._context.capabilities.vao?r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,i.glName):this._context.bindBuffer(i))}unbind(){this.initialize();const t=this._context.capabilities.vao;t?t.bindVertexArray(null):this._unbindLayout()}_unbindLayout(){const{_buffers:t,_layout:e}=this;t||a.error("Vertex buffer dictionary is empty!");for(const i in t){const r=t[i];r||a.error("Vertex buffer is uninitialized!");const s=e[i];(0,o.Hi)(this._context,this._locations,r,s)}null!=this._indexBuffer&&this._context.unbindBuffer(this._indexBuffer.bufferType)}}}}]);
//# sourceMappingURL=1501.0ae89749.js.map