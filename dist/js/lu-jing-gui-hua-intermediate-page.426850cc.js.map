{"version":3,"file":"js/lu-jing-gui-hua-intermediate-page.426850cc.js","mappings":"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","sources":["webpack://sun-glare-project/./src/views/IntermediatepageView.vue","webpack://sun-glare-project/./src/views/IntermediatepageView.vue?2cfd"],"sourcesContent":["<template>\r\n  <!-- 输入了起点和终点之后,还没有摁查询路径的画面 -->\r\n  <div class=\"lu-jing-gui-hua\">\r\n    <!-- 搜索框 -->\r\n    <!-- 外层容器 -->\r\n    <div class=\"search-containers\">\r\n      <!-- 交换的侧边栏 -->\r\n      <div class=\"revert-containers\">\r\n        <div class=\"car\"><img src='@/assets/image/map_icon/car.png'></div>\r\n        <div class=\"swap-action\">\r\n          <!-- 绑定 swap 方法到点击事件 -->\r\n          <button @click=\"swap\" title=\"切换起终点\">\r\n            <img :src=\"require('@/assets/image/map_icon/revert_new_dark.png')\" alt=\"\" class=\"revert\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <!-- 搜索起点的容器 -->\r\n      <div class=\"search-container start\">\r\n        <!-- 图片 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src='@/assets/image/map_icon/pink-circle.png' alt=\"pink\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryStart\" @input=\"onSearchInputChange($event, true)\" placeholder=\"请输入起点\" class=\"search-box search-box-start\"/>\r\n        <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete\" title=\"清空\" @click=\"clc1\">\r\n            <img src='@/assets/image/map_icon/cancel.png' alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 修正后的起点搜索结果展示 -->\r\n        <div class=\"search-results\" v-if=\"searchResults.length && searchQueryStart\" ref=\"searchResultsStart\">\r\n    <ul>\r\n      <li v-for=\"(result, index) in searchResults\" :key=\"index\" :class=\"{ 'highlighted': index === highlightedIndex }\" @click=\"selectResult(result, true)\">\r\n        {{ result.name }}\r\n      </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n      <!-- 搜索终点的容器 -->\r\n      <div class=\"search-container end\">\r\n        <!-- 图片容器 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src='@/assets/image/map_icon/green-circle.png' alt=\"green\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryEnd\" @input=\"onSearchInputChange($event, false)\" placeholder=\"请输入终点\" class=\"search-box search-box-end\"/>\r\n         <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete\" title=\"清空\" @click=\"clc2\">\r\n            <img src='@/assets/image/map_icon/cancel.png' alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 修正后的终点搜索结果展示 -->\r\n        <div class=\"search-results\" v-if=\"searchResultsEnd.length && searchQueryEnd\" ref=\"searchResultsEnd\">\r\n    <ul>\r\n      <li v-for=\"(result, index) in searchResultsEnd\" :key=\"index\" :class=\"{ 'highlighted': index === highlightedIndex }\" @click=\"selectResult(result, false)\">\r\n        {{ result.name }}\r\n      </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"search-action\" @click=\"onSearch\" title=\"搜索\">\r\n        <img :src=\"require('@/assets/image/map_icon/search.png')\" alt=\"\" class=\"search\">\r\n      </div>\r\n      <!-- 新的覆盖层容器 -->\r\n      <div v-if=\"isLoading\" class=\"loader-overlay\">\r\n      <div class=\"loader\">\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- 地图展示 -->\r\n  <div id=\"viewDiv\"></div>\r\n  <div v-if=\"ismaploading\" class=\"maploader-overlay\">\r\n    <div class=\"maploader\">\r\n    </div>\r\n  </div>\r\n  <!-- 时间选择框和路径展示框 -->\r\n  <div class=\"main-container\">\r\n    <!-- 时间选择框 -->\r\n    <div class=\"choose-time\">\r\n      <div class=\"form-group\">\r\n        <label for=\"date-input\">选择日期：</label>\r\n        <input id=\"date-input\" type=\"date\" v-model=\"selectedDate\" :min=\"minDate\" :max=\"maxDate\" :class=\"{ 'invalid-date': isDateDisabled(selectedDate) }\" @change=\"handleDateChange\">\r\n        <label for=\"time-input\">选择时间：</label>\r\n        <input id=\"time-input\" type=\"time\" v-model=\"formattedTime\" @input=\"onTimeInputChange\" step=\"600\"> <!-- 600秒 = 10分钟 -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Map from '@geoscene/core/Map.js'\r\nimport MapView from '@geoscene/core/views/MapView.js'\r\nimport Graphic from '@geoscene/core/Graphic'\r\nimport Point from '@geoscene/core/geometry/Point.js'\r\nimport GraphicsLayer from '@geoscene/core/layers/GraphicsLayer'\r\nimport axios from 'axios'\r\nimport Extent from '@geoscene/core/geometry/Extent'\r\nimport { ref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport BasemapGallery from '@geoscene/core/widgets/BasemapGallery.js'\r\nimport FeatureLayer from '@geoscene/core/layers/FeatureLayer.js'\r\nimport Compass from '@geoscene/core/widgets/Compass.js'\r\nimport ScaleBar from '@geoscene/core/widgets/ScaleBar.js'\r\nimport DistanceMeasurement2D from '@geoscene/core/widgets/DistanceMeasurement2D.js'\r\nimport LayerList from '@geoscene/core/widgets/LayerList'\r\nimport { handleKeydown, updateTime, clc1, clc2, isDateDisabled, handleDateChange, onTimeInputChange, onSearchInputChange } from '@/assets/share_js/routeplanning_all'\r\n\r\nexport default {\r\n  name: 'IntermediatePageView',\r\n  setup () {\r\n    const searchQueryStart = ref('')\r\n    const searchQueryEnd = ref('')\r\n    const selectedResultStart = ref(null)\r\n    const selectedResultEnd = ref(null)\r\n    const router = useRouter()\r\n\r\n    return {\r\n      searchQueryStart,\r\n      searchQueryEnd,\r\n      selectedResultStart,\r\n      selectedResultEnd,\r\n      router\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      searchResults: [],\r\n      searchResultsEnd: [],\r\n      isLoading: false,\r\n      ismaploading: true,\r\n      selectedDate: '', // 用户选择的日期\r\n      selectedTime: '', // 用户选择的时间\r\n      BasemapLayer: null, // 默认底图\r\n      highlightedIndex: -1 // 高亮的搜索结果索引\r\n    }\r\n  },\r\n  // 在组件挂载时初始化地图\r\n  mounted () {\r\n    if (this.$route.query.start) {\r\n      // 如果URL中有起点参数，解析并设置为选中结果\r\n      this.selectedResultStart = JSON.parse(this.$route.query.start)\r\n    }\r\n    if (this.$route.query.end) {\r\n      // 如果URL中有终点参数，解析并设置为选中结果\r\n      this.selectedResultEnd = JSON.parse(this.$route.query.end)\r\n    }\r\n    // 解析URL参数\r\n    this.parseUrlParams()\r\n    // 初始化地图\r\n    this.initMap()\r\n    // 设置定时器，每隔1分钟更新时间\r\n    setInterval(() => { this.updateTime() }, 60000)\r\n    window.addEventListener('keydown', this.handleKeydown)\r\n  },\r\n  beforeUnmount () {\r\n    window.removeEventListener('keydown', this.handleKeydown)\r\n  },\r\n  computed: {\r\n    minDate () {\r\n      return '2024-01-01'\r\n    },\r\n    maxDate () {\r\n      return '2024-12-31'\r\n    },\r\n    formattedTime () {\r\n      // 格式化时间为10分钟间隔\r\n      if (!this.selectedTime) return ''\r\n      const [hours, minutes] = this.selectedTime.split(':').map(Number)\r\n      const roundedMinutes = Math.floor(minutes / 10) * 10\r\n      return `${String(hours).padStart(2, '0')}:${String(roundedMinutes).padStart(2, '0')}`\r\n    }\r\n  },\r\n  methods: {\r\n    onTimeInputChange (event) {\r\n      onTimeInputChange(this, event)\r\n    },\r\n    isDateDisabled (date) {\r\n      return isDateDisabled(this, date)\r\n    },\r\n    // 处理日期变化\r\n    handleDateChange (event) {\r\n      handleDateChange(this, event)\r\n    },\r\n    handleKeydown (event) {\r\n      handleKeydown(this, event)\r\n    },\r\n    // 更新时间，日期\r\n    updateTime () {\r\n      updateTime(this)\r\n    },\r\n    clc1 () {\r\n      clc1(this)\r\n    },\r\n    clc2 () {\r\n      clc2(this)\r\n    },\r\n    // 解析URL参数\r\n    parseUrlParams () {\r\n      // 获取URL中的查询参数\r\n      const urlParams = new URLSearchParams(window.location.search)\r\n      const startParam = urlParams.get('start')\r\n      const endParam = urlParams.get('end')\r\n      const dateParam = urlParams.get('date')\r\n      const timeParam = urlParams.get('time')\r\n      // const BasemapLayer = urlParams.get('BasemapLayer')\r\n      // 如果有起点参数，进行解析\r\n      if (startParam) {\r\n        try {\r\n          const startObj = JSON.parse(decodeURIComponent(startParam))\r\n          if (startObj && startObj.address) {\r\n            this.searchQueryStart = startObj.name\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing start parameter:', e)\r\n        }\r\n      }\r\n      // 如果有终点参数，进行解析\r\n      if (endParam) {\r\n        try {\r\n          const endObj = JSON.parse(decodeURIComponent(endParam))\r\n          if (endObj && endObj.address) {\r\n            this.searchQueryEnd = endObj.name // 绑定终点查询字符串\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing end parameter:', e)\r\n        }\r\n      }\r\n      // 如果有日期参数，进行解析\r\n      if (dateParam) {\r\n        this.selectedDate = dateParam\r\n      }\r\n      // 如果有时间参数，进行解析\r\n      if (timeParam) {\r\n        this.selectedTime = timeParam\r\n        this.isTimeFromUrl = true // 设置标志位\r\n      }\r\n\r\n      this.created()\r\n      // 如果有底图参数，进行解析\r\n      // if (BasemapLayer) {\r\n      //   this.BasemapLayer = BasemapLayer\r\n      // }\r\n    },\r\n    // 交换起点和终点信息并跳转页面\r\n    swap () {\r\n      const tempQuery = this.searchQueryStart\r\n      this.searchQueryStart = this.searchQueryEnd\r\n      this.searchQueryEnd = tempQuery\r\n      // 交换 selectedResultStart 和 selectedResultEnd\r\n      const tempResult = this.selectedResultStart\r\n      this.selectedResultStart = this.selectedResultEnd\r\n      this.selectedResultEnd = tempResult\r\n      // 跳转到 intermediate-page 页面，并传递交换后的起点和终点信息\r\n      this.router.push({\r\n        path: '/lu-jing-gui-hua/result',\r\n        query: {\r\n          start: JSON.stringify(this.selectedResultStart),\r\n          end: JSON.stringify(this.selectedResultEnd),\r\n          date: this.selectedDate,\r\n          time: this.selectedTime,\r\n          BasemapLayer: this.BasemapName\r\n        }\r\n      })\r\n    },\r\n    onSearchInputChange (event, isStart) {\r\n      onSearchInputChange(this, event, isStart)\r\n    },\r\n    // 选择搜索结果\r\n    selectResult (result, isStart = true) {\r\n      // poi所含的信息\r\n      const simplifiedResult = {\r\n        name: result.name,\r\n        address: result.address,\r\n        wgs84_latitude: result.wgs84_latitude,\r\n        wgs84_longitude: result.wgs84_longitude,\r\n        location: [result.wgs84_longitude, result.wgs84_latitude],\r\n        baidu_index: result.baidu_index,\r\n        baidu_latitude: result.baidu_latitude,\r\n        baidu_longitude: result.baidu_longitude,\r\n        id: result.id,\r\n        label: result.label\r\n      }\r\n      let isUpdate = false\r\n\r\n      // const BasemapName = this.mapView.map.basemap.title\r\n      const BasemapName = this.BasemapLayer\r\n      console.log('BasemapName:', BasemapName)\r\n\r\n      if (isStart && this.selectedResultStart) {\r\n        isUpdate = true\r\n        this.selectedResultStart = simplifiedResult\r\n        this.searchQueryStart = simplifiedResult.name\r\n        this.searchResults = []\r\n      } else if (!isStart && this.selectedResultEnd) {\r\n        isUpdate = true\r\n        this.selectedResultEnd = simplifiedResult\r\n        this.searchQueryEnd = simplifiedResult.name\r\n        this.searchResultsEnd = []\r\n      } else {\r\n        // 设置选中结果并清空搜索结果\r\n        if (isStart) {\r\n          this.selectedResultStart = simplifiedResult\r\n          this.searchQueryStart = simplifiedResult.name\r\n          this.searchResults = []\r\n        } else {\r\n          this.selectedResultEnd = simplifiedResult\r\n          this.searchQueryEnd = simplifiedResult.name\r\n          this.searchResultsEnd = []\r\n        }\r\n      }\r\n      // 检查是否需要导航\r\n      const shouldNavigate = this.selectedResultStart || this.selectedResultEnd\r\n      // 导航逻辑\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        this.navigateToResultPage()\r\n      } else if (shouldNavigate) {\r\n        this.navigateToIntermediatePage(isStart ? 'start' : 'end', simplifiedResult, isUpdate)\r\n      }\r\n    },\r\n    // 导航到结果页面\r\n    navigateToResultPage () {\r\n      this.$router.push({\r\n        path: '/lu-jing-gui-hua/result',\r\n        // 带着参数跳转，将经纬度绑定传递给result页面\r\n        query: {\r\n          start: JSON.stringify({\r\n            ...this.selectedResultStart,\r\n            location: [this.selectedResultStart.wgs84_longitude, this.selectedResultStart.wgs84_latitude]\r\n          }),\r\n          end: JSON.stringify({\r\n            ...this.selectedResultEnd,\r\n            location: [this.selectedResultEnd.wgs84_longitude, this.selectedResultEnd.wgs84_latitude]\r\n          }),\r\n          date: this.selectedDate,\r\n          time: this.selectedTime,\r\n          // BasemapLayer: this.mapView.map.basemap.title\r\n          BasemapLayer: this.BasemapName\r\n        }\r\n      })\r\n    },\r\n    navigateToIntermediatePage (type, result, isUpdate = false) {\r\n      const path = '/lu-jing-gui-hua/intermediate-page'\r\n      const query = {\r\n        [type]: JSON.stringify(result),\r\n        date: this.selectedDate,\r\n        time: this.selectedTime,\r\n        // BasemapLayer: this.mapView.map.basemap.title\r\n        BasemapLayer: this.BasemapName\r\n      }\r\n\r\n      if (isUpdate) {\r\n        // 更新URL并刷新页面\r\n        this.$router.replace({ path, query }).then(() => {\r\n          window.location.reload()\r\n        })\r\n      } else {\r\n        // 正常导航\r\n        this.$router.push({ path, query })\r\n      }\r\n    },\r\n    // 处理路径规划事件\r\n    onSearch () {\r\n      // 检查是否两个结果都已选择\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        // 显示加载动画\r\n        this.isLoading = true\r\n        // 构造包含location属性的起点和终点对象\r\n        const startWithLocation = {\r\n          ...this.selectedResultStart,\r\n          location: [this.selectedResultStart.wgs84_longitude, this.selectedResultStart.wgs84_latitude]\r\n        }\r\n        const endWithLocation = {\r\n          ...this.selectedResultEnd,\r\n          location: [this.selectedResultEnd.wgs84_longitude, this.selectedResultEnd.wgs84_latitude]\r\n        }\r\n        const formattedTime = this.selectedTime.length === 5 ? `${this.selectedTime}:00` : this.selectedTime\r\n        console.log('Formatted Time:', formattedTime) // 打印时间参数\r\n        // 发送请求到后端进行路径规划\r\n        axios.post(`${process.env.VUE_APP_API_URL}/api/route/plan`, { start: startWithLocation, end: endWithLocation, date: this.selectedDate, time: formattedTime })\r\n          .then(response => {\r\n            // 后端返回的路径规划结果ID\r\n            const defaultRoutePlanId = response.data.default_id\r\n            const timeBasedRoutePlanId = response.data.time_based_id\r\n            console.log('默认路径规划结果ID:', defaultRoutePlanId)\r\n            console.log('基于时间的路径规划结果ID:', timeBasedRoutePlanId)\r\n            console.log('路径规划成功，时间日期是:', this.selectedDate, this.selectedTime)\r\n            // 隐藏加载动画\r\n            this.isLoading = false\r\n            // 使用Vue Router跳转到结果页面，并传递路径规划结果ID\r\n            this.$router.push({\r\n              path: '/lu-jing-gui-hua/route',\r\n              query: {\r\n                start: JSON.stringify(startWithLocation),\r\n                end: JSON.stringify(endWithLocation),\r\n                default_id: defaultRoutePlanId,\r\n                time_based_id: timeBasedRoutePlanId,\r\n                date: this.selectedDate,\r\n                time: formattedTime,\r\n                // BasemapLayer: this.mapView.map.basemap.title\r\n                BasemapLayer: this.BasemapName\r\n              }\r\n            })\r\n          })\r\n          .catch(error => {\r\n            console.error(error)\r\n            // 隐藏加载动画\r\n            this.isLoading = false\r\n            // 错误处理，例如显示提示信息\r\n            alert('路径规划失败，请稍后再试。')\r\n          })\r\n      } else {\r\n        // 如果起点或终点未选择，显示提示信息\r\n        alert('请确保起点和终点都已选择。')\r\n      }\r\n    },\r\n    // 初始化地图\r\n    initMap () {\r\n      const map = new Map({\r\n        // basemap: 'tianditu-vector' // 使用适合的底图\r\n        basemap: this.BasemapName || 'tianditu-vector'\r\n      })\r\n      this.map = map\r\n\r\n      this.view = new MapView({\r\n        container: 'viewDiv', // 使用正确的容器ID\r\n        map: map,\r\n        center: [114.3, 30.7], // 默认中心点坐标\r\n        zoom: 4, // 默认缩放级别\r\n        constraints: {\r\n          geometry: {\r\n            type: 'extent',\r\n            xmin: 113.6,\r\n            ymin: 29.9,\r\n            xmax: 115.0,\r\n            ymax: 31.3\r\n          },\r\n          minScale: 500,\r\n          maxScale: 2000000,\r\n          rotationEnabled: false,\r\n          snapToZoom: false\r\n        }\r\n      })\r\n      // 创建 BasemapGallery 实例\r\n      const basemapGallery = new BasemapGallery({\r\n        view: this.view,\r\n        source: {\r\n          query: {\r\n            title: '\"Basemaps for Developers\" AND owner:geoscenedev'\r\n          }\r\n        }\r\n      })\r\n      // 监听底图选择事件\r\n      basemapGallery.watch('activeBasemap', (newBasemap) => {\r\n        this.handleBasemapChange(newBasemap)\r\n      })\r\n      // 创建 LayerList 实例\r\n      const layerList = new LayerList({\r\n        view: this.view\r\n      })\r\n      // 创建 Compass 实例\r\n      const compass = new Compass({\r\n        view: this.view\r\n      })\r\n      // 创建 ScaleBar 实例\r\n      const scaleBar = new ScaleBar({\r\n        view: this.view,\r\n        unit: 'metric', // 使用公制单位\r\n        style: 'ruler' // 使用标尺样式\r\n      })\r\n      // 创建 DistanceMeasurement2D 实例\r\n      const distanceMeasurement2D = new DistanceMeasurement2D({\r\n        view: this.view,\r\n        unit: 'metric',\r\n        unitOptions: {\r\n          metric: ['kilometers', 'meters'],\r\n          nonMetric: ['miles', 'feet']\r\n        },\r\n        iconClass: 'esri-icon-measure-line' // 设置图标类\r\n      })\r\n      // 将 DistanceMeasurement2D 添加到地图视图的左下角\r\n      this.view.ui.add(distanceMeasurement2D, {\r\n        position: 'bottom-leading',\r\n        index: 0 // 确保它在最上面\r\n      })\r\n      // 将 BasemapGallery 添加到地图视图的右下角\r\n      this.view.ui.add(basemapGallery, {\r\n        position: 'bottom-right',\r\n        index: 0\r\n      })\r\n      // 将 LayerList 添加到地图视图的右下角\r\n      this.view.ui.add(layerList, {\r\n        position: 'bottom-right',\r\n        index: 1\r\n      })\r\n      // 移动缩放控件到左下角\r\n      this.view.ui.move('zoom', {\r\n        position: 'bottom-left',\r\n        index: 1\r\n      })\r\n      // 将指南针添加到地图视图的左下角\r\n      this.view.ui.add(compass, {\r\n        position: 'bottom-left',\r\n        index: 2\r\n      })\r\n      // 将 ScaleBar 添加到地图视图的左下角\r\n      this.view.ui.add(scaleBar, {\r\n        position: 'bottom-left',\r\n        index: 3\r\n      })\r\n      // 创建一个新的GraphicsLayer实例，以便在地图上绘制点\r\n      const graphicsLayer = new GraphicsLayer(\r\n        {\r\n          title: '起点和终点'\r\n        }\r\n      )\r\n      map.add(graphicsLayer)\r\n      // 创建 FeatureLayer 实例\r\n      const featureLayer = new FeatureLayer({\r\n        url: 'https://www.geosceneonline.cn/server/rest/services/Hosted/wuhan_village/FeatureServer',\r\n        title: '武汉县区面',\r\n        renderer: {\r\n          type: 'simple', // 使用简单渲染器\r\n          symbol: {\r\n            type: 'simple-fill', // 使用简单填充符号\r\n            color: [0, 0, 0, 0], // 填充颜色透明\r\n            outline: {\r\n              color: [0, 0, 0, 1], // 轮廓颜色红色\r\n              width: 1\r\n            }\r\n          }\r\n        },\r\n        popupTemplate: {\r\n          content: [{\r\n            type: 'fields',\r\n            fieldInfos: [{\r\n              fieldName: '县区name',\r\n              label: '县区名称'\r\n            }]\r\n          }]\r\n        }\r\n      })\r\n      // 将 FeatureLayer 添加到地图\r\n      map.add(featureLayer)\r\n      // 当视图加载完成时，绘制起点和终点\r\n      this.view.when(() => {\r\n        this.drawPoints(graphicsLayer)\r\n        this.adjustView()\r\n        this.ismaploading = false\r\n      }).catch((err) => {\r\n        console.error('MapView initialization error:', err)\r\n      })\r\n    },\r\n    // 调整视图以适应起点和终点\r\n    adjustView () {\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        const padding = 0.01 // 调整这个值以增加或减少边界的放宽程度\r\n        const extent = new Extent({\r\n          xmin: Math.min(this.selectedResultStart.location[0], this.selectedResultEnd.location[0]) - 10 * padding,\r\n          ymin: Math.min(this.selectedResultStart.location[1], this.selectedResultEnd.location[1]) - 10 * padding,\r\n          xmax: Math.max(this.selectedResultStart.location[0], this.selectedResultEnd.location[0]) + 10 * padding,\r\n          ymax: Math.max(this.selectedResultStart.location[1], this.selectedResultEnd.location[1]) + 10 * padding\r\n        })\r\n        this.view.goTo(extent).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      } else if (this.selectedResultStart) {\r\n        this.view.goTo({\r\n          center: [this.selectedResultStart.location[0], this.selectedResultStart.location[1]],\r\n          zoom: 10\r\n        }).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      } else if (this.selectedResultEnd) {\r\n        this.view.goTo({\r\n          center: [this.selectedResultEnd.location[0], this.selectedResultEnd.location[1]],\r\n          zoom: 10\r\n        }).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      }\r\n    },\r\n    // 绘制起点和终点\r\n    drawPoints (graphicsLayer) {\r\n      // 绘制起点\r\n      if (this.selectedResultStart) {\r\n        const start = this.selectedResultStart\r\n        const startPoint = new Point({\r\n          longitude: start.location[0],\r\n          latitude: start.location[1]\r\n        })\r\n\r\n        const startGraphic = new Graphic({\r\n          // 点参数设置\r\n          geometry: startPoint,\r\n          symbol: {\r\n            type: 'simple-marker', // 自动转换为 SimpleMarkerSymbol\r\n            color: 'red',\r\n            size: '20px'\r\n          },\r\n          popupTemplate: {\r\n            title: '起点信息',\r\n            content: [\r\n              {\r\n                type: 'fields',\r\n                fieldInfos: [\r\n                  {\r\n                    fieldName: 'address',\r\n                    label: '地址'\r\n                  },\r\n                  {\r\n                    fieldName: 'name',\r\n                    label: '名称'\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          attributes: start\r\n        })\r\n\r\n        graphicsLayer.add(startGraphic)\r\n      }\r\n      // 绘制终点\r\n      if (this.selectedResultEnd) {\r\n        const end = this.selectedResultEnd\r\n        const endPoint = new Point({\r\n          longitude: end.location[0],\r\n          latitude: end.location[1]\r\n        })\r\n        const endGraphic = new Graphic({\r\n          geometry: endPoint,\r\n          symbol: {\r\n            type: 'simple-marker',\r\n            color: 'green',\r\n            size: '20px'\r\n          },\r\n          popupTemplate: {\r\n            title: '终点信息',\r\n            content: [\r\n              {\r\n                type: 'fields',\r\n                fieldInfos: [\r\n                  {\r\n                    fieldName: 'address',\r\n                    label: '地址'\r\n                  },\r\n                  {\r\n                    fieldName: 'name',\r\n                    label: '名称'\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          attributes: end\r\n        })\r\n        graphicsLayer.add(endGraphic)\r\n      }\r\n    },\r\n    // 处理底图选择\r\n    handleBasemapChange (basemap) {\r\n      const basemapMapping = {\r\n        '天地图-矢量（球面墨卡托投影）': 'tianditu-vector',\r\n        '天地图-影像（球面墨卡托投影）': 'tianditu-image',\r\n        '天地图-地形（球面墨卡托投影）': 'tianditu-topography'\r\n      }\r\n      // 检查 basemap.title 是否是中文\r\n      if (basemapMapping[basemap.title]) {\r\n        this.BasemapName = basemapMapping[basemap.title]\r\n      } else {\r\n        this.BasemapName = basemap.title\r\n      }\r\n      console.log('Basemap changed:', this.BasemapName)\r\n      const urlParams = new URLSearchParams(window.location.search)\r\n      urlParams.set('BasemapLayer', this.BasemapName)\r\n      window.history.replaceState({}, '', `${window.location.pathname}?${urlParams}`)\r\n    },\r\n    created () {\r\n      const BasemapLayer = this.$route.query.BasemapLayer\r\n      const basemapMapping = {\r\n        '天地图-矢量（球面墨卡托投影）': 'tianditu-vector',\r\n        '天地图-影像（球面墨卡托投影）': 'tianditu-image',\r\n        '天地图-地形（球面墨卡托投影）': 'tianditu-topography',\r\n        '天地图-矢量（含注记）（球面墨卡托投影）': 'tianditu-vector'\r\n      }\r\n\r\n      // 如果有底图参数，进行解析\r\n      if (BasemapLayer) {\r\n        // 检查 BasemapLayer 是否是中文\r\n        if (basemapMapping[BasemapLayer]) {\r\n          this.BasemapName = basemapMapping[BasemapLayer]\r\n        } else {\r\n          this.BasemapName = BasemapLayer\r\n        }\r\n      }\r\n      console.log('BasemapLayer is update', this.BasemapName)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style src=\"@/assets/share_css/routeplanning.css\">\r\n\r\n</style>\r\n","import { render } from \"./IntermediatepageView.vue?vue&type=template&id=0d01fc32\"\nimport script from \"./IntermediatepageView.vue?vue&type=script&lang=js\"\nexport * from \"./IntermediatepageView.vue?vue&type=script&lang=js\"\n\nimport \"@/assets/share_css/routeplanning.css?vue&type=style&index=0&lang=css&external\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","key","ref","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","src","_imports_0","_hoisted_4","onClick","_cache","args","$options","swap","title","require","alt","_hoisted_5","_hoisted_6","_imports_1","type","$event","$setup","searchQueryStart","onInput","onSearchInputChange","placeholder","_hoisted_7","clc1","_imports_2","$data","searchResults","length","_hoisted_8","_renderList","result","index","_normalizeClass","highlightedIndex","selectResult","name","_hoisted_9","_createCommentVNode","_hoisted_10","_imports_3","searchQueryEnd","_hoisted_11","clc2","searchResultsEnd","_hoisted_12","_hoisted_13","onSearch","_hoisted_14","isLoading","_hoisted_15","id","ismaploading","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","for","selectedDate","min","minDate","max","maxDate","isDateDisabled","onChange","handleDateChange","_hoisted_20","formattedTime","onTimeInputChange","step","setup","selectedResultStart","selectedResultEnd","router","useRouter","data","selectedTime","BasemapLayer","mounted","this","$route","query","start","JSON","parse","end","parseUrlParams","initMap","setInterval","updateTime","window","addEventListener","handleKeydown","beforeUnmount","removeEventListener","computed","hours","minutes","split","map","Number","roundedMinutes","Math","floor","String","padStart","methods","event","date","urlParams","URLSearchParams","location","search","startParam","get","endParam","dateParam","timeParam","startObj","decodeURIComponent","address","e","console","error","endObj","isTimeFromUrl","created","tempQuery","tempResult","push","path","stringify","time","BasemapName","isStart","simplifiedResult","wgs84_latitude","wgs84_longitude","baidu_index","baidu_latitude","baidu_longitude","label","isUpdate","log","shouldNavigate","navigateToResultPage","navigateToIntermediatePage","$router","replace","then","reload","startWithLocation","endWithLocation","axios","post","response","defaultRoutePlanId","default_id","timeBasedRoutePlanId","time_based_id","catch","alert","Map","basemap","view","MapView","container","center","zoom","constraints","geometry","xmin","ymin","xmax","ymax","minScale","maxScale","rotationEnabled","snapToZoom","basemapGallery","BasemapGallery","source","watch","newBasemap","handleBasemapChange","layerList","LayerList","compass","Compass","scaleBar","ScaleBar","unit","style","distanceMeasurement2D","DistanceMeasurement2D","unitOptions","metric","nonMetric","iconClass","ui","add","position","move","graphicsLayer","GraphicsLayer","featureLayer","FeatureLayer","url","renderer","symbol","color","outline","width","popupTemplate","content","fieldInfos","fieldName","when","drawPoints","adjustView","err","padding","extent","Extent","goTo","startPoint","Point","longitude","latitude","startGraphic","Graphic","size","attributes","endPoint","endGraphic","basemapMapping","set","history","replaceState","pathname","__exports__","render"],"sourceRoot":""}