"use strict";(self["webpackChunksun_glare_project"]=self["webpackChunksun_glare_project"]||[]).push([[7826],{74138:function(t,e,n){n.d(e,{A:function(){return m}});n(44114),n(16573),n(78100),n(77936),n(37467),n(44732),n(79577);var i=n(71457),l=n(47966),r=n(28920),s=n(1834),o=n(15114),a=n(76543),h=n(22113),c=n(29916);class u{constructor(t=null,e=null,n=null){this.minValue=t,this.maxValue=e,this.noDataValue=n}}var f,p=n(43511);let d=f=class extends r.oY{static createEmptyBand(t,e){return new(f.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){return this.pixels?.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new l.A("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new u)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map((t=>this._calculateBandStatistics(t,this.mask)));const t=this.mask;let e=0;if(null!=t)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t||!this.pixels)return;const[e,n]=(0,p.h)(t),i=this.pixels,l=this.width*this.height,r=i.length;let s,o,a;const h=[];for(let c=0;c<r;c++){a=f.createEmptyBand(t,l),s=i[c];for(let t=0;t<l;t++)o=s[t],a[t]=o>n?n:o<e?e:o;h.push(a)}this.pixels=h,this.pixelType=t}extractBands(t){const{pixels:e,statistics:n}=this;if(null==t||0===t.length||!e||0===e.length)return this;const i=e.length,l=t.some((t=>t>=e.length)),r=i===t.length&&!t.some(((t,e)=>t!==e));if(l||r)return this;const s=this.bandMasks?.length===i?t.map((t=>this.bandMasks[t])):void 0;let{mask:o,validPixelCount:a}=this;const{width:h,height:c}=this;if(s){if(1===s.length)o=s[0];else{const t=h*c;o=new Uint8Array(t).fill(255);for(let e=0;e<s.length;e++){const n=s[e];for(let e=0;e<t;e++)n[e]||(o[e]=0)}}a=o.filter((t=>!!t)).length}return new f({pixelType:this.pixelType,width:h,height:c,mask:o,bandMasks:s,validPixelCount:a,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>e[t])),statistics:n&&t.map((t=>n[t]))})}clone(){const t=new f({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;null!=this.mask&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0)),this.bandMasks&&(t.bandMasks=this.bandMasks.map((t=>new Uint8Array(t))));const n=f.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const i=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=i?this.pixels[e].slice(0,this.pixels[e].length):new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=(0,s.o8)(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:i,pixels:l}=this;if(!t||!l||!l.length)return void o.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let r,s,a,h;r=s=a=l[0],l.length>=3?(s=l[1],a=l[2]):2===l.length&&(s=l[1]);const c=new Uint32Array(t),u=this.width*this.height;if(r.length===u)if(null!=e&&e.length===u)if(n)for(h=0;h<u;h++){const t=e[h];if(t){const e=t/255;c[h]=i?t<<24|a[h]*e<<16|s[h]*e<<8|r[h]*e:t<<24|a[h]<<16|s[h]<<8|r[h]}}else for(h=0;h<u;h++)e[h]&&(c[h]=255<<24|a[h]<<16|s[h]<<8|r[h]);else for(h=0;h<u;h++)c[h]=255<<24|a[h]<<16|s[h]<<8|r[h];else o.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:i}=this;if(!t||!e||!e.length)return void o.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const l=this.pixelType;let r=1,s=0,a=1;if(i&&i.length>0){for(const t of i)if(null!=t.minValue&&(s=Math.min(s,t.minValue)),null!=t.maxValue&&null!=t.minValue){const e=t.maxValue-t.minValue;a=Math.max(a,e)}r=255/a}else{let t=255;"s8"===l?(s=-128,t=127):"u16"===l?t=65535:"s16"===l?(s=-32768,t=32767):"u32"===l?t=4294967295:"s32"===l?(s=-2147483648,t=2147483647):"f32"===l?(s=-34e38,t=34e38):"f64"===l&&(s=-Number.MAX_VALUE,t=Number.MAX_VALUE),r=255/(t-s)}const h=new Uint32Array(t),c=this.width*this.height;let u,f,p,d,m;if(u=f=p=e[0],u.length!==c)return o.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(f=e[1],e.length>=3&&(p=e[2]),null!=n&&n.length===c)for(d=0;d<c;d++)n[d]&&(h[d]=255<<24|(p[d]-s)*r<<16|(f[d]-s)*r<<8|(u[d]-s)*r);else for(d=0;d<c;d++)h[d]=255<<24|(p[d]-s)*r<<16|(f[d]-s)*r<<8|(u[d]-s)*r;else if(null!=n&&n.length===c)for(d=0;d<c;d++)m=(u[d]-s)*r,n[d]&&(h[d]=255<<24|m<<16|m<<8|m);else for(d=0;d<c;d++)m=(u[d]-s)*r,h[d]=255<<24|m<<16|m<<8|m}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!e||!e.length)return o.A.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let i,l,r,s;i=l=r=e[0],e.length>=3?(l=e[1],r=e[2]):2===e.length&&(l=e[1]);const a=this.width*this.height;if(i.length!==a)return o.A.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let h=0;if(null!=n&&n.length===a)for(s=0;s<a;s++)t[h++]=i[s],t[h++]=l[s],t[h++]=r[s],t[h++]=1&n[s];else for(s=0;s<a;s++)t[h++]=i[s],t[h++]=l[s],t[h++]=r[s],t[h++]=1}_calculateBandStatistics(t,e){let n=1/0,i=-1/0;const l=t.length;let r,s=0;if(null!=e)for(r=0;r<l;r++)e[r]&&(s=t[r],n=s<n?s:n,i=s>i?s:i);else for(r=0;r<l;r++)s=t[r],n=s<n?s:n,i=s>i?s:i;return new u(n,i)}};(0,i._)([(0,a.MZ)({json:{write:!0}})],d.prototype,"width",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],d.prototype,"height",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],d.prototype,"pixelType",void 0),(0,i._)([(0,h.w)("pixelType")],d.prototype,"castPixelType",null),(0,i._)([(0,a.MZ)({json:{write:!0}})],d.prototype,"validPixelCount",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],d.prototype,"mask",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],d.prototype,"maskIsAlpha",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],d.prototype,"pixels",void 0),(0,i._)([(0,a.MZ)()],d.prototype,"premultiplyAlpha",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],d.prototype,"statistics",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],d.prototype,"depthCount",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],d.prototype,"noDataValues",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],d.prototype,"bandMasks",void 0),d=f=(0,i._)([(0,c.$)("geoscene.layers.support.PixelBlock")],d);const m=d},43511:function(t,e,n){n.d(e,{S:function(){return o},h:function(){return s}});n(16573),n(78100),n(77936),n(37467),n(44732),n(79577);const i=9999999e31,l=2e-7,r={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function s(t){return r[t]??[-34028234663852886e22,34028234663852886e22]}function o(t,e,n){if(t.depthCount&&t.depthCount>1)return;const{pixels:r,statistics:o,pixelType:a}=t,h=r[0].length,c=t.bandMasks??[],u=t.mask??new Uint8Array(h).fill(255),f="f32"===a||"f64"===a,p=s(a);let d=!1;for(let s=0;s<r.length;s++){const t="number"==typeof e?e:e[s];if(null==t)continue;const m=o?.[s].minValue??p[0],g=o?.[s].maxValue??p[1];if(m>t+Number.EPSILON||g<t-Number.EPSILON)continue;const x=c[s]||new Uint8Array(h).fill(255),w=r[s],y=n?.customFloatTolerance;if(f&&0!==y){let e=y;e||(e=Math.abs(t)>=i?l*Math.abs(t):"f32"===a?2**-23:Number.EPSILON);for(let n=0;n<w.length;n++)x[n]&&Math.abs(w[n]-t)<e&&(w[n]=0,x[n]=0,u[n]=0,d=!0)}else for(let e=0;e<w.length;e++)x[e]&&w[e]===t&&(w[e]=0,x[e]=0,u[e]=0,d=!0);c[s]=x}d&&(t.bandMasks=c,t.mask=u),d&&"updateStatistics"in t&&t.updateStatistics()}},56631:function(t,e,n){n.d(e,{$i:function(){return R},AB:function(){return a},Ew:function(){return m},Hx:function(){return d},IB:function(){return i},LY:function(){return b},QF:function(){return L},UK:function(){return p},Wb:function(){return l},Wt:function(){return M},Wy:function(){return h},XU:function(){return A},dK:function(){return y},eH:function(){return f},lD:function(){return V},qL:function(){return u},tA:function(){return o},z$:function(){return T},z7:function(){return U},zg:function(){return c}});n(44114),n(16573),n(78100),n(77936),n(37467),n(44732),n(79577),n(43375),n(39225),n(13972),n(99209),n(25714),n(17561),n(66197);var i,l,r=n(74138),s=n(43511);!function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"}(i||(i={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(l||(l={}));const o=6;function a(t){return null!=t&&"geoscene.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function h(t){if(!t?.length||t.some((t=>!a(t))))return null;if(1===t.length)return t[0]?.clone()??null;const e=t,{width:n,height:i,pixelType:l}=e[0];if(e.some((t=>t.width!==n||t.height!==i)))return null;const s=e.map((({mask:t})=>t)).filter((t=>null!=t));let o=null;s.length&&(o=new Uint8Array(n*i),o.set(s[0]),s.length>1&&w(s.slice(1),o));const h=[];e.forEach((({pixels:t})=>h.push(...t)));const c=e.map((({statistics:t})=>t)).filter((t=>t?.length)),u=[];return c.forEach((t=>u.push(...t))),new r.A({pixelType:l,width:n,height:i,mask:o,pixels:h,statistics:u.length?u:null})}function c(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let i=0;n[0][0]<0&&(i=n[0][0]);const l=Math.max(256,n[n.length-1][0]-i+1),r=new Uint8Array(4*l),s=[];let o,a=0,h=0;const c=5===n[0].length;if(l>65536)return n.forEach((t=>{s[t[0]-i]=c?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:s,offset:i,alphaSpecified:c};if(t.fillUnspecified)for(o=n[h],a=o[0]-i;a<l;a++)r[4*a]=o[1],r[4*a+1]=o[2],r[4*a+2]=o[3],r[4*a+3]=c?o[4]:255,a===o[0]-i&&(o=h===n.length-1?o:n[++h]);else for(a=0;a<n.length;a++)o=n[a],h=4*(o[0]-i),r[h]=o[1],r[h+1]=o[2],r[h+2]=o[3],r[h+3]=c?o[4]:255;return{indexedColormap:r,offset:i,alphaSpecified:c}}function u(t,e){if(!a(t))return t;if(!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),i=n.pixels;let l=n.mask;const r=n.width*n.height;if(1!==i.length)return t;const{indexedColormap:s,indexed2DColormap:o,offset:h,alphaSpecified:c}=e;let u=0;const f=i[0],p=new Uint8Array(f.length),d=new Uint8Array(f.length),m=new Uint8Array(f.length);let g,x=0;if(s){const t=s.length-1;if(null!=l)for(u=0;u<r;u++)l[u]&&(x=4*(f[u]-h),x<h||x>t?l[u]=0:(p[u]=s[x],d[u]=s[x+1],m[u]=s[x+2],l[u]=s[x+3]));else{for(l=new Uint8Array(r),u=0;u<r;u++)x=4*(f[u]-h),x<h||x>t?l[u]=0:(p[u]=s[x],d[u]=s[x+1],m[u]=s[x+2],l[u]=s[x+3]);n.mask=l}}else if(o)if(null!=l)for(u=0;u<r;u++)l[u]&&(g=o[f[u]],p[u]=g[0],d[u]=g[1],m[u]=g[2],l[u]=g[3]);else{for(l=new Uint8Array(r),u=0;u<r;u++)g=o[f[u]],p[u]=g[0],d[u]=g[1],m[u]=g[2],l[u]=g[3];n.mask=l}return n.pixels=[p,d,m],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=c,n}function f(t,e){if(!a(t))return null;const{pixels:n,mask:i}=t,l=n.length;let s=e.lut;const{offset:o}=e;s&&1===s[0].length&&(s=n.map((()=>s)));const h=[],c=e.outputPixelType||"u8";for(let r=0;r<l;r++){const t=p(n[r],i,s[r],o||0,c);h.push(t)}const u=new r.A({width:t.width,height:t.height,pixels:h,mask:i,pixelType:c});return u.updateStatistics(),u}function p(t,e,n,i,l){const s=t.length,o=r.A.createEmptyBand(l,s);if(e)for(let r=0;r<s;r++)e[r]&&(o[r]=n[t[r]-i]);else for(let r=0;r<s;r++)o[r]=n[t[r]-i];return o}function d(t,e){if(!a(t))return null;const n=t.clone(),{pixels:i}=n,l=n.width*n.height,r=e.length,s=Math.floor(r/2),o=e[Math.floor(s)],h=i[0];let c,u,f,p,d,m,g=!1;const x=new Uint8Array(l),w=new Uint8Array(l),y=new Uint8Array(l);let A=n.mask;const M=4===e[0].mappedColor.length;for(A||(A=new Uint8Array(l),A.fill(M?255:1),n.mask=A),d=0;d<l;d++)if(A[d]){for(c=h[d],g=!1,m=s,u=o,f=0,p=r-1;p-f>1;){if(c===u.value){g=!0;break}c>u.value?f=m:p=m,m=Math.floor((f+p)/2),u=e[Math.floor(m)]}g||(c===e[f].value?(u=e[f],g=!0):c===e[p].value?(u=e[p],g=!0):c<e[f].value?(g=!1,u=null):c>e[f].value&&(c<e[p].value?(u=e[f],g=!0):p===r-1?(g=!1,u=null):(u=e[p],g=!0))),g?(x[d]=u.mappedColor[0],w[d]=u.mappedColor[1],y[d]=u.mappedColor[2],A[d]=u.mappedColor[3]):x[d]=w[d]=y[d]=A[d]=0}return n.pixels=[x,w,y],n.mask=A,n.pixelType="u8",n.maskIsAlpha=M,n}function m(t,e){if(!a(t))return null;const{width:n,height:i}=t,{inputRanges:l,outputValues:o,outputPixelType:h,noDataRanges:c,allowUnmatched:u,isLastInputRangeInclusive:f}=e,p=t.pixels[0],d=r.A.createEmptyBand(h,p.length),m=t.mask,g=new Uint8Array(n*i);m?g.set(m):g.fill(255);const x=t.pixelType.startsWith("f")?1e-6:0,w=l.map((t=>t-x));w[0]=l[0],w[w.length-1]=l[l.length-1]+(f?1e-6:0);const y=l.length/2,[A,M]=(0,s.h)(h);for(let r=0;r<i;r++)for(let t=0;t<n;t++){const e=r*n+t;if(g[e]){const t=p[e];let n=!1;for(let i=y-1;i>=0;i--)if(t===w[2*i]||t>w[2*i]&&t<w[2*i+1]){d[e]=o[i],n=!0;break}n||(u?d[e]=t>M?M:t<A?A:t:g[e]=0)}}const k=c?.length;if(k)for(let r=0;r<i;r++)for(let t=0;t<n;t++){const e=r*n+t;if(!m||m[e]){const t=p[e];for(let n=0;n<k;n+=2)if(t>=c[n]&&t<=c[n+1]){d[e]=0,g[e]=0;break}}}return new r.A({width:n,height:i,pixelType:h,pixels:[d],mask:g})}function g(t,e,n,i){const l=null!=n&&n.length>=2?new Set(n):null,r=1===n?.length?n[0]:null,s=!!e?.length;for(let o=0;o<t.length;o++)if(i[o]){const n=t[o];if(s){let t=!1;for(let i=0;i<e.length;i+=2)if(n>=e[i]&&n<=e[i+1]){t=!0;break}t||(i[o]=0)}i[o]&&(n===r||l?.has(n))&&(i[o]=0)}}function x(t,e){const n=t[0].length;for(let i=0;i<n;i++)if(e[i]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][i]){n=!0;break}n||(e[i]=0)}}function w(t,e){const n=t[0].length;for(let i=0;i<n;i++)if(e[i]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][i]){n=!0;break}n&&(e[i]=0)}}function y(t,e){if(!a(t))return null;const{width:n,height:i,pixels:l}=t,s=n*i,o=new Uint8Array(s);t.mask?o.set(t.mask):o.fill(255);const h=l.length,{includedRanges:c,noDataValues:u,outputPixelType:f,matchAll:d,lookups:m}=e;if(m){const t=[];for(let e=0;e<h;e++){const n=m[e],i=p(l[e],o,n.lut,n.offset||0,"u8");t.push(i)}1===t.length?o.set(t[0]):d?x(t,o):w(t,o)}else if(d){const t=[];for(let e=0;e<h;e++){const n=new Uint8Array(s);n.set(o),g(l[e],c?.slice(2*e,2*e+2),u?.[e],n),t.push(n)}1===t.length?o.set(t[0]):x(t,o)}else for(let r=0;r<h;r++)g(l[r],c?.slice(2*r,2*r+2),u?.[r],o);return new r.A({width:n,height:i,pixelType:f,pixels:l,mask:o})}function A(t){const{srcPixelType:e,inputRanges:n,outputValues:i,allowUnmatched:l,noDataRanges:o,isLastInputRangeInclusive:a,outputPixelType:h}=t;if("u8"!==e&&"s8"!==e&&"u16"!==e&&"s16"!==e)return null;const c=e.includes("16")?65536:256,u=e.includes("s")?-c/2:0,f=r.A.createEmptyBand(h,c),p=new Uint8Array(c);l&&p.fill(255);const[d,m]=(0,s.h)(h);if(n?.length&&i?.length){const t=1e-6,e=n.map((e=>e-t));e[0]=n[0],a&&(e[e.length-1]=n[n.length-1]);for(let n=0;n<e.length;n++){const t=i[n]>m?m:i[n]<d?d:i[n],l=Math.ceil(e[2*n]-u),r=Math.floor(e[2*n+1]-u);for(let e=l;e<=r;e++)f[e]=t,p[e]=255}}if(o?.length)for(let r=0;r<o.length;r++){const t=Math.ceil(o[2*r]-u),e=Math.floor(o[2*r+1]-u);for(let n=t;n<=e;n++)p[n]=0}return{lut:f,offset:u,mask:p}}function M(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const i=t.includes("16")?65536:256,l=t.includes("s")?-i/2:0,r=new Uint8Array(i);if(e)for(let s=0;s<e.length;s++){const t=Math.ceil(e[2*s]-l),n=Math.floor(e[2*s+1]-l);for(let e=t;e<=n;e++)r[e]=255}else r.fill(255);if(n)for(let s=0;s<n.length;s++)r[n[s]-l]=0;return{lut:r,offset:l}}function k(t,e,n,i,l,r,s,o){return{xmin:l<=n*t?0:l<n*t+t?l-n*t:t,ymin:r<=i*e?0:r<i*e+e?r-i*e:e,xmax:l+s<=n*t?0:l+s<n*t+t?l+s-n*t:t,ymax:r+o<=i*e?0:r+o<i*e+e?r+o-i*e:e}}function b(t,e){if(!t||0===t.length)return null;const n=t.find((t=>t.pixelBlock));if(!n||null==n.pixelBlock)return null;const i=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,l=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,r=.01*Math.min(i,l),s=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>r?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>r?t.extent.xmin-e.extent.xmin:0)),o=Math.min.apply(null,s.map((t=>t.extent.xmin))),a=Math.min.apply(null,s.map((t=>t.extent.ymin))),h=Math.max.apply(null,s.map((t=>t.extent.xmax))),c=Math.max.apply(null,s.map((t=>t.extent.ymax))),u={x:Math.round((e.xmin-o)/i),y:Math.round((c-e.ymax)/l)},f={width:Math.round((h-o)/i),height:Math.round((c-a)/l)},p={width:Math.round((e.xmax-e.xmin)/i),height:Math.round((e.ymax-e.ymin)/l)};return Math.round(f.width/n.pixelBlock.width)*Math.round(f.height/n.pixelBlock.height)!==s.length||u.x<0||u.y<0||f.width<p.width||f.height<p.height?null:{extent:e,pixelBlock:U(s.map((t=>t.pixelBlock)),f,{clipOffset:u,clipSize:p})}}function v(t,e,n,i,l,r){const{width:s,height:o}=n.block,{x:a,y:h}=n.offset,{width:c,height:u}=n.mosaic,f=k(s,o,i,l,a,h,c,u);let p=0,d=0;if(r){const t=r.hasGCSSShiftTransform?360:r.halfWorldWidth??0,e=s*r.resolutionX,n=r.startX+i*e;n<t&&n+e>t?d=r.rightPadding:n>=t&&(p=r.leftMargin-r.rightPadding,d=0)}if(f.xmax-=d,"number"!=typeof e)for(let m=f.ymin;m<f.ymax;m++){const n=(l*o+m-h)*c+(i*s-a)+p,r=m*s;for(let i=f.xmin;i<f.xmax;i++)t[n+i]=e[r+i]}else for(let m=f.ymin;m<f.ymax;m++){const n=(l*o+m-h)*c+(i*s-a)+p;for(let i=f.xmin;i<f.xmax;i++)t[n+i]=e}}function U(t,e,n={}){const{clipOffset:i,clipSize:l,alignmentInfo:s,blockWidths:o}=n;if(o)return P(t,e,{blockWidths:o});const h=t.find((t=>a(t)));if(null==h)return null;const c=l?l.width:e.width,u=l?l.height:e.height,f=h.width,p=h.height,d=e.width/f,m=e.height/p,g={offset:i||{x:0,y:0},mosaic:l||e,block:{width:f,height:p}},x=h.pixelType,w=r.A.getPixelArrayConstructor(x),y=h.pixels.length,A=[];let M,k;for(let r=0;r<y;r++){k=new w(c*u);for(let e=0;e<m;e++)for(let n=0;n<d;n++){const i=t[e*d+n];a(i)&&(M=i.pixels[r],v(k,M,g,n,e,s))}A.push(k)}const b=t.some((t=>null==t||null!=t.mask&&t.mask.length>0)),U=t.some((t=>null!=t&&t.bandMasks&&t.bandMasks.length>1)),T=b?new Uint8Array(c*u):void 0,I=U?[]:void 0;if(T){for(let e=0;e<m;e++)for(let n=0;n<d;n++){const i=t[e*d+n],l=null!=i?i.mask:null;v(T,null!=l?l:i?255:0,g,n,e,s)}if(I)for(let e=0;e<y;e++){const n=new Uint8Array(c*u);for(let i=0;i<m;i++)for(let l=0;l<d;l++){const r=t[i*d+l],o=r?.bandMasks?.[e]??r?.mask;v(n,null!=o?o:r?255:0,g,l,i,s)}I.push(n)}}const _=new r.A({width:c,height:u,pixels:A,pixelType:x,bandMasks:I,mask:T});return _.updateStatistics(),_}function P(t,e,n){const i=t.find((t=>null!=t));if(null==i)return null;const l=t.some((t=>null==t||!!t.mask)),{width:s,height:o}=e,h=l?new Uint8Array(s*o):null,{blockWidths:c}=n,u=[],f=i.getPlaneCount(),p=r.A.getPixelArrayConstructor(i.pixelType);if(l)for(let r=0,w=0;r<t.length;w+=c[r],r++){const e=t[r];if(!a(e))continue;const n=e.mask;for(let t=0;t<o;t++)for(let i=0;i<c[r];i++)h[t*s+i+w]=null==n?255:n[t*e.width+i]}const d=t.some((t=>null!=t&&t.bandMasks&&t.bandMasks.length>1)),m=d?[]:void 0,g=s*o;for(let r=0;r<f;r++){const e=new p(g),n=d?new Uint8Array(g):void 0;for(let i=0,l=0;i<t.length;l+=c[i],i++){const h=t[i];if(!a(h))continue;const u=h.pixels[r];if(null!=u){for(let t=0;t<o;t++)for(let n=0;n<c[i];n++)e[t*s+n+l]=u[t*h.width+n];if(n){const t=h.bandMasks?.[r]??h.mask;for(let e=0;e<o;e++)for(let r=0;r<c[i];r++)n[e*s+r+l]=t?t[e*h.width+r]:255}}}u.push(e),m&&n&&m.push(n)}const x=new r.A({width:s,height:o,mask:h,bandMasks:m,pixels:u,pixelType:i.pixelType});return x.updateStatistics(),x}function T(t,e,n){if(!a(t))return null;const{width:i,height:l}=t,r=e.x,s=e.y,o=n.width+r,h=n.height+s;if(r<0||s<0||o>i||h>l)return t;if(0===r&&0===s&&o===i&&h===l)return t;t.mask||(t.mask=new Uint8Array(i*l));const c=t.mask;for(let a=0;a<l;a++){const t=a*i;for(let e=0;e<i;e++)c[t+e]=a<s||a>=h||e<r||e>=o?0:1}return t.updateStatistics(),t}function I(t){if(!a(t))return null;const e=t.clone(),{width:n,height:i,pixels:l}=t,r=l[0],s=e.pixels[0],o=t.mask;for(let a=2;a<i-1;a++){const t=new Map;for(let i=a-2;i<a+2;i++)for(let e=0;e<4;e++){const l=i*n+e;S(t,r[l],o?o[l]:1)}s[a*n]=_(t),s[a*n+1]=s[a*n+2]=s[a*n];let e=3;for(;e<n-1;e++){let i=(a-2)*n+e+1;S(t,r[i],o?o[i]:1),i=(a-1)*n+e+1,S(t,r[i],o?o[i]:1),i=a*n+e+1,S(t,r[i],o?o[i]:1),i=(a+1)*n+e+1,S(t,r[i],o?o[i]:1),i=(a-2)*n+e-3,B(t,r[i],o?o[i]:1),i=(a-1)*n+e-3,B(t,r[i],o?o[i]:1),i=a*n+e-3,B(t,r[i],o?o[i]:1),i=(a+1)*n+e-3,B(t,r[i],o?o[i]:1),s[a*n+e]=_(t)}s[a*n+e+1]=s[a*n+e]}for(let a=0;a<n;a++)s[a]=s[n+a]=s[2*n+a],s[(i-1)*n+a]=s[(i-2)*n+a];return e.updateStatistics(),e}function _(t){if(0===t.size)return 0;let e=0,n=-1,i=0;const l=t.keys();let r=l.next();for(;!r.done;)i=t.get(r.value),i>e&&(n=r.value,e=i),r=l.next();return n}function B(t,e,n){if(0===n)return;const i=t.get(e);1===i?t.delete(e):t.set(e,i-1)}function S(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function F(t,e,n){let{x:i,y:l}=e;const{width:s,height:o}=n;if(0===i&&0===l&&o===t.height&&s===t.width)return t;const{width:h,height:c}=t,u=Math.max(0,l),f=Math.max(0,i),p=Math.min(i+s,h),d=Math.min(l+o,c);if(p<0||d<0||!a(t))return null;i=Math.max(0,-i),l=Math.max(0,-l);const{pixels:m}=t,g=s*o,x=m.length,w=[];for(let a=0;a<x;a++){const e=m[a],n=r.A.createEmptyBand(t.pixelType,g);for(let t=u;t<d;t++){const r=t*h;let o=(t+l-u)*s+i;for(let t=f;t<p;t++)n[o++]=e[r+t]}w.push(n)}const y=new Uint8Array(g),A=t.mask;for(let r=u;r<d;r++){const t=r*h;let e=(r+l-u)*s+i;for(let n=f;n<p;n++)y[e++]=A?A[t+n]:1}const M=new r.A({width:n.width,height:n.height,pixelType:t.pixelType,pixels:w,mask:y});return M.updateStatistics(),M}function C(t,e=!0){if(!a(t))return null;const{pixels:n,width:i,height:l,mask:s,pixelType:o}=t,h=[],c=Math.round(i/2),u=Math.round(l/2),f=l-1,p=i-1;for(let a=0;a<n.length;a++){const t=n[a],s=r.A.createEmptyBand(o,c*u);let d=0;for(let n=0;n<l;n+=2)for(let l=0;l<i;l+=2){const r=t[n*i+l];if(e){const e=l===p?r:t[n*i+l+1],o=n===f?r:t[n*i+l+i],a=l===p?o:n===f?e:t[n*i+l+i+1];s[d++]=(r+e+o+a)/4}else s[d++]=r}h.push(s)}let d=null;if(null!=s){d=new Uint8Array(c*u);let t=0;for(let n=0;n<l;n+=2)for(let l=0;l<i;l+=2){const r=s[n*i+l];if(e){const e=l===p?r:s[n*i+l+1],o=n===f?r:s[n*i+l+i],a=l===p?o:n===f?e:s[n*i+l+i+1];d[t++]=r*e*o*a?1:0}else d[t++]=r}}return new r.A({width:c,height:u,pixelType:o,pixels:h,mask:d})}function V(t,e,n){if(!a(t))return null;const{width:i,height:l}=e;let{width:r,height:s}=t;const o=new Map,h={x:0,y:0},c=null==n?1:1+n;let u=t;for(let a=0;a<c;a++){const t=Math.ceil(r/i),n=Math.ceil(s/l);for(let r=0;r<n;r++){h.y=r*l;for(let n=0;n<t;n++){h.x=n*i;const t=F(u,h,e);o.set(`${a}/${r}/${n}`,t)}}a<c-1&&(u=C(u)),r=Math.round(r/2),s=Math.round(s/2)}return o}function D(t,e,n,i,l=0){const{width:r,height:s}=t,{width:o,height:a}=e,h=i.cols,c=i.rows,u=Math.ceil(o/h-.1/h),f=Math.ceil(a/c-.1/c);let p,d,m,g,x,w,y;const A=u*h,M=A*f*c,k=new Float32Array(M),b=new Float32Array(M),v=new Uint32Array(M),U=new Uint32Array(M);let P,T,I=0;for(let _=0;_<f;_++)for(let t=0;t<u;t++){p=12*(_*u+t),d=n[p],m=n[p+1],g=n[p+2],x=n[p+3],w=n[p+4],y=n[p+5];for(let e=0;e<c;e++){I=(_*c+e)*A+t*h,T=(e+.5)/c;for(let t=0;t<e;t++)P=(t+.5)/h,k[I+t]=(d*P+m*T+g)*r+l,b[I+t]=(x*P+w*T+y)*s+l,v[I+t]=Math.floor(k[I+t]),U[I+t]=Math.floor(b[I+t])}p+=6,d=n[p],m=n[p+1],g=n[p+2],x=n[p+3],w=n[p+4],y=n[p+5];for(let e=0;e<c;e++){I=(_*c+e)*A+t*h,T=(e+.5)/c;for(let t=e;t<h;t++)P=(t+.5)/h,k[I+t]=(d*P+m*T+g)*r+l,b[I+t]=(x*P+w*T+y)*s+l,v[I+t]=Math.floor(k[I+t]),U[I+t]=Math.floor(b[I+t])}}return{offsets_x:k,offsets_y:b,offsets_xi:v,offsets_yi:U,gridWidth:A}}function L(t,e){const{coefficients:n,spacing:i}=e,{offsets_x:l,offsets_y:r,gridWidth:s}=D(t,t,n,{rows:i[0],cols:i[1]}),{width:o,height:a}=t,h=new Float32Array(o*a),c=180/Math.PI;for(let u=0;u<a;u++)for(let t=0;t<o;t++){const e=u*s+t,n=0===u?e:e-s,i=u===a-1?e:e+s,f=l[n]-l[i],p=r[i]-r[n];if(isNaN(f)||isNaN(p))h[u*o+t]=90;else{let e=Math.atan2(p,f)*c;e=(360+e)%360,h[u*o+t]=e}}return h}function R(t,e,n,i,l="nearest"){if(!a(t))return null;"majority"===l&&(t=I(t));const{pixels:s,mask:o,bandMasks:h,pixelType:c}=t,u=t.width,f=t.height,p=r.A.getPixelArrayConstructor(c),d=s.length,{width:m,height:g}=e;let x=!1;for(let r=0;r<n.length;r+=3)-1===n[r]&&-1===n[r+1]&&-1===n[r+2]&&(x=!0);const{offsets_x:w,offsets_y:y,offsets_xi:A,offsets_yi:M,gridWidth:k}=D({width:u,height:f},e,n,i,"majority"===l?.5:0);let b;const v=(t,e,n,i)=>{const l=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let r=0;r<g;r++){b=r*k;for(let s=0;s<m;s++){if(w[b]<0||y[b]<0)t[r*m+s]=0;else if(i)t[r*m+s]=e[A[b]+M[b]*u];else{const i=Math.floor(w[b]),o=Math.floor(y[b]),a=Math.ceil(w[b]),h=Math.ceil(y[b]),c=w[b]-i,f=y[b]-o;if(!n||n[i+o*u]&&n[a+o*u]&&n[i+h*u]&&n[a+h*u]){const n=(1-c)*e[i+o*u]+c*e[a+o*u],p=(1-c)*e[i+h*u]+c*e[a+h*u];t[r*m+s]=(1-f)*n+f*p+l}else t[r*m+s]=e[A[b]+M[b]*u]}b++}}},U=[];let P;const T=h?.length===d,_=[];for(let r=0;r<d;r++){if(T){const t=new Uint8Array(m*g);v(t,h[r],h[r],!0),_.push(t)}P=new p(m*g),v(P,s[r],T?h[r]:o,"nearest"===l||"majority"===l),U.push(P)}const B=new r.A({width:m,height:g,pixelType:c,pixels:U,bandMasks:T?_:void 0});if(null!=o)B.mask=new Uint8Array(m*g),v(B.mask,o,o,!0);else if(x){B.mask=new Uint8Array(m*g);for(let t=0;t<m*g;t++)B.mask[t]=w[t]<0||y[t]<0?0:1}return B.updateStatistics(),B}},79088:function(t,e,n){n.d(e,{$Q:function(){return x},FI:function(){return m},KL:function(){return c},Lu:function(){return f},MD:function(){return h},Rn:function(){return g},Ud:function(){return B},Wu:function(){return F},Y2:function(){return d},gf:function(){return S}});n(44114),n(16573),n(78100),n(77936),n(37467),n(44732),n(79577);var i=n(94924),l=n(74138),r=n(56631);const s=new Map;s.set("meter-per-second",1),s.set("kilometer-per-hour",.277778),s.set("knots",.514444),s.set("feet-per-second",.3048),s.set("mile-per-hour",.44704);const o=180/Math.PI,a=5,h=new i.J({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function c(t,e){return s.get(t)/s.get(e)||1}function u(t){return(450-t)%360}function f(t,e="geographic"){const[n,i]=t,l=Math.sqrt(n*n+i*i);let r=Math.atan2(i,n)*o;return r=(360+r)%360,"geographic"===e&&(r=u(r)),[l,r]}function p(t,e="geographic"){let n=t[1];"geographic"===e&&(n=u(n)),n%=360;const i=t[0];return[i*Math.cos(n/o),i*Math.sin(n/o)]}function d(t,e,n,i="geographic"){if(!(0,r.AB)(t)||null==n)return t;const l="vector-magdir"===e?t.clone():m(t,e),s=l.pixels[1];for(let r=0;r<s.length;r++)s[r]="geographic"===i?(s[r]+n[r]+270)%360:(s[r]+360-n[r])%360;return"vector-magdir"===e?l:m(l,"vector-magdir")}function m(t,e,n="geographic",i=1){if(!(0,r.AB)(t))return t;const{pixels:s,width:o,height:a}=t,h=o*a,c=s[0],u=s[1],d=t.pixelType.startsWith("f")?t.pixelType:"f32",m=l.A.createEmptyBand(d,h),g=l.A.createEmptyBand(d,h);let x=0;for(let l=0;l<a;l++)for(let t=0;t<o;t++)"vector-uv"===e?([m[x],g[x]]=f([c[x],u[x]],n),m[x]*=i):([m[x],g[x]]=p([c[x],u[x]],n),m[x]*=i,g[x]*=i),x++;const w=new l.A({pixelType:d,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[m,g]});return w.updateStatistics(),w}function g(t,e,n=1){if(1===n||!(0,r.AB)(t))return t;const i=t.clone(),{pixels:l,width:s,height:o}=i,a=l[0],h=l[1];let c=0;for(let r=0;r<o;r++)for(let t=0;t<s;t++)"vector-uv"===e?(a[c]*=n,h[c]*=n):a[c]*=n,c++;return i.updateStatistics(),i}function x(t,e,n,i,l){if(null==l||!l.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/i),height:Math.round(n/i),resolution:t.width/e};const r=l.xmin,s=l.ymax,o=(t.xmax-t.xmin)/e*i,a=(t.ymax-t.ymin)/n*i,h=(o+a)/2;return t.xmin=r+Math.floor((t.xmin-r)/o)*o,t.xmax=r+Math.ceil((t.xmax-r)/o)*o,t.ymin=s+Math.floor((t.ymin-s)/a)*a,t.ymax=s+Math.ceil((t.ymax-s)/a)*a,{extent:t,width:Math.round(t.width/o),height:Math.round(t.height/a),resolution:h}}const w=y(0,0,0);function y(t=0,e=0,n=Math.PI,i=!0){i&&(n=(2*Math.PI-n)%(2*Math.PI));const l=i?-1:1,r=13*l,s=-7*l,o=-2*l,a=-16*l,h=21.75,[c,u]=M(0,e+r,n,h),[f,p]=M(t-5.5,e+s,n,h),[d,m]=M(t+5.5,e+s,n,h),[g,x]=M(t-1.5,e+o,n,h),[w,y]=M(t+1.5,e+o,n,h),[A,k]=M(t-1.5,e+a,n,h),[b,v]=M(t+1.5,e+a,n,h);return[c,u,f,p,g,x,w,y,d,m,A,k,b,v]}function A(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const i=10,l=n?-1:1,r=5*l,s=20*l,o=25*l,h=45,c=0,u=0,f=2,p=0,d=f*l,m=n?1:-1,g=i/2*m;let[x,w]=[c+g,u-s],[y,A]=[x+f*m,w],[k,b]=[y-p*m,A+d],[v,U]=[c-g,u-o],[P,T]=[v+p*m,U-d],I=Math.ceil(t/a),_=Math.floor(I/10);I-=8*_;const B=[],S=[];for(let a=0;a<I/2;a++,_--){_<=0&&I%2==1&&a===(I-1)/2&&(v=c,P=v+p*m,U=(U+w)/2,T=U-d);const[t,n]=M(v,U,e,h);if(_>0){const[i,l]=M(y,U,e,h),[r,s]=M(x,w,e,h);B.push(i),B.push(l),B.push(t),B.push(n),B.push(r),B.push(s)}else{const[i,l]=M(y,A,e,h),[r,s]=M(k,b,e,h),[o,a]=M(P,T,e,h);S.push(t),S.push(n),S.push(o),S.push(a),S.push(r),S.push(s),S.push(i),S.push(l)}U+=r,w+=r,A+=r,b+=r,T+=r}const[F,C]=M(c+g,u+s,e,h),V=(i/2+f)*m,[D,L]=M(c+V,u+s,e,h),[R,N]=M(c+g,u-o,e,h),[E,j]=M(c+V,u-o,e,h);return{pennants:B,barbs:S,shaft:[F,C,D,L,R,N,E,j]}}function M(t,e,n,i=1){const l=Math.sqrt(t*t+e*e)/i,r=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[l,(2*Math.PI+r-n)%(2*Math.PI)]}const k=[0,1,3,6,10,16,21,27,33,40,47,55,63],b=[0,.5,1,1.5,2],v=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function U(t,e,n,i){const l=c(i||"knots",n);let r;for(r=1;r<e.length;r++)if(r===e.length-1){if(t<e[r]*l)break}else if(t<=e[r]*l)break;return Math.min(r-1,e.length-2)}function P(t,e,n,i,l){let r=0;switch(e){case"beaufort_kn":r=U(t,k,"knots",n);break;case"beaufort_km":r=U(t,k,"kilometer-per-hour",n);break;case"beaufort_ft":r=U(t,k,"feet-per-second",n);break;case"beaufort_m":r=U(t,k,"meter-per-second",n);break;case"classified_arrow":r=U(t,l??[],i,n);break;case"ocean_current_m":r=U(t,b,"meter-per-second",n);break;case"ocean_current_kn":r=U(t,v,"knots",n)}return r}function T(t,e){const{style:n,inputUnit:i,outputUnit:l,breakValues:r}=e,s=h.fromJSON(i),o=h.fromJSON(l),a=42,c=15;let u=0,f=0;const{width:p,height:d,mask:m}=t,g=t.pixels[0],x=t.pixels[1],A=null!=m?m.filter((t=>t>0)).length:p*d,M=new Float32Array(A*a),k=new Uint32Array(c*A),b=e.invertDirection?y(0,0,0,!1):w;for(let h=0;h<d;h++)for(let t=0;t<p;t++){const e=h*p+t;if(!m||m[h*p+t]){const i=(x[e]+360)%360/180*Math.PI,l=P(g[e],n,s,o,r);for(let n=0;n<b.length;n+=2)M[u++]=(t+.5)/p,M[u++]=(h+.5)/d,M[u++]=b[n],M[u++]=b[n+1]+i,M[u++]=l,M[u++]=g[e];const c=7*(u/a-1);k[f++]=c,k[f++]=c+1,k[f++]=c+2,k[f++]=c+0,k[f++]=c+4,k[f++]=c+3,k[f++]=c+0,k[f++]=c+2,k[f++]=c+3,k[f++]=c+2,k[f++]=c+5,k[f++]=c+3,k[f++]=c+5,k[f++]=c+6,k[f++]=c+3}}return{vertexData:M,indexData:k}}const I=[];function _(t,e){if(0===I.length)for(let a=0;a<30;a++)I.push(A(5*a,0,!e.invertDirection));const n=c(h.fromJSON(e.inputUnit),"knots"),{width:i,height:l,mask:r}=t,s=t.pixels[0],o=t.pixels[1],u=6,f=[],p=[];let d=0,m=0;for(let h=0;h<l;h++)for(let t=0;t<i;t++){const e=h*i+t,c=s[e]*n;if((!r||r[h*i+t])&&c>=a){const n=(o[e]+360)%360/180*Math.PI,{pennants:r,barbs:s,shaft:a}=I[Math.min(Math.floor(c/5),29)];if(r.length+s.length===0)continue;let g=f.length/u;const x=(t+.5)/i,w=(h+.5)/l;for(let t=0;t<r.length;t+=2)f[d++]=x,f[d++]=w,f[d++]=r[t],f[d++]=r[t+1]+n,f[d++]=0,f[d++]=c;for(let t=0;t<s.length;t+=2)f[d++]=x,f[d++]=w,f[d++]=s[t],f[d++]=s[t+1]+n,f[d++]=0,f[d++]=c;for(let t=0;t<a.length;t+=2)f[d++]=x,f[d++]=w,f[d++]=a[t],f[d++]=a[t+1]+n,f[d++]=0,f[d++]=c;for(let t=0;t<r.length/6;t++)p[m++]=g,p[m++]=g+1,p[m++]=g+2,g+=3;for(let t=0;t<s.length/8;t++)p[m++]=g,p[m++]=g+1,p[m++]=g+2,p[m++]=g+1,p[m++]=g+2,p[m++]=g+3,g+=4;p[m++]=g+0,p[m++]=g+1,p[m++]=g+2,p[m++]=g+1,p[m++]=g+3,p[m++]=g+2,g+=4}}return{vertexData:new Float32Array(f),indexData:new Uint32Array(p)}}function B(t,e){const n=24;let i=0,l=0;const{width:r,height:s,mask:o}=t,u=t.pixels[0],f=[],p=[],d=c(h.fromJSON(e.inputUnit),"knots"),m="wind_speed"===e.style?a:Number.MAX_VALUE;for(let a=0;a<s;a++)for(let t=0;t<r;t++){const e=u[a*r+t]*d;if((!o||o[a*r+t])&&e<m){for(let n=0;n<4;n++)f[i++]=(t+.5)/r,f[i++]=(a+.5)/s,f[i++]=n<2?-.5:.5,f[i++]=n%2==0?-.5:.5,f[i++]=0,f[i++]=e;const o=4*(i/n-1);p[l++]=o,p[l++]=o+1,p[l++]=o+2,p[l++]=o+1,p[l++]=o+2,p[l++]=o+3}}return{vertexData:new Float32Array(f),indexData:new Uint32Array(p)}}function S(t,e){return"simple_scalar"===e.style?B(t,e):"wind_speed"===e.style?_(t,e):T(t,e)}function F(t,e,n,i=[0,0],r=.5){const{width:s,height:o,mask:a}=t,[h,c]=t.pixels,[u,d]=i,m=Math.round((s-u)/n),g=Math.round((o-d)/n),x=m*g,w=new Float32Array(x),y=new Float32Array(x),A=new Uint8Array(x),M="vector-uv"===e;for(let l=0;l<g;l++)for(let t=0;t<m;t++){let e=0;const i=l*m+t,g=Math.max(0,l*n+d),x=Math.max(0,t*n+u),k=Math.min(o,g+n),b=Math.min(s,x+n);for(let t=g;t<k;t++)for(let n=x;n<b;n++){const l=t*s+n;if(!a||a[l]){e++;const t=M?[h[l],c[l]]:[h[l],(360+c[l])%360],[n,r]=M?t:p(t);w[i]+=n,y[i]+=r}}if(e>=(k-g)*(b-x)*(1-r)){A[i]=1;const[t,n]=f([w[i]/e,y[i]/e]);w[i]=t,y[i]=n}else A[i]=0,w[i]=0,y[i]=0}const k=new l.A({width:m,height:g,pixels:[w,y],mask:A});return k.updateStatistics(),k}},46019:function(t,e,n){n.d(e,{CW:function(){return f},pH:function(){return M}});n(44114),n(16573),n(78100),n(77936),n(37467),n(44732),n(79577),n(2516);var i=n(51020),l=n(15114),r=n(26011),s=n(71120),o=n(62735),a=n(72465),h=n(41759);const c=l.A.getLogger("geoscene.views.2d.engine.flow.dataUtils"),u=10;async function f(t,e,n,l){const r=performance.now(),o=p(e,n),a=performance.now(),h=m(e,o,n.width,n.height),f=performance.now(),d=x(h,!0),g=performance.now(),A="Streamlines"===t?w(d,u):y(d),M=performance.now();return(0,i.A)("geoscene-2d-profiler")&&(c.info("I.1","_createFlowFieldFromData (ms)",Math.round(a-r)),c.info("I.2","_getStreamlines (ms)",Math.round(f-a)),c.info("I.3","createAnimatedLinesData (ms)",Math.round(g-f)),c.info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(M-g)),c.info("I.5","createFlowMesh (ms)",Math.round(M-r)),c.info("I.6","Mesh size (bytes)",A.vertexData.buffer.byteLength+A.indexData.buffer.byteLength)),await Promise.resolve(),(0,s.Te)(l),A}function p(t,e){const n=g(e.data,e.width,e.height,t.smoothing);return t.interpolate?(t,i)=>{const l=Math.floor(t),r=Math.floor(i);if(l<0||l>=e.width)return[0,0];if(r<0||r>=e.height)return[0,0];const s=t-l,o=i-r,a=l,h=r,c=l<e.width-1?l+1:l,u=r<e.height-1?r+1:r,f=n[2*(h*e.width+a)],p=n[2*(h*e.width+c)],d=n[2*(u*e.width+a)],m=n[2*(u*e.width+c)],g=n[2*(h*e.width+a)+1],x=n[2*(h*e.width+c)+1];return[(f*(1-o)+d*o)*(1-s)+(p*(1-o)+m*o)*s,(g*(1-o)+n[2*(u*e.width+a)+1]*o)*(1-s)+(x*(1-o)+n[2*(u*e.width+c)+1]*o)*s]}:(t,i)=>{const l=Math.round(t),r=Math.round(i);return l<0||l>=e.width||r<0||r>=e.height?[0,0]:[n[2*(r*e.width+l)],n[2*(r*e.width+l)+1]]}}function d(t,e,n,i,l,r,s,o,a){const h=[];let c=n,u=i,f=0,[p,d]=e(c,u);p*=t.velocityScale,d*=t.velocityScale;const m=Math.sqrt(p*p+d*d);let g,x;h.push({x:c,y:u,t:f,speed:m});for(let w=0;w<t.verticesPerLine;w++){let[n,i]=e(c,u);n*=t.velocityScale,i*=t.velocityScale;const p=Math.sqrt(n*n+i*i);if(p<t.minSpeedThreshold)return h;const d=n/p,m=i/p;if(c+=d*t.segmentLength,u+=m*t.segmentLength,f+=t.segmentLength/p,Math.acos(d*g+m*x)>t.maxTurnAngle)return h;if(t.collisions){const t=Math.round(c*a),e=Math.round(u*a);if(t<0||t>s-1||e<0||e>o-1)return h;const n=r[e*s+t];if(-1!==n&&n!==l)return h;r[e*s+t]=l}h.push({x:c,y:u,t:f,speed:p}),g=d,x=m}return h}function m(t,e,n,i){const l=[],r=new o.A,s=1/Math.max(t.lineCollisionWidth,1),a=Math.round(n*s),h=Math.round(i*s),c=new Int32Array(a*h);for(let o=0;o<c.length;o++)c[o]=-1;const u=[];for(let o=0;o<i;o+=t.lineSpacing)for(let e=0;e<n;e+=t.lineSpacing)u.push({x:e,y:o,sort:r.getFloat()});u.sort(((t,e)=>t.sort-e.sort));for(const{x:o,y:f}of u)if(r.getFloat()<t.density){const n=d(t,e,o,f,l.length,c,a,h,s);if(n.length<2)continue;l.push(n)}return l}function g(t,e,n,i){if(0===i)return t;const l=Math.round(3*i),r=new Array(2*l+1);let s=0;for(let h=-l;h<=l;h++){const t=Math.exp(-h*h/(i*i));r[h+l]=t,s+=t}for(let h=-l;h<=l;h++)r[h+l]/=s;const o=new Float32Array(t.length);for(let h=0;h<n;h++)for(let n=0;n<e;n++){let i=0,s=0;for(let o=-l;o<=l;o++){if(n+o<0||n+o>=e)continue;const a=r[o+l];i+=a*t[2*(h*e+(n+o))],s+=a*t[2*(h*e+(n+o))+1]}o[2*(h*e+n)]=i,o[2*(h*e+n)+1]=s}const a=new Float32Array(t.length);for(let h=0;h<e;h++)for(let t=0;t<n;t++){let i=0,s=0;for(let a=-l;a<=l;a++){if(t+a<0||t+a>=n)continue;const c=r[a+l];i+=c*o[2*((t+a)*e+h)],s+=c*o[2*((t+a)*e+h)+1]}a[2*(t*e+h)]=i,a[2*(t*e+h)+1]=s}return a}function x(t,e){const n=new o.A,i=t.reduce(((t,e)=>t+e.length),0),l=new Float32Array(4*i),r=new Array(t.length);let s=0,a=0;for(const o of t){const t=s;for(const e of o)l[4*s]=e.x,l[4*s+1]=e.y,l[4*s+2]=e.t,l[4*s+3]=e.speed,s++;r[a++]={startVertex:t,numberOfVertices:o.length,totalTime:o[o.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:l,lineDescriptors:r}}function w(t,e){const n=9,{lineVertices:i,lineDescriptors:l}=t;let r=0,s=0;for(const p of l)r+=2*p.numberOfVertices,s+=6*(p.numberOfVertices-1);const o=new Float32Array(r*n),a=new Uint32Array(s);let h=0,c=0;function u(){a[c++]=h-2,a[c++]=h,a[c++]=h-1,a[c++]=h,a[c++]=h+1,a[c++]=h-1}function f(t,e,i,l,r,s,a,c){const u=h*n;let f=0;o[u+f++]=t,o[u+f++]=e,o[u+f++]=1,o[u+f++]=i,o[u+f++]=s,o[u+f++]=a,o[u+f++]=l/2,o[u+f++]=r/2,o[u+f++]=c,h++,o[u+f++]=t,o[u+f++]=e,o[u+f++]=-1,o[u+f++]=i,o[u+f++]=s,o[u+f++]=a,o[u+f++]=-l/2,o[u+f++]=-r/2,o[u+f++]=c,h++}for(const p of l){const{totalTime:t,timeSeed:n}=p;let l=null,r=null,s=null,o=null,a=null,h=null;for(let c=0;c<p.numberOfVertices;c++){const d=i[4*(p.startVertex+c)],m=i[4*(p.startVertex+c)+1],g=i[4*(p.startVertex+c)+2],x=i[4*(p.startVertex+c)+3];let w=null,y=null,A=null,M=null;if(c>0){w=d-l,y=m-r;const i=Math.sqrt(w*w+y*y);if(w/=i,y/=i,c>1){let t=w+a,n=y+h;const i=Math.sqrt(t*t+n*n);t/=i,n/=i;const l=Math.min(1/(t*w+n*y),e);t*=l,n*=l,A=-n,M=t}else A=-y,M=w;null!==A&&null!==M&&(f(l,r,s,A,M,t,n,x),u())}l=d,r=m,s=g,a=w,h=y,o=x}f(l,r,s,-h,a,t,n,o)}return{vertexData:o,indexData:a}}function y(t){const e=16,n=1,i=2,{lineVertices:l,lineDescriptors:r}=t;let s=0,o=0;for(const S of r){const t=S.numberOfVertices-1;s+=4*t*2,o+=6*t*2}const a=new Float32Array(s*e),h=new Uint32Array(o);let c,u,f,p,d,m,g,x,w,y,A,M,k,b,v=0,U=0;function P(){h[U++]=v-8,h[U++]=v-7,h[U++]=v-6,h[U++]=v-7,h[U++]=v-5,h[U++]=v-6,h[U++]=v-4,h[U++]=v-3,h[U++]=v-2,h[U++]=v-3,h[U++]=v-1,h[U++]=v-2}function T(t,l,r,s,o,h,c,u,f,p,d,m,g,x){const w=v*e;let y=0;for(const e of[n,i])for(const n of[1,2,3,4])a[w+y++]=t,a[w+y++]=l,a[w+y++]=r,a[w+y++]=s,a[w+y++]=c,a[w+y++]=u,a[w+y++]=f,a[w+y++]=p,a[w+y++]=e,a[w+y++]=n,a[w+y++]=g,a[w+y++]=x,a[w+y++]=o/2,a[w+y++]=h/2,a[w+y++]=d/2,a[w+y++]=m/2,v++}function I(t,e){let n=w+A,i=y+M;const l=Math.sqrt(n*n+i*i);n/=l,i/=l;const r=w*n+y*i;n/=r,i/=r;let s=A+k,o=M+b;const a=Math.sqrt(s*s+o*o);s/=a,o/=a;const h=A*s+M*o;s/=h,o/=h,T(c,u,f,p,-i,n,d,m,g,x,-o,s,t,e),P()}function _(t,e,n,i,l,r){if(w=A,y=M,A=k,M=b,null==w&&null==y&&(w=A,y=M),null!=d&&null!=m){k=t-d,b=e-m;const n=Math.sqrt(k*k+b*b);k/=n,b/=n}null!=w&&null!=y&&I(l,r),c=d,u=m,f=g,p=x,d=t,m=e,g=n,x=i}function B(t,e){w=A,y=M,A=k,M=b,null==w&&null==y&&(w=A,y=M),null!=w&&null!=y&&I(t,e)}for(const S of r){c=null,u=null,f=null,p=null,d=null,m=null,g=null,x=null,w=null,y=null,A=null,M=null,k=null,b=null;const{totalTime:t,timeSeed:e}=S;for(let n=0;n<S.numberOfVertices;n++)_(l[4*(S.startVertex+n)],l[4*(S.startVertex+n)+1],l[4*(S.startVertex+n)+2],l[4*(S.startVertex+n)+3],t,e);B(t,e)}return{vertexData:a,indexData:h}}function A(t,e){const n=e.pixels,{width:i,height:l}=e,s=new Float32Array(i*l*2),o=e.mask||new Uint8Array(i*l*2);if(e.mask||o.fill(255),"vector-uv"===t)for(let r=0;r<i*l;r++)s[2*r]=n[0][r],s[2*r+1]=-n[1][r];else if("vector-magdir"===t)for(let a=0;a<i*l;a++){const t=n[0][a],e=(0,r.kU)(n[1][a]),i=Math.cos(e-Math.PI/2),l=Math.sin(e-Math.PI/2);s[2*a]=i*t,s[2*a+1]=l*t}return{data:s,mask:o,width:i,height:l}}async function M(t,e,n,l,r,s){const o=performance.now(),u=(0,a.Vp)(e.spatialReference);if(!u){const a=await k(t,e,n,l,r,s);return(0,i.A)("geoscene-2d-profiler")&&c.info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-o)),(0,i.A)("geoscene-2d-profiler")&&c.info("I.9","Number of parts",1),a}const[f,p]=u.valid,d=p-f,m=Math.ceil(e.width/d),g=e.width/m,x=Math.round(n/m);let w=e.xmin;const y=[],A=performance.now();for(let i=0;i<m;i++){const n=new h.A({xmin:w,xmax:w+g,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});y.push(k(t,n,x,l,r,s)),w+=g}const M=await Promise.all(y);(0,i.A)("geoscene-2d-profiler")&&c.info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-A)),(0,i.A)("geoscene-2d-profiler")&&c.info("I.9","Number of parts",M.length);const b={data:new Float32Array(n*l*2),mask:new Uint8Array(n*l),width:n,height:l};let v=0;for(const i of M){for(let t=0;t<i.height;t++)for(let e=0;e<i.width;e++)v+e>=n||(b.data[2*(t*n+v+e)]=i.data[2*(t*i.width+e)],b.data[2*(t*n+v+e)+1]=i.data[2*(t*i.width+e)+1],b.mask[t*n+v+e]=i.mask[t*i.width+e]);v+=i.width}return(0,i.A)("geoscene-2d-profiler")&&c.info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-o)),b}async function k(t,e,n,i,l,r){const s={requestProjectedLocalDirections:!0,signal:r};if(null!=l&&(s.timeExtent=l),"imagery"===t.type){await t.load({signal:r});const l=t.rasterInfo.dataType,o=await t.fetchImage(e,n,i,s);return o&&null!=o.pixelData&&null!=o.pixelData.pixelBlock?A(l,o.pixelData.pixelBlock):{data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i}}await t.load({signal:r});const o=t.rasterInfo.dataType,a=await t.fetchPixels(e,n,i,s);return a&&null!=a.pixelBlock?A(o,a.pixelBlock):{data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i}}}}]);
//# sourceMappingURL=7826.510e23ab.js.map