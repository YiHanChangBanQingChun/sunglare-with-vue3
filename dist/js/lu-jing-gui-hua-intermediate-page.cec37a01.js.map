{"version":3,"file":"js/lu-jing-gui-hua-intermediate-page.cec37a01.js","mappings":"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","sources":["webpack://sun-glare-project/./src/assets/share_js/routeplanning_all.js","webpack://sun-glare-project/./src/views/IntermediatepageView.vue","webpack://sun-glare-project/./src/views/IntermediatepageView.vue?2cfd"],"sourcesContent":["// routeplanning_all.js\r\nimport { nextTick } from 'vue'\r\n\r\nexport function handleKeydown (context, event) {\r\n  if (context.searchResults.length && context.searchQueryStart) {\r\n    switch (event.key) {\r\n      case 'Escape':\r\n        context.searchResults = []\r\n        break\r\n      case 'Tab':\r\n        event.preventDefault()\r\n        context.highlightedIndex = (context.highlightedIndex + 1) % context.searchResults.length\r\n        nextTick(() => {\r\n          const highlightedElement = context.$refs.searchResultsStart.querySelector('li.highlighted')\r\n          if (highlightedElement) {\r\n            highlightedElement.scrollIntoView({ block: 'nearest', behavior: 'smooth' })\r\n          }\r\n        })\r\n        break\r\n      case 'Enter':\r\n        if (context.highlightedIndex >= 0 && context.highlightedIndex < context.searchResults.length) {\r\n          context.selectResult(context.searchResults[context.highlightedIndex], true)\r\n        }\r\n        break\r\n    }\r\n  } else if (context.searchResultsEnd.length && context.searchQueryEnd) {\r\n    switch (event.key) {\r\n      case 'Escape':\r\n        context.searchResultsEnd = []\r\n        break\r\n      case 'Tab':\r\n        event.preventDefault()\r\n        context.highlightedIndex = (context.highlightedIndex + 1) % context.searchResultsEnd.length\r\n        nextTick(() => {\r\n          const highlightedElement = context.$refs.searchResultsEnd.querySelector('li.highlighted')\r\n          if (highlightedElement) {\r\n            highlightedElement.scrollIntoView({ block: 'nearest', behavior: 'smooth' })\r\n          }\r\n        })\r\n        break\r\n      case 'Enter':\r\n        if (context.highlightedIndex >= 0 && context.highlightedIndex < context.searchResultsEnd.length) {\r\n          context.selectResult(context.searchResultsEnd[context.highlightedIndex], false)\r\n        }\r\n        break\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateTime (context) {\r\n  const now = new Date()\r\n  const currentTime = `${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`\r\n  // 只有当 selectedTime 是当前时间时，才更新\r\n  if (!context.isTimeFromUrl || context.selectedTime === currentTime) {\r\n    context.selectedTime = currentTime\r\n    context.isTimeFromUrl = false // 重置标志位\r\n  }\r\n}\r\n\r\nexport function clc1 (context) {\r\n  // 清空搜索框1\r\n  context.searchQueryStart = ''\r\n}\r\n\r\nexport function clc2 (context) {\r\n  // 清空搜索框2\r\n  context.searchQueryEnd = ''\r\n}\r\n\r\nexport function isDateDisabled (context, date) {\r\n  if (!date) return false\r\n  const selected = new Date(date)\r\n  const month = selected.getMonth() + 1\r\n  const day = selected.getDate()\r\n  if (month >= 1 && month <= 7 && day !== 15) {\r\n    return true\r\n  }\r\n  if (month === 8 && day <= 25) {\r\n    return true\r\n  }\r\n  if ((month === 10 || month === 12) && day !== 15) {\r\n    return true\r\n  }\r\n  if (month === 11 && day >= 9) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nexport function handleDateChange (context, event) {\r\n  const date = event.target.value\r\n  if (isDateDisabled(context, date)) {\r\n    alert('抱歉，选择的日期未进行模拟，请选择其他日期。可选日期为，9月1日-9月30日，11月1日到9日，以及其他月份的15日.')\r\n    context.selectedDate = ''\r\n  }\r\n}\r\n\r\nexport function onTimeInputChange (context, event) {\r\n  const value = event.target.value\r\n  const [hours, minutes] = value.split(':').map(Number)\r\n  const roundedMinutes = Math.floor(minutes / 10) * 10\r\n  context.selectedTime = `${String(hours).padStart(2, '0')}:${String(roundedMinutes).padStart(2, '0')}`\r\n}\r\n\r\nexport function onSearchInputChange (context, event, isStart) {\r\n  const query = event.target.value\r\n  const searchResultsField = isStart ? 'searchResults' : 'searchResultsEnd'\r\n  if (query.includes(\"'\")) {\r\n    console.log('输入法临时输入，不发送请求')\r\n    return\r\n  }\r\n  if (query.length >= 2) {\r\n    fetch(`${process.env.VUE_APP_API_URL}/api/search`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ searchQueryStart: query })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        context[searchResultsField] = data\r\n      })\r\n      .catch((error) => {\r\n        console.error('错误:', error)\r\n      })\r\n  } else {\r\n    context[searchResultsField] = []\r\n  }\r\n}\r\n","<template>\r\n  <!-- 输入了起点和终点之后,还没有摁查询路径的画面 -->\r\n  <div class=\"lu-jing-gui-hua\">\r\n    <!-- 搜索框 -->\r\n    <!-- 外层容器 -->\r\n    <div class=\"search-containers\">\r\n      <!-- 交换的侧边栏 -->\r\n      <div class=\"revert-containers\">\r\n        <div class=\"car\"><img src='@/assets/image/map_icon/car.png'></div>\r\n        <div class=\"swap-action\">\r\n          <!-- 绑定 swap 方法到点击事件 -->\r\n          <button @click=\"swap\" title=\"切换起终点\">\r\n            <img :src=\"require('@/assets/image/map_icon/revert_new_dark.png')\" alt=\"\" class=\"revert\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <!-- 搜索起点的容器 -->\r\n      <div class=\"search-container start\">\r\n        <!-- 图片 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src='@/assets/image/map_icon/pink-circle.png' alt=\"pink\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryStart\" @input=\"onSearchInputChange($event, true)\" placeholder=\"请输入起点\" class=\"search-box search-box-start\"/>\r\n        <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete\" title=\"清空\" @click=\"clc1\">\r\n            <img src='@/assets/image/map_icon/cancel.png' alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 修正后的起点搜索结果展示 -->\r\n        <div class=\"search-results\" v-if=\"searchResults.length && searchQueryStart\" ref=\"searchResultsStart\">\r\n    <ul>\r\n      <li v-for=\"(result, index) in searchResults\" :key=\"index\" :class=\"{ 'highlighted': index === highlightedIndex }\" @click=\"selectResult(result, true)\">\r\n        {{ result.name }}\r\n      </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n      <!-- 搜索终点的容器 -->\r\n      <div class=\"search-container end\">\r\n        <!-- 图片容器 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src='@/assets/image/map_icon/green-circle.png' alt=\"green\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryEnd\" @input=\"onSearchInputChange($event, false)\" placeholder=\"请输入终点\" class=\"search-box search-box-end\"/>\r\n         <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete\" title=\"清空\" @click=\"clc2\">\r\n            <img src='@/assets/image/map_icon/cancel.png' alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 修正后的终点搜索结果展示 -->\r\n        <div class=\"search-results\" v-if=\"searchResultsEnd.length && searchQueryEnd\" ref=\"searchResultsEnd\">\r\n    <ul>\r\n      <li v-for=\"(result, index) in searchResultsEnd\" :key=\"index\" :class=\"{ 'highlighted': index === highlightedIndex }\" @click=\"selectResult(result, false)\">\r\n        {{ result.name }}\r\n      </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"search-action\" @click=\"onSearch\" title=\"搜索\">\r\n        <img :src=\"require('@/assets/image/map_icon/search.png')\" alt=\"\" class=\"search\">\r\n      </div>\r\n      <!-- 新的覆盖层容器 -->\r\n      <div v-if=\"isLoading\" class=\"loader-overlay\">\r\n      <div class=\"loader\">\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- 地图展示 -->\r\n  <div id=\"viewDiv\"></div>\r\n  <div v-if=\"ismaploading\" class=\"maploader-overlay\">\r\n    <div class=\"maploader\">\r\n    </div>\r\n  </div>\r\n  <!-- 时间选择框和路径展示框 -->\r\n  <div class=\"main-container\">\r\n    <!-- 时间选择框 -->\r\n    <div class=\"choose-time\">\r\n      <div class=\"form-group\">\r\n        <label for=\"date-input\">选择日期：</label>\r\n        <input id=\"date-input\" type=\"date\" v-model=\"selectedDate\" :min=\"minDate\" :max=\"maxDate\" :class=\"{ 'invalid-date': isDateDisabled(selectedDate) }\" @change=\"handleDateChange\">\r\n        <label for=\"time-input\">选择时间：</label>\r\n        <input id=\"time-input\" type=\"time\" v-model=\"formattedTime\" @input=\"onTimeInputChange\" step=\"600\"> <!-- 600秒 = 10分钟 -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Map from '@geoscene/core/Map.js'\r\nimport MapView from '@geoscene/core/views/MapView.js'\r\nimport Graphic from '@geoscene/core/Graphic'\r\nimport Point from '@geoscene/core/geometry/Point.js'\r\nimport GraphicsLayer from '@geoscene/core/layers/GraphicsLayer'\r\nimport axios from 'axios'\r\nimport Extent from '@geoscene/core/geometry/Extent'\r\nimport { ref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport BasemapGallery from '@geoscene/core/widgets/BasemapGallery.js'\r\nimport FeatureLayer from '@geoscene/core/layers/FeatureLayer.js'\r\nimport Compass from '@geoscene/core/widgets/Compass.js'\r\nimport ScaleBar from '@geoscene/core/widgets/ScaleBar.js'\r\nimport DistanceMeasurement2D from '@geoscene/core/widgets/DistanceMeasurement2D.js'\r\nimport LayerList from '@geoscene/core/widgets/LayerList'\r\nimport { handleKeydown, updateTime, clc1, clc2, isDateDisabled, handleDateChange, onTimeInputChange, onSearchInputChange } from '@/assets/share_js/routeplanning_all'\r\n\r\nexport default {\r\n  name: 'IntermediatePageView',\r\n  setup () {\r\n    const searchQueryStart = ref('')\r\n    const searchQueryEnd = ref('')\r\n    const selectedResultStart = ref(null)\r\n    const selectedResultEnd = ref(null)\r\n    const router = useRouter()\r\n\r\n    return {\r\n      searchQueryStart,\r\n      searchQueryEnd,\r\n      selectedResultStart,\r\n      selectedResultEnd,\r\n      router\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      searchResults: [],\r\n      searchResultsEnd: [],\r\n      isLoading: false,\r\n      ismaploading: true,\r\n      selectedDate: '', // 用户选择的日期\r\n      selectedTime: '', // 用户选择的时间\r\n      BasemapLayer: null, // 默认底图\r\n      highlightedIndex: -1 // 高亮的搜索结果索引\r\n    }\r\n  },\r\n  // 在组件挂载时初始化地图\r\n  mounted () {\r\n    if (this.$route.query.start) {\r\n      // 如果URL中有起点参数，解析并设置为选中结果\r\n      this.selectedResultStart = JSON.parse(this.$route.query.start)\r\n    }\r\n    if (this.$route.query.end) {\r\n      // 如果URL中有终点参数，解析并设置为选中结果\r\n      this.selectedResultEnd = JSON.parse(this.$route.query.end)\r\n    }\r\n    // 解析URL参数\r\n    this.parseUrlParams()\r\n    // 初始化地图\r\n    this.initMap()\r\n    // 设置定时器，每隔1分钟更新时间\r\n    setInterval(() => { this.updateTime() }, 60000)\r\n    window.addEventListener('keydown', this.handleKeydown)\r\n  },\r\n  beforeUnmount () {\r\n    window.removeEventListener('keydown', this.handleKeydown)\r\n  },\r\n  computed: {\r\n    minDate () {\r\n      return '2024-01-01'\r\n    },\r\n    maxDate () {\r\n      return '2024-12-31'\r\n    },\r\n    formattedTime () {\r\n      // 格式化时间为10分钟间隔\r\n      if (!this.selectedTime) return ''\r\n      const [hours, minutes] = this.selectedTime.split(':').map(Number)\r\n      const roundedMinutes = Math.floor(minutes / 10) * 10\r\n      return `${String(hours).padStart(2, '0')}:${String(roundedMinutes).padStart(2, '0')}`\r\n    }\r\n  },\r\n  methods: {\r\n    onTimeInputChange (event) {\r\n      onTimeInputChange(this, event)\r\n    },\r\n    isDateDisabled (date) {\r\n      return isDateDisabled(this, date)\r\n    },\r\n    // 处理日期变化\r\n    handleDateChange (event) {\r\n      handleDateChange(this, event)\r\n    },\r\n    handleKeydown (event) {\r\n      handleKeydown(this, event)\r\n    },\r\n    // 更新时间，日期\r\n    updateTime () {\r\n      updateTime(this)\r\n    },\r\n    clc1 () {\r\n      clc1(this)\r\n    },\r\n    clc2 () {\r\n      clc2(this)\r\n    },\r\n    // 解析URL参数\r\n    parseUrlParams () {\r\n      // 获取URL中的查询参数\r\n      const urlParams = new URLSearchParams(window.location.search)\r\n      const startParam = urlParams.get('start')\r\n      const endParam = urlParams.get('end')\r\n      const dateParam = urlParams.get('date')\r\n      const timeParam = urlParams.get('time')\r\n      // const BasemapLayer = urlParams.get('BasemapLayer')\r\n      // 如果有起点参数，进行解析\r\n      if (startParam) {\r\n        try {\r\n          const startObj = JSON.parse(decodeURIComponent(startParam))\r\n          if (startObj && startObj.address) {\r\n            this.searchQueryStart = startObj.name\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing start parameter:', e)\r\n        }\r\n      }\r\n      // 如果有终点参数，进行解析\r\n      if (endParam) {\r\n        try {\r\n          const endObj = JSON.parse(decodeURIComponent(endParam))\r\n          if (endObj && endObj.address) {\r\n            this.searchQueryEnd = endObj.name // 绑定终点查询字符串\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing end parameter:', e)\r\n        }\r\n      }\r\n      // 如果有日期参数，进行解析\r\n      if (dateParam) {\r\n        this.selectedDate = dateParam\r\n      }\r\n      // 如果有时间参数，进行解析\r\n      if (timeParam) {\r\n        this.selectedTime = timeParam\r\n        this.isTimeFromUrl = true // 设置标志位\r\n      }\r\n\r\n      this.created()\r\n      // 如果有底图参数，进行解析\r\n      // if (BasemapLayer) {\r\n      //   this.BasemapLayer = BasemapLayer\r\n      // }\r\n    },\r\n    // 交换起点和终点信息并跳转页面\r\n    swap () {\r\n      const tempQuery = this.searchQueryStart\r\n      this.searchQueryStart = this.searchQueryEnd\r\n      this.searchQueryEnd = tempQuery\r\n      // 交换 selectedResultStart 和 selectedResultEnd\r\n      const tempResult = this.selectedResultStart\r\n      this.selectedResultStart = this.selectedResultEnd\r\n      this.selectedResultEnd = tempResult\r\n      // 跳转到 intermediate-page 页面，并传递交换后的起点和终点信息\r\n      this.router.push({\r\n        path: '/lu-jing-gui-hua/result',\r\n        query: {\r\n          start: JSON.stringify(this.selectedResultStart),\r\n          end: JSON.stringify(this.selectedResultEnd),\r\n          date: this.selectedDate,\r\n          time: this.selectedTime,\r\n          BasemapLayer: this.BasemapName\r\n        }\r\n      })\r\n    },\r\n    onSearchInputChange (event, isStart) {\r\n      onSearchInputChange(this, event, isStart)\r\n    },\r\n    // 选择搜索结果\r\n    selectResult (result, isStart = true) {\r\n      // poi所含的信息\r\n      const simplifiedResult = {\r\n        name: result.name,\r\n        address: result.address,\r\n        wgs84_latitude: result.wgs84_latitude,\r\n        wgs84_longitude: result.wgs84_longitude,\r\n        location: [result.wgs84_longitude, result.wgs84_latitude],\r\n        baidu_index: result.baidu_index,\r\n        baidu_latitude: result.baidu_latitude,\r\n        baidu_longitude: result.baidu_longitude,\r\n        id: result.id,\r\n        label: result.label\r\n      }\r\n      let isUpdate = false\r\n\r\n      // const BasemapName = this.mapView.map.basemap.title\r\n      const BasemapName = this.BasemapLayer\r\n      console.log('BasemapName:', BasemapName)\r\n\r\n      if (isStart && this.selectedResultStart) {\r\n        isUpdate = true\r\n        this.selectedResultStart = simplifiedResult\r\n        this.searchQueryStart = simplifiedResult.name\r\n        this.searchResults = []\r\n      } else if (!isStart && this.selectedResultEnd) {\r\n        isUpdate = true\r\n        this.selectedResultEnd = simplifiedResult\r\n        this.searchQueryEnd = simplifiedResult.name\r\n        this.searchResultsEnd = []\r\n      } else {\r\n        // 设置选中结果并清空搜索结果\r\n        if (isStart) {\r\n          this.selectedResultStart = simplifiedResult\r\n          this.searchQueryStart = simplifiedResult.name\r\n          this.searchResults = []\r\n        } else {\r\n          this.selectedResultEnd = simplifiedResult\r\n          this.searchQueryEnd = simplifiedResult.name\r\n          this.searchResultsEnd = []\r\n        }\r\n      }\r\n      // 检查是否需要导航\r\n      const shouldNavigate = this.selectedResultStart || this.selectedResultEnd\r\n      // 导航逻辑\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        this.navigateToResultPage()\r\n      } else if (shouldNavigate) {\r\n        this.navigateToIntermediatePage(isStart ? 'start' : 'end', simplifiedResult, isUpdate)\r\n      }\r\n    },\r\n    // 导航到结果页面\r\n    navigateToResultPage () {\r\n      this.$router.push({\r\n        path: '/lu-jing-gui-hua/result',\r\n        // 带着参数跳转，将经纬度绑定传递给result页面\r\n        query: {\r\n          start: JSON.stringify({\r\n            ...this.selectedResultStart,\r\n            location: [this.selectedResultStart.wgs84_longitude, this.selectedResultStart.wgs84_latitude]\r\n          }),\r\n          end: JSON.stringify({\r\n            ...this.selectedResultEnd,\r\n            location: [this.selectedResultEnd.wgs84_longitude, this.selectedResultEnd.wgs84_latitude]\r\n          }),\r\n          date: this.selectedDate,\r\n          time: this.selectedTime,\r\n          // BasemapLayer: this.mapView.map.basemap.title\r\n          BasemapLayer: this.BasemapName\r\n        }\r\n      })\r\n    },\r\n    navigateToIntermediatePage (type, result, isUpdate = false) {\r\n      const path = '/lu-jing-gui-hua/intermediate-page'\r\n      const query = {\r\n        [type]: JSON.stringify(result),\r\n        date: this.selectedDate,\r\n        time: this.selectedTime,\r\n        // BasemapLayer: this.mapView.map.basemap.title\r\n        BasemapLayer: this.BasemapName\r\n      }\r\n\r\n      if (isUpdate) {\r\n        // 更新URL并刷新页面\r\n        this.$router.replace({ path, query }).then(() => {\r\n          window.location.reload()\r\n        })\r\n      } else {\r\n        // 正常导航\r\n        this.$router.push({ path, query })\r\n      }\r\n    },\r\n    // 处理路径规划事件\r\n    onSearch () {\r\n      // 检查是否两个结果都已选择\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        // 显示加载动画\r\n        this.isLoading = true\r\n        // 构造包含location属性的起点和终点对象\r\n        const startWithLocation = {\r\n          ...this.selectedResultStart,\r\n          location: [this.selectedResultStart.wgs84_longitude, this.selectedResultStart.wgs84_latitude]\r\n        }\r\n        const endWithLocation = {\r\n          ...this.selectedResultEnd,\r\n          location: [this.selectedResultEnd.wgs84_longitude, this.selectedResultEnd.wgs84_latitude]\r\n        }\r\n        const formattedTime = this.selectedTime.length === 5 ? `${this.selectedTime}:00` : this.selectedTime\r\n        console.log('Formatted Time:', formattedTime) // 打印时间参数\r\n        // 发送请求到后端进行路径规划\r\n        axios.post(`${process.env.VUE_APP_API_URL}/api/route/plan`, { start: startWithLocation, end: endWithLocation, date: this.selectedDate, time: formattedTime })\r\n          .then(response => {\r\n            // 后端返回的路径规划结果ID\r\n            const defaultRoutePlanId = response.data.default_id\r\n            const timeBasedRoutePlanId = response.data.time_based_id\r\n            console.log('默认路径规划结果ID:', defaultRoutePlanId)\r\n            console.log('基于时间的路径规划结果ID:', timeBasedRoutePlanId)\r\n            console.log('路径规划成功，时间日期是:', this.selectedDate, this.selectedTime)\r\n            // 隐藏加载动画\r\n            this.isLoading = false\r\n            // 使用Vue Router跳转到结果页面，并传递路径规划结果ID\r\n            this.$router.push({\r\n              path: '/lu-jing-gui-hua/route',\r\n              query: {\r\n                start: JSON.stringify(startWithLocation),\r\n                end: JSON.stringify(endWithLocation),\r\n                default_id: defaultRoutePlanId,\r\n                time_based_id: timeBasedRoutePlanId,\r\n                date: this.selectedDate,\r\n                time: formattedTime,\r\n                // BasemapLayer: this.mapView.map.basemap.title\r\n                BasemapLayer: this.BasemapName\r\n              }\r\n            })\r\n          })\r\n          .catch(error => {\r\n            console.error(error)\r\n            // 隐藏加载动画\r\n            this.isLoading = false\r\n            // 错误处理，例如显示提示信息\r\n            alert('路径规划失败，请稍后再试。')\r\n          })\r\n      } else {\r\n        // 如果起点或终点未选择，显示提示信息\r\n        alert('请确保起点和终点都已选择。')\r\n      }\r\n    },\r\n    // 初始化地图\r\n    initMap () {\r\n      const map = new Map({\r\n        // basemap: 'tianditu-vector' // 使用适合的底图\r\n        basemap: this.BasemapName || 'tianditu-vector'\r\n      })\r\n      this.map = map\r\n\r\n      this.view = new MapView({\r\n        container: 'viewDiv', // 使用正确的容器ID\r\n        map: map,\r\n        center: [114.3, 30.7], // 默认中心点坐标\r\n        zoom: 4, // 默认缩放级别\r\n        constraints: {\r\n          geometry: {\r\n            type: 'extent',\r\n            xmin: 113.6,\r\n            ymin: 29.9,\r\n            xmax: 115.0,\r\n            ymax: 31.3\r\n          },\r\n          minScale: 500,\r\n          maxScale: 2000000,\r\n          rotationEnabled: false,\r\n          snapToZoom: false\r\n        }\r\n      })\r\n      // 创建 BasemapGallery 实例\r\n      const basemapGallery = new BasemapGallery({\r\n        view: this.view,\r\n        source: {\r\n          query: {\r\n            title: '\"Basemaps for Developers\" AND owner:geoscenedev'\r\n          }\r\n        }\r\n      })\r\n      // 监听底图选择事件\r\n      basemapGallery.watch('activeBasemap', (newBasemap) => {\r\n        this.handleBasemapChange(newBasemap)\r\n      })\r\n      // 创建 LayerList 实例\r\n      const layerList = new LayerList({\r\n        view: this.view\r\n      })\r\n      // 创建 Compass 实例\r\n      const compass = new Compass({\r\n        view: this.view\r\n      })\r\n      // 创建 ScaleBar 实例\r\n      const scaleBar = new ScaleBar({\r\n        view: this.view,\r\n        unit: 'metric', // 使用公制单位\r\n        style: 'ruler' // 使用标尺样式\r\n      })\r\n      // 创建 DistanceMeasurement2D 实例\r\n      const distanceMeasurement2D = new DistanceMeasurement2D({\r\n        view: this.view,\r\n        unit: 'metric',\r\n        unitOptions: {\r\n          metric: ['kilometers', 'meters'],\r\n          nonMetric: ['miles', 'feet']\r\n        },\r\n        iconClass: 'esri-icon-measure-line' // 设置图标类\r\n      })\r\n      // 将 DistanceMeasurement2D 添加到地图视图的左下角\r\n      this.view.ui.add(distanceMeasurement2D, {\r\n        position: 'bottom-leading',\r\n        index: 0 // 确保它在最上面\r\n      })\r\n      // 将 BasemapGallery 添加到地图视图的右下角\r\n      this.view.ui.add(basemapGallery, {\r\n        position: 'bottom-right',\r\n        index: 0\r\n      })\r\n      // 将 LayerList 添加到地图视图的右下角\r\n      this.view.ui.add(layerList, {\r\n        position: 'bottom-right',\r\n        index: 1\r\n      })\r\n      // 移动缩放控件到左下角\r\n      this.view.ui.move('zoom', {\r\n        position: 'bottom-left',\r\n        index: 1\r\n      })\r\n      // 将指南针添加到地图视图的左下角\r\n      this.view.ui.add(compass, {\r\n        position: 'bottom-left',\r\n        index: 2\r\n      })\r\n      // 将 ScaleBar 添加到地图视图的左下角\r\n      this.view.ui.add(scaleBar, {\r\n        position: 'bottom-left',\r\n        index: 3\r\n      })\r\n      // 创建一个新的GraphicsLayer实例，以便在地图上绘制点\r\n      const graphicsLayer = new GraphicsLayer(\r\n        {\r\n          title: '起点和终点'\r\n        }\r\n      )\r\n      map.add(graphicsLayer)\r\n      // 创建 FeatureLayer 实例\r\n      const featureLayer = new FeatureLayer({\r\n        url: 'https://www.geosceneonline.cn/server/rest/services/Hosted/wuhan_village/FeatureServer',\r\n        title: '武汉县区面',\r\n        renderer: {\r\n          type: 'simple', // 使用简单渲染器\r\n          symbol: {\r\n            type: 'simple-fill', // 使用简单填充符号\r\n            color: [0, 0, 0, 0], // 填充颜色透明\r\n            outline: {\r\n              color: [0, 0, 0, 1], // 轮廓颜色红色\r\n              width: 1\r\n            }\r\n          }\r\n        },\r\n        popupTemplate: {\r\n          content: [{\r\n            type: 'fields',\r\n            fieldInfos: [{\r\n              fieldName: '县区name',\r\n              label: '县区名称'\r\n            }]\r\n          }]\r\n        }\r\n      })\r\n      // 将 FeatureLayer 添加到地图\r\n      map.add(featureLayer)\r\n      // 当视图加载完成时，绘制起点和终点\r\n      this.view.when(() => {\r\n        this.drawPoints(graphicsLayer)\r\n        this.adjustView()\r\n        this.ismaploading = false\r\n      }).catch((err) => {\r\n        console.error('MapView initialization error:', err)\r\n      })\r\n    },\r\n    // 调整视图以适应起点和终点\r\n    adjustView () {\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        const padding = 0.01 // 调整这个值以增加或减少边界的放宽程度\r\n        const extent = new Extent({\r\n          xmin: Math.min(this.selectedResultStart.location[0], this.selectedResultEnd.location[0]) - 10 * padding,\r\n          ymin: Math.min(this.selectedResultStart.location[1], this.selectedResultEnd.location[1]) - 10 * padding,\r\n          xmax: Math.max(this.selectedResultStart.location[0], this.selectedResultEnd.location[0]) + 10 * padding,\r\n          ymax: Math.max(this.selectedResultStart.location[1], this.selectedResultEnd.location[1]) + 10 * padding\r\n        })\r\n        this.view.goTo(extent).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      } else if (this.selectedResultStart) {\r\n        this.view.goTo({\r\n          center: [this.selectedResultStart.location[0], this.selectedResultStart.location[1]],\r\n          zoom: 10\r\n        }).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      } else if (this.selectedResultEnd) {\r\n        this.view.goTo({\r\n          center: [this.selectedResultEnd.location[0], this.selectedResultEnd.location[1]],\r\n          zoom: 10\r\n        }).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      }\r\n    },\r\n    // 绘制起点和终点\r\n    drawPoints (graphicsLayer) {\r\n      // 绘制起点\r\n      if (this.selectedResultStart) {\r\n        const start = this.selectedResultStart\r\n        const startPoint = new Point({\r\n          longitude: start.location[0],\r\n          latitude: start.location[1]\r\n        })\r\n\r\n        const startGraphic = new Graphic({\r\n          // 点参数设置\r\n          geometry: startPoint,\r\n          symbol: {\r\n            type: 'simple-marker', // 自动转换为 SimpleMarkerSymbol\r\n            color: 'red',\r\n            size: '20px'\r\n          },\r\n          popupTemplate: {\r\n            title: '起点信息',\r\n            content: [\r\n              {\r\n                type: 'fields',\r\n                fieldInfos: [\r\n                  {\r\n                    fieldName: 'address',\r\n                    label: '地址'\r\n                  },\r\n                  {\r\n                    fieldName: 'name',\r\n                    label: '名称'\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          attributes: start\r\n        })\r\n\r\n        graphicsLayer.add(startGraphic)\r\n      }\r\n      // 绘制终点\r\n      if (this.selectedResultEnd) {\r\n        const end = this.selectedResultEnd\r\n        const endPoint = new Point({\r\n          longitude: end.location[0],\r\n          latitude: end.location[1]\r\n        })\r\n        const endGraphic = new Graphic({\r\n          geometry: endPoint,\r\n          symbol: {\r\n            type: 'simple-marker',\r\n            color: 'green',\r\n            size: '20px'\r\n          },\r\n          popupTemplate: {\r\n            title: '终点信息',\r\n            content: [\r\n              {\r\n                type: 'fields',\r\n                fieldInfos: [\r\n                  {\r\n                    fieldName: 'address',\r\n                    label: '地址'\r\n                  },\r\n                  {\r\n                    fieldName: 'name',\r\n                    label: '名称'\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          attributes: end\r\n        })\r\n        graphicsLayer.add(endGraphic)\r\n      }\r\n    },\r\n    // 处理底图选择\r\n    handleBasemapChange (basemap) {\r\n      const basemapMapping = {\r\n        '天地图-矢量（球面墨卡托投影）': 'tianditu-vector',\r\n        '天地图-影像（球面墨卡托投影）': 'tianditu-image',\r\n        '天地图-地形（球面墨卡托投影）': 'tianditu-topography'\r\n      }\r\n      // 检查 basemap.title 是否是中文\r\n      if (basemapMapping[basemap.title]) {\r\n        this.BasemapName = basemapMapping[basemap.title]\r\n      } else {\r\n        this.BasemapName = basemap.title\r\n      }\r\n      console.log('Basemap changed:', this.BasemapName)\r\n      const urlParams = new URLSearchParams(window.location.search)\r\n      urlParams.set('BasemapLayer', this.BasemapName)\r\n      window.history.replaceState({}, '', `${window.location.pathname}?${urlParams}`)\r\n    },\r\n    created () {\r\n      const BasemapLayer = this.$route.query.BasemapLayer\r\n      const basemapMapping = {\r\n        '天地图-矢量（球面墨卡托投影）': 'tianditu-vector',\r\n        '天地图-影像（球面墨卡托投影）': 'tianditu-image',\r\n        '天地图-地形（球面墨卡托投影）': 'tianditu-topography',\r\n        '天地图-矢量（含注记）（球面墨卡托投影）': 'tianditu-vector'\r\n      }\r\n\r\n      // 如果有底图参数，进行解析\r\n      if (BasemapLayer) {\r\n        // 检查 BasemapLayer 是否是中文\r\n        if (basemapMapping[BasemapLayer]) {\r\n          this.BasemapName = basemapMapping[BasemapLayer]\r\n        } else {\r\n          this.BasemapName = BasemapLayer\r\n        }\r\n      }\r\n      console.log('BasemapLayer is update', this.BasemapName)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style src=\"@/assets/share_css/routeplanning.css\">\r\n\r\n</style>\r\n","import { render } from \"./IntermediatepageView.vue?vue&type=template&id=0d01fc32\"\nimport script from \"./IntermediatepageView.vue?vue&type=script&lang=js\"\nexport * from \"./IntermediatepageView.vue?vue&type=script&lang=js\"\n\nimport \"@/assets/share_css/routeplanning.css?vue&type=style&index=0&lang=css&external\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["handleKeydown","context","event","searchResults","length","searchQueryStart","key","preventDefault","highlightedIndex","nextTick","highlightedElement","$refs","searchResultsStart","querySelector","scrollIntoView","block","behavior","selectResult","searchResultsEnd","searchQueryEnd","updateTime","now","Date","currentTime","String","getHours","padStart","getMinutes","isTimeFromUrl","selectedTime","clc1","clc2","isDateDisabled","date","selected","month","getMonth","day","getDate","handleDateChange","target","value","alert","selectedDate","onTimeInputChange","hours","minutes","split","map","Number","roundedMinutes","Math","floor","onSearchInputChange","isStart","query","searchResultsField","includes","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","class","ref","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","src","_imports_0","_hoisted_4","onClick","_cache","args","$options","swap","title","require","alt","_hoisted_5","_hoisted_6","_imports_1","type","$event","$setup","onInput","placeholder","_hoisted_7","_imports_2","$data","_hoisted_8","_renderList","result","index","_normalizeClass","name","_hoisted_9","_createCommentVNode","_hoisted_10","_imports_3","_hoisted_11","_hoisted_12","_hoisted_13","onSearch","_hoisted_14","isLoading","_hoisted_15","id","ismaploading","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","for","min","minDate","max","maxDate","onChange","_hoisted_20","formattedTime","step","setup","selectedResultStart","selectedResultEnd","router","useRouter","BasemapLayer","mounted","this","$route","start","parse","end","parseUrlParams","initMap","setInterval","window","addEventListener","beforeUnmount","removeEventListener","computed","methods","urlParams","URLSearchParams","location","search","startParam","get","endParam","dateParam","timeParam","startObj","decodeURIComponent","address","e","endObj","created","tempQuery","tempResult","push","path","time","BasemapName","simplifiedResult","wgs84_latitude","wgs84_longitude","baidu_index","baidu_latitude","baidu_longitude","label","isUpdate","shouldNavigate","navigateToResultPage","navigateToIntermediatePage","$router","replace","reload","startWithLocation","endWithLocation","axios","post","defaultRoutePlanId","default_id","timeBasedRoutePlanId","time_based_id","Map","basemap","view","MapView","container","center","zoom","constraints","geometry","xmin","ymin","xmax","ymax","minScale","maxScale","rotationEnabled","snapToZoom","basemapGallery","BasemapGallery","source","watch","newBasemap","handleBasemapChange","layerList","LayerList","compass","Compass","scaleBar","ScaleBar","unit","style","distanceMeasurement2D","DistanceMeasurement2D","unitOptions","metric","nonMetric","iconClass","ui","add","position","move","graphicsLayer","GraphicsLayer","featureLayer","FeatureLayer","url","renderer","symbol","color","outline","width","popupTemplate","content","fieldInfos","fieldName","when","drawPoints","adjustView","err","padding","extent","Extent","goTo","startPoint","Point","longitude","latitude","startGraphic","Graphic","size","attributes","endPoint","endGraphic","basemapMapping","set","history","replaceState","pathname","__exports__","render"],"sourceRoot":""}