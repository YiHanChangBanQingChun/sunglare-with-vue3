{"version":3,"file":"js/deng-lu.f91b7792.js","mappings":"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","sources":["webpack://sun-glare-project/./src/views/LoginView.vue","webpack://sun-glare-project/./src/views/LoginView.vue?5755"],"sourcesContent":["<template>\r\n    <div class=\"deng-lu\">\r\n      <div class=\"text\">\r\n        <h1>欢迎登录</h1>\r\n      </div>\r\n      <div class=\"login-container\">\r\n        <div class=\"image-container\">\r\n          <img src=\"/login.png\" alt=\"Login Image\">\r\n        </div>\r\n      <div class=\"login-box\">\r\n        <div class=\"form-container\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">用户名:</label>\r\n          <input type=\"text\" id=\"username\" v-model=\"loginUsername\">\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n          <label for=\"password\">密码:</label>\r\n          <input type=\"password\" id=\"password\" v-model=\"loginPassword\">\r\n      </div>\r\n      <div class=\"button-group\">\r\n        <button @click=\"showRegisterModal = true\">没有账号，注册一个？</button>\r\n        <button @click=\"resetPassword\">忘记密码？</button>\r\n        <button @click=\"login\">登录</button>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- 注册模态窗口 -->\r\n  <div v-if=\"showRegisterModal\" class=\"modal-overlay\">\r\n    <div class=\"modal\">\r\n      <h2>注册</h2>\r\n      <div class=\"form-group\">\r\n        <label for=\"reg-username\">用户名：</label>\r\n        <input type=\"text\" id=\"reg-username\" v-model=\"username\" :class=\"{'invalid-input': !isUsernameValid}\">\r\n        <span class=\"note\">注意：用户名只能使用2到10字符数的中文、数字、英文三种组合。</span>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"reg-password\">密码：</label>\r\n        <input type=\"password\" id=\"reg-password\" v-model=\"password\" :class=\"{'invalid-input': !isPasswordValid}\">\r\n        <span class=\"note\">注意：密码需要使用包含英文和数字的6到10字符数。</span>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"reg-email\">邮箱：</label>\r\n        <input type=\"email\" id=\"reg-email\" v-model=\"email\" :class=\"{'invalid-input': !isEmailValid}\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"reg-security-question\">安全问题：</label>\r\n        <input type=\"text\" id=\"reg-security-question\" v-model=\"securityQuestion\">\r\n        <span class=\"note\">注意：用于忘记密码时找回。</span>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"reg-security-answer\">回答：</label>\r\n        <input type=\"text\" id=\"reg-security-answer\" v-model=\"securityAnswer\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"reg-birthday\">生日：</label>\r\n        <input type=\"date\" id=\"reg-birthday\" v-model=\"birthday\">\r\n      </div>\r\n      <div class=\"button-group\">\r\n        <button @click=\"showRegisterModal = false\">取消</button>\r\n        <button @click=\"register\">注册</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch } from 'vue'\r\n// 数据库还没搭，先随便写个结构出来，flask的后端也还没做，估计不难\r\nexport default {\r\n  setup () {\r\n    const username = ref('')\r\n    const password = ref('')\r\n    const email = ref('')\r\n    const securityQuestion = ref('')\r\n    const securityAnswer = ref('')\r\n    const birthday = ref('')\r\n    const loginUsername = ref('')\r\n    const loginPassword = ref('')\r\n    const showRegisterModal = ref(false)\r\n    const isUsernameValid = ref(true)\r\n    const isPasswordValid = ref(true)\r\n    const isEmailValid = ref(true)\r\n\r\n    // 清空注册表单，注册时调用\r\n    const clearRegisterForm = () => {\r\n      username.value = ''\r\n      password.value = ''\r\n      email.value = ''\r\n      securityQuestion.value = ''\r\n      securityAnswer.value = ''\r\n      birthday.value = ''\r\n    }\r\n\r\n    // 验证用户名\r\n    const validateUsername = (username) => {\r\n      if (username === '') {\r\n        return true // 空字符串时不进行验证\r\n      }\r\n      const regex = /^[a-zA-Z0-9\\u4e00-\\u9fa5]{2,10}$/\r\n      return regex.test(username)\r\n    }\r\n\r\n    const checkUsername = () => {\r\n      isUsernameValid.value = validateUsername(username.value)\r\n      console.log('Username valid:', isUsernameValid.value)\r\n    }\r\n\r\n    watch(username, checkUsername)\r\n\r\n    // 验证密码\r\n    const validatePassword = (password) => {\r\n      if (password === '') {\r\n        return true // 空字符串时不进行验证\r\n      }\r\n      const regex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,10}$/\r\n      return regex.test(password)\r\n    }\r\n\r\n    const checkPassword = () => {\r\n      isPasswordValid.value = validatePassword(password.value)\r\n      console.log('Password valid:', isPasswordValid.value)\r\n    }\r\n\r\n    watch(password, checkPassword)\r\n\r\n    // 验证邮箱\r\n    const validateEmail = (email) => {\r\n      if (email === '') {\r\n        return true // 空字符串时不进行验证\r\n      }\r\n      const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n      return regex.test(email)\r\n    }\r\n\r\n    const checkEmail = () => {\r\n      isEmailValid.value = validateEmail(email.value)\r\n      console.log('Email valid:', isEmailValid.value)\r\n    }\r\n\r\n    watch(email, checkEmail)\r\n\r\n    // 注册\r\n    const register = async () => {\r\n      if (!username.value || !password.value || !email.value || !securityQuestion.value || !securityAnswer.value || !birthday.value) {\r\n        alert('请填写所有字段')\r\n        return\r\n      }\r\n\r\n      if (!isUsernameValid.value) {\r\n        alert('用户名必须是2-10个字母、数字或汉字的组合')\r\n        return\r\n      }\r\n\r\n      if (!isPasswordValid.value) {\r\n        alert('密码必须是6-10个字符，并包含字母和数字')\r\n        return\r\n      }\r\n\r\n      if (!isEmailValid.value) {\r\n        alert('邮箱格式不正确')\r\n        return\r\n      }\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:5000/register', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            username: username.value,\r\n            password: password.value,\r\n            email: email.value,\r\n            security_question: securityQuestion.value,\r\n            security_answer: securityAnswer.value,\r\n            birthday: birthday.value\r\n          })\r\n        })\r\n        if (response.ok) {\r\n          const data = await response.json()\r\n          alert(data.message)\r\n          showRegisterModal.value = false\r\n          clearRegisterForm() // 清空注册表单\r\n        } else if (response.status === 400) {\r\n          const errorData = await response.json()\r\n          if (errorData.message === 'Username already exists') {\r\n            alert('用户名已存在，请重新输入')\r\n          } else {\r\n            alert(errorData.message) // 显示其他错误消息\r\n          }\r\n        } else {\r\n          const errorData = await response.json()\r\n          alert(errorData.message)\r\n        }\r\n      } catch (error) {\r\n        console.error('注册请求失败:', error)\r\n        clearRegisterForm() // 清空注册表单\r\n        alert('注册请求失败，请稍后再试。')\r\n      }\r\n    }\r\n\r\n    // 登录\r\n    const login = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            username: loginUsername.value,\r\n            password: loginPassword.value\r\n          })\r\n        })\r\n        if (response.ok) {\r\n          const data = await response.json()\r\n          alert(data.message) // 弹窗提示登录成功\r\n          // 这里可以添加更多的逻辑，比如跳转到另一个页面\r\n        } else {\r\n          const errorData = await response.json()\r\n          alert(errorData.message) // 弹窗提示登录失败\r\n        }\r\n      } catch (error) {\r\n        console.error('登录请求失败:', error)\r\n        alert('登录请求失败，请稍后再试。')\r\n      }\r\n    }\r\n\r\n    return {\r\n      // 用户信息\r\n      username,\r\n      password,\r\n      email,\r\n      securityQuestion,\r\n      securityAnswer,\r\n      birthday,\r\n\r\n      // 登录信息\r\n      loginUsername,\r\n      loginPassword,\r\n\r\n      // 模态框控制\r\n      showRegisterModal,\r\n\r\n      // 验证方法\r\n      validateUsername,\r\n      checkUsername,\r\n\r\n      // 注册方法\r\n      register,\r\n      clearRegisterForm,\r\n\r\n      // 验证状态\r\n      isUsernameValid,\r\n      isEmailValid,\r\n      isPasswordValid,\r\n\r\n      // 登录方法\r\n      login\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  width: 500px; /* 增加宽度 */\r\n  max-width: 90%; /* 确保在小屏幕上不会过宽 */\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.text > h1 {\r\n  text-align: center; /* 文本居中 */\r\n  background: -webkit-linear-gradient(rgba(238,174,202,1), rgba(148,187,233,1));\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n  color: transparent; /* 对于非WebKit浏览器的兼容 */\r\n}\r\n\r\n.text {\r\n  margin-top: 5px; /* 顶部外边距 */\r\n  margin-bottom: 5px; /* 底部外边距 */\r\n  background: rgba(109, 72, 72, 0.45);\r\n  -webkit-backdrop-filter: blur(25px);\r\n  backdrop-filter: blur(25px);\r\n  border: 1px solid rgba(255,255,255,0.45);\r\n  border-radius: 15px; /* 添加圆角 */\r\n  padding: 20px; /* 内边距 */\r\n  text-align: left /* 文本居中 */\r\n}\r\n\r\n.login-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.image-container {\r\n  aspect-ratio: 1 / 1; /* 设置容器的长宽比为1:1 */\r\n  display: flex; /* 使用flex布局使得图片能够居中 */\r\n  justify-content: center; /* 水平居中图片 */\r\n  align-items: center; /* 垂直居中图片 */\r\n  width: 55%; /* 或者根据需要设置一个具体的宽度 */\r\n  margin: auto; /* 如果需要，可以使容器在其父元素中居中 */\r\n  margin-left: 0; /* 确保图片没有左边距 */\r\n}\r\n\r\n.image-container img {\r\n  width: 100%; /* 图片宽度填满容器 */\r\n  height: 100%; /* 图片高度填满容器 */\r\n  object-fit: contain; /* 图片缩放以适应容器大小，保持原始长宽比 */\r\n  max-width: 100%; /* 确保图片最大宽度不超过容器 */\r\n  max-height: 100%; /* 确保图片最大高度不超过容器 */\r\n  margin-left: 0; /* 确保图片没有左边距 */\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .login-container {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .image-container {\r\n    width: 100%; /* 在较小屏幕上允许容器占据更多空间 */\r\n  }\r\n\r\n  .image-container img {\r\n    max-width: 100%; /* 在较小屏幕上允许图片占据更多空间 */\r\n    margin-left: 0; /* 确保图片没有左边距 */\r\n  }\r\n}\r\n\r\n.login-box{\r\n  margin-top: 5px; /* 顶部外边距 */\r\n  margin-bottom: 5px; /* 底部外边距 */\r\n  background: rgba(109, 72, 72, 0.65);\r\n  -webkit-backdrop-filter: blur(25px);\r\n  backdrop-filter: blur(25px);\r\n  border: 1px solid rgba(255,255,255,0.45);\r\n  border-radius: 15px; /* 添加圆角 */\r\n  padding: 20px; /* 内边距 */\r\n  text-align: left /* 文本居中 */\r\n}\r\n\r\n.form-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  width: 100%;\r\n  align-items: center;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n}\r\n\r\n.form-group label {\r\n  margin-bottom: 5px;\r\n  color:#ccc;\r\n}\r\n\r\n.form-group input {\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\nbutton {\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  border: none;\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px; /* 按钮之间的间隙 */\r\n  margin-top: 20px; /* 按钮组与上方内容的间隙 */\r\n}\r\n\r\n.button-group button {\r\n  padding: 10px 20px;\r\n}\r\n\r\n.form-group input {\r\n  padding: 10px 20px; /* 调整内边距以匹配按钮 */\r\n  border-radius: 5px; /* 圆角边框，与按钮一致 */\r\n  /* border: none; 去除边框 */\r\n  background-color: #f0f0f0; /* 背景颜色，可以根据需要调整 */\r\n  color: #333; /* 文字颜色，可以根据需要调整 */\r\n  margin-bottom: 10px; /* 在输入框之间添加一些间距，可根据需要调整 */\r\n  width: 90%;\r\n}\r\n\r\n/* 调整按钮样式以匹配提供的样式 */\r\nbutton {\r\n  padding: 10px 20px; /* 按钮内边距 */\r\n  background-color: #007bff; /* 按钮背景颜色 */\r\n  color: white; /* 文字颜色 */\r\n  border: none; /* 去除边框 */\r\n  border-radius: 5px; /* 圆角边框 */\r\n  cursor: pointer; /* 鼠标悬停时显示指针 */\r\n  transition: background-color 0.3s; /* 背景颜色过渡效果 */\r\n  margin-top: 10px; /* 在按钮之间添加一些间距 */\r\n}\r\n\r\n/* 鼠标悬停在按钮上时的样式 */\r\nbutton:hover {\r\n  background-color: #0056b3; /* 按钮背景颜色变深 */\r\n}\r\n\r\n.form-group input:focus {\r\n  border-color: #007bff; /* 焦点时的边框颜色 */\r\n  outline: none; /* 去除默认的焦点样式 */\r\n  border-width: 2px; /* 边框粗细 */\r\n}\r\n\r\n.login-box {\r\n  width: 33.33%; /* 设置宽度为页面的三分之一 */\r\n  max-width: 400px; /* 设置一个最大宽度以避免在大屏幕上过宽 */\r\n  margin: 0 auto; /* 水平居中 */\r\n  padding: 20px; /* 内边距，根据需要调整 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center; /* 子元素居中对齐 */\r\n}\r\n\r\n.note {\r\n  font-size: 12px;\r\n  color: #666;\r\n  margin-top: 5px;\r\n  font-style: italic;\r\n}\r\n\r\n.form-group input.invalid-input {\r\n  border-color: red !important;\r\n}\r\n\r\n.form-group input.invalid-input:focus {\r\n  border-color: red !important;\r\n  outline: none;\r\n  border-width: 2px;\r\n}\r\n</style>\r\n","import { render } from \"./LoginView.vue?vue&type=template&id=5a1c8bc0\"\nimport script from \"./LoginView.vue?vue&type=script&lang=js\"\nexport * from \"./LoginView.vue?vue&type=script&lang=js\"\n\nimport \"./LoginView.vue?vue&type=style&index=0&id=5a1c8bc0&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","src","alt","for","key","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","type","id","_cache","$event","$setup","loginUsername","_hoisted_9","_hoisted_10","loginPassword","_hoisted_11","onClick","showRegisterModal","args","_ctx","resetPassword","login","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","username","_normalizeClass","isUsernameValid","_hoisted_17","_hoisted_18","_hoisted_19","password","isPasswordValid","_hoisted_20","_hoisted_21","_hoisted_22","email","isEmailValid","_hoisted_23","_hoisted_24","securityQuestion","_hoisted_25","_hoisted_26","_hoisted_27","securityAnswer","_hoisted_28","_hoisted_29","birthday","_hoisted_30","register","_createCommentVNode","setup","ref","clearRegisterForm","value","validateUsername","regex","test","checkUsername","console","log","watch","validatePassword","checkPassword","validateEmail","checkEmail","async","response","fetch","method","headers","body","JSON","stringify","security_question","security_answer","ok","data","json","alert","message","status","errorData","error","__exports__","render"],"sourceRoot":""}