{"version":3,"file":"js/deng-lu.7adaa61d.js","mappings":"+NACSA,MAAM,W,GAIJA,MAAM,U,GACNA,MAAM,mB,GACAA,MAAM,a,GAERA,MAAM,oB,EATrB,Q,GAAAC,IAAA,EAcoCD,MAAM,gB,GAC3BA,MAAM,iB,GACTE,EAAAA,EAAAA,IAAa,UAAT,QAAI,G,GASPF,MAAM,kB,GACNA,MAAM,mB,GACTE,EAAAA,EAAAA,IAAkC,SAA3BC,IAAI,YAAW,QAAI,G,GAIzBH,MAAM,mB,GACPE,EAAAA,EAAAA,IAAiC,SAA1BC,IAAI,YAAW,OAAG,G,GAGxBH,MAAM,gB,GAENA,MAAM,gB,GArCjBC,IAAA,EA8CqCD,MAAM,iB,GAClCA,MAAM,S,GA/CfC,IAAA,G,GAAAA,IAAA,G,GAAAA,IAAA,G,GAAAA,IAAA,EAmDwCD,MAAM,mB,GACtCE,EAAAA,EAAAA,IAA6C,SAAtCC,IAAI,kBAAiB,aAAS,G,GAEhCH,MAAM,gB,GAtDnBC,IAAA,EA2DwCD,MAAM,mB,GAC/BG,IAAI,yB,GAENH,MAAM,gB,GA9DnBC,IAAA,EAmEkBD,MAAM,mB,GAChBE,EAAAA,EAAAA,IAAsC,SAA/BC,IAAI,gBAAe,QAAI,G,GAE9BD,EAAAA,EAAAA,IAAmD,QAA7CF,MAAM,QAAO,6BAAyB,G,GAC5CE,EAAAA,EAAAA,IAA2C,SAApCC,IAAI,oBAAmB,SAAK,G,GAE9BH,MAAM,gB,GAzEnBC,IAAA,EAiFgCD,MAAM,iB,GAC7BA,MAAM,S,GACTE,EAAAA,EAAAA,IAAW,UAAP,MAAE,G,GACDF,MAAM,mB,GACTE,EAAAA,EAAAA,IAAsC,SAA/BC,IAAI,gBAAe,QAAI,G,GAE9BD,EAAAA,EAAAA,IAAyD,QAAnDF,MAAM,QAAO,mCAA+B,G,GAE/CA,MAAM,mB,GACTE,EAAAA,EAAAA,IAAqC,SAA9BC,IAAI,gBAAe,OAAG,G,GAE7BD,EAAAA,EAAAA,IAAmD,QAA7CF,MAAM,QAAO,6BAAyB,G,GAEzCA,MAAM,mB,GACTE,EAAAA,EAAAA,IAAkC,SAA3BC,IAAI,aAAY,OAAG,G,GAGvBH,MAAM,mB,GACTE,EAAAA,EAAAA,IAAgD,SAAzCC,IAAI,yBAAwB,SAAK,G,GAExCD,EAAAA,EAAAA,IAAuC,QAAjCF,MAAM,QAAO,iBAAa,G,GAE7BA,MAAM,mB,GACTE,EAAAA,EAAAA,IAA4C,SAArCC,IAAI,uBAAsB,OAAG,G,IAGjCH,MAAM,mB,IACTE,EAAAA,EAAAA,IAAqC,SAA9BC,IAAI,gBAAe,OAAG,G,IAG1BH,MAAM,gB,+CA/GjBI,EAAAA,EAAAA,IAAAC,EAAAA,GAAA,OACIH,EAAAA,EAAAA,IA2CI,MA3CJI,EA2CI,EAvCFJ,EAAAA,EAAAA,IAsCE,MAtCFK,EAsCE,EArCFL,EAAAA,EAAAA,IAoCI,MApCJM,EAoCI,EAnCEN,EAAAA,EAAAA,IAkCA,MAlCAO,EAkCA,EAhCFP,EAAAA,EAAAA,IAGM,MAHNQ,EAGM,EAFJR,EAAAA,EAAAA,IAA6F,OAAvFS,IAAKC,GAAAC,aAAaC,WAAaC,EAAQ,OAA0BC,IAAI,GAAGhB,MAAM,U,OAVhGiB,KAcmBC,EAAAC,kBAAe,WAA1Bf,EAAAA,EAAAA,IAUM,MAVNgB,EAUM,EATJlB,EAAAA,EAAAA,IAQM,MARNmB,EAQM,CAPJC,GAEApB,EAAAA,EAAAA,IAAkD,SAA3CqB,KAAK,OAAQC,SAAMC,EAAA,KAAAA,EAAA,OAAAC,IAAER,EAAAS,oBAAAT,EAAAS,sBAAAD,K,UAE5BxB,EAAAA,EAAAA,IAAmD,UAA1C0B,QAAKH,EAAA,KAAAA,EAAA,OAAAC,IAAER,EAAAW,wBAAAX,EAAAW,0BAAAH,KAAwB,OAExCxB,EAAAA,EAAAA,IAA2C,UAAlC0B,QAAKH,EAAA,KAAAA,EAAA,OAAAC,IAAER,EAAAY,cAAAZ,EAAAY,gBAAAJ,KAAc,cAtB1CK,EAAAA,EAAAA,IAAA,QAyBQ7B,EAAAA,EAAAA,IAKI,MALJ8B,EAKI,EAJJ9B,EAAAA,EAAAA,IAGM,MAHN+B,EAGM,CAFJC,GAAkC,SAClChC,EAAAA,EAAAA,IAAyD,SAAlDqB,KAAK,OAAOY,GAAG,WA5BhC,sBAAAV,EAAA,KAAAA,EAAA,GAAAW,GA4BoDxB,GAAAyB,cAAaD,I,iBAAbxB,GAAAyB,sBAG9CnC,EAAAA,EAAAA,IAGM,MAHNoC,EAGM,CAFFC,GAAiC,SACjCrC,EAAAA,EAAAA,IAA6D,SAAtDqB,KAAK,WAAWY,GAAG,WAjCpC,sBAAAV,EAAA,KAAAA,EAAA,GAAAW,GAiCwDxB,GAAA4B,cAAaJ,I,iBAAbxB,GAAA4B,oBAElDtC,EAAAA,EAAAA,IACM,MADNuC,EACM,EADoBvC,EAAAA,EAAAA,IAAoC,UAA3B0B,QAAKH,EAAA,KAAAA,EAAA,OAAAC,IAAEd,GAAA8B,OAAA9B,GAAA8B,SAAAhB,KAAO,UAEjDxB,EAAAA,EAAAA,IAGM,MAHNyC,EAGM,EAFJzC,EAAAA,EAAAA,IAA6D,UAApD0B,QAAKH,EAAA,KAAAA,EAAA,GAAAW,GAAExB,GAAAgC,mBAAoB,IAAM,eAC1C1C,EAAAA,EAAAA,IAA6D,UAApD0B,QAAKH,EAAA,KAAAA,EAAA,GAAAW,GAAExB,GAAAiC,wBAAyB,IAAM,mBAO1CjC,GAAAiC,yBAAsB,WAAjCzC,EAAAA,EAAAA,IAiCM,MAjCN0C,EAiCM,EAhCJ5C,EAAAA,EAAAA,IA+BM,MA/BN6C,EA+BM,CA9BOnC,GAAAoC,qBACKpC,GAAAqC,kBAAuB,WACvC7C,EAAAA,EAAAA,IAAoB,KAlD1B8C,EAkDiB,WADoB,WAA/B9C,EAAAA,EAAAA,IAA4C,KAjDlD+C,EAiDuC,aADF,WAA/B/C,EAAAA,EAAAA,IAA0C,KAhDhDgD,EAgDuC,SAGrBxC,GAAAoC,qBAQKpC,GAAAqC,kBAKqC,WAGtD7C,EAAAA,EAAAA,IAUM,MAVNiD,EAUM,CATJC,GAAsC,SACtCpD,EAAAA,EAAAA,IAAkJ,SAA3IqB,KAAK,WAAWY,GAAG,eArElC,sBAAAV,EAAA,MAAAA,EAAA,IAAAW,GAqE0DxB,GAAA2C,YAAWnB,GAAGpC,OArExEwD,EAAAA,EAAAA,IAAA,kBAqEkG5C,GAAA6C,mBAAkB,cAAiB7C,GAAA6C,sB,eAA3E7C,GAAA2C,eAClDG,EACAC,GAA2C,SAC3CzD,EAAAA,EAAAA,IAAkK,SAA3JqB,KAAK,WAAWY,GAAG,mBAxElC,sBAAAV,EAAA,MAAAA,EAAA,IAAAW,GAwE8DxB,GAAAgD,gBAAexB,GAAGpC,OAxEhFwD,EAAAA,EAAAA,IAAA,kBAwE0G5C,GAAAiD,uBAAsB,cAAiBjD,GAAAiD,0B,eAAnFjD,GAAAgD,oBACtD1D,EAAAA,EAAAA,IAGM,MAHN4D,EAGM,EAFJ5D,EAAAA,EAAAA,IAA8C,UAArC0B,QAAKH,EAAA,MAAAA,EAAA,QAAAC,IAAEd,GAAAmD,mBAAAnD,GAAAmD,qBAAArC,KAAmB,OACnCxB,EAAAA,EAAAA,IAA2D,UAAlD0B,QAAKH,EAAA,MAAAA,EAAA,IAAAW,GAAExB,GAAAiC,wBAAyB,IAAO,aAhBpB,WAAhCzC,EAAAA,EAAAA,IAOM,MAPN4D,EAOM,EANJ9D,EAAAA,EAAAA,IAAoF,QAApF+D,EAAmC,eAAWC,EAAAA,EAAAA,IAAGtD,GAAAoC,sBAAuB,OAAI,aAC5E9C,EAAAA,EAAAA,IAA4E,SAArEqB,KAAK,OAAOY,GAAG,wBA7D9B,sBAAAV,EAAA,MAAAA,EAAA,IAAAW,GA6D+DxB,GAAAuD,oBAAmB/B,I,iBAAnBxB,GAAAuD,wBACvDjE,EAAAA,EAAAA,IAGM,MAHNkE,EAGM,EAFJlE,EAAAA,EAAAA,IAAiD,UAAxC0B,QAAKH,EAAA,MAAAA,EAAA,QAAAC,IAAEd,GAAAyD,sBAAAzD,GAAAyD,wBAAA3C,KAAsB,OACtCxB,EAAAA,EAAAA,IAA2D,UAAlD0B,QAAKH,EAAA,MAAAA,EAAA,IAAAW,GAAExB,GAAAiC,wBAAyB,IAAO,aAbpB,WAAhCzC,EAAAA,EAAAA,IAOM,MAPNkE,EAOM,CANJC,GAA6C,SAC7CrE,EAAAA,EAAAA,IAA+D,SAAxDqB,KAAK,OAAOY,GAAG,iBArD9B,sBAAAV,EAAA,KAAAA,EAAA,GAAAW,GAqDwDxB,GAAA4D,cAAapC,I,iBAAbxB,GAAA4D,kBAChDtE,EAAAA,EAAAA,IAGM,MAHNuE,EAGM,EAFJvE,EAAAA,EAAAA,IAAkD,UAAzC0B,QAAKH,EAAA,KAAAA,EAAA,OAAAC,IAAEd,GAAA8D,uBAAA9D,GAAA8D,yBAAAhD,KAAuB,OACvCxB,EAAAA,EAAAA,IAA2D,UAAlD0B,QAAKH,EAAA,MAAAA,EAAA,IAAAW,GAAExB,GAAAiC,wBAAyB,IAAO,iBAxD1Dd,EAAAA,EAAAA,IAAA,OAiFanB,GAAAgC,oBAAiB,WAA5BxC,EAAAA,EAAAA,IAmCM,MAnCNuE,EAmCM,EAlCJzE,EAAAA,EAAAA,IAiCM,MAjCN0E,EAiCM,CAhCJC,GACA3E,EAAAA,EAAAA,IAIM,MAJN4E,EAIM,CAHJC,GAAsC,SACtC7E,EAAAA,EAAAA,IAAqG,SAA9FqB,KAAK,OAAOY,GAAG,eAtF9B,sBAAAV,EAAA,MAAAA,EAAA,IAAAW,GAsFsDxB,GAAAoE,SAAQ5C,GAAGpC,OAtFjEwD,EAAAA,EAAAA,IAAA,kBAsF2F5C,GAAAqE,mB,eAArCrE,GAAAoE,YAC9CE,KAEFhF,EAAAA,EAAAA,IAIM,MAJNiF,EAIM,CAHJC,GAAqC,SACrClF,EAAAA,EAAAA,IAAyG,SAAlGqB,KAAK,WAAWY,GAAG,eA3FlC,sBAAAV,EAAA,MAAAA,EAAA,IAAAW,GA2F0DxB,GAAAyE,SAAQjD,GAAGpC,OA3FrEwD,EAAAA,EAAAA,IAAA,kBA2F+F5C,GAAA0E,mB,eAArC1E,GAAAyE,YAClDE,KAEFrF,EAAAA,EAAAA,IAGM,MAHNsF,EAGM,CAFJC,GAAkC,SAClCvF,EAAAA,EAAAA,IAA6F,SAAtFqB,KAAK,QAAQY,GAAG,YAhG/B,sBAAAV,EAAA,MAAAA,EAAA,IAAAW,GAgGoDxB,GAAA8E,MAAKtD,GAAGpC,OAhG5DwD,EAAAA,EAAAA,IAAA,kBAgGsF5C,GAAA+E,gB,eAAlC/E,GAAA8E,YAE9CxF,EAAAA,EAAAA,IAIM,MAJN0F,EAIM,CAHJC,GAAgD,SAChD3F,EAAAA,EAAAA,IAAyE,SAAlEqB,KAAK,OAAOY,GAAG,wBApG9B,sBAAAV,EAAA,MAAAA,EAAA,IAAAW,GAoG+DxB,GAAAkF,iBAAgB1D,I,iBAAhBxB,GAAAkF,oBACvDC,KAEF7F,EAAAA,EAAAA,IAGM,MAHN8F,EAGM,CAFJC,GAA4C,SAC5C/F,EAAAA,EAAAA,IAAqE,SAA9DqB,KAAK,OAAOY,GAAG,sBAzG9B,sBAAAV,EAAA,MAAAA,EAAA,IAAAW,GAyG6DxB,GAAAsF,eAAc9D,I,iBAAdxB,GAAAsF,qBAEvDhG,EAAAA,EAAAA,IAGM,MAHNiG,GAGM,CAFJC,IAAqC,SACrClG,EAAAA,EAAAA,IAAwD,SAAjDqB,KAAK,OAAOY,GAAG,eA7G9B,sBAAAV,EAAA,MAAAA,EAAA,IAAAW,GA6GsDxB,GAAAyF,SAAQjE,I,iBAARxB,GAAAyF,eAEhDnG,EAAAA,EAAAA,IAGM,MAHNoG,GAGM,EAFJpG,EAAAA,EAAAA,IAAsD,UAA7C0B,QAAKH,EAAA,MAAAA,EAAA,IAAAW,GAAExB,GAAAgC,mBAAoB,IAAO,OAC3C1C,EAAAA,EAAAA,IAAqC,UAA5B0B,QAAKH,EAAA,MAAAA,EAAA,QAAAC,IAAEd,GAAA2F,UAAA3F,GAAA2F,YAAA7E,KAAU,cAjHlCK,EAAAA,EAAAA,IAAA,W,8DA6HA,IACEyE,KAAM,YACNC,KAAAA,GACE,MAAMzB,GAAW0B,EAAAA,GAAAA,IAAI,IACfrB,GAAWqB,EAAAA,GAAAA,IAAI,IACfhB,GAAQgB,EAAAA,GAAAA,IAAI,IACZZ,GAAmBY,EAAAA,GAAAA,IAAI,IACvBR,GAAiBQ,EAAAA,GAAAA,IAAI,IACrBL,GAAWK,EAAAA,GAAAA,IAAI,IACfrE,GAAgBqE,EAAAA,GAAAA,IAAI,IACpBlE,GAAgBkE,EAAAA,GAAAA,IAAI,IACpB9D,GAAoB8D,EAAAA,GAAAA,KAAI,GACxBzB,GAAkByB,EAAAA,GAAAA,KAAI,GACtBpB,GAAkBoB,EAAAA,GAAAA,KAAI,GACtBf,GAAee,EAAAA,GAAAA,KAAI,GACnBC,GAAQC,EAAAA,GAAAA,MACRC,GAASC,EAAAA,GAAAA,MAGTjE,GAAyB6D,EAAAA,GAAAA,KAAI,GAC7BvC,GAAsBuC,EAAAA,GAAAA,IAAI,IAC1BlC,GAAgBkC,EAAAA,GAAAA,IAAI,IACpB1D,GAAuB0D,EAAAA,GAAAA,IAAI,IAC3BzD,GAAkByD,EAAAA,GAAAA,KAAI,GACtBnD,GAAcmD,EAAAA,GAAAA,IAAI,IAClB9C,GAAkB8C,EAAAA,GAAAA,IAAI,IACtBjD,GAAqBiD,EAAAA,GAAAA,KAAI,GACzB7C,GAAyB6C,EAAAA,GAAAA,KAAI,GAE7BhC,EAAwBqC,UAC5B,IACE,MAAMC,QAAiBC,GAAAA,EAAMC,KAAK,oEAA4D,CAAElC,SAAUR,EAAc2C,QACxHnE,EAAqBmE,MAAQH,EAASI,KAAKC,iBAC7C,CAAE,MAAOC,GACPC,QAAQD,MAAM,YAAaA,GAC3BE,MAAM,uBACR,GAGInD,EAAuB0C,UAC3B,IACE,MAAMC,QAAiBC,GAAAA,EAAMC,KAAK,qEAA6D,CAC7FlC,SAAUR,EAAc2C,MACxBM,gBAAiBtD,EAAoBgD,QAEnCH,EAASI,KAAKM,QAChBzE,EAAgBkE,OAAQ,EAExBK,MAAM,gBAEV,CAAE,MAAOF,GACPC,QAAQD,MAAM,cAAeA,GAC7BE,MAAM,oBACR,GAGIzD,EAAoBgD,UAIxB,GAHAtD,EAAmB0D,MAAQQ,EAAiBpE,EAAY4D,OACxDtD,EAAuBsD,MAAQQ,EAAiB/D,EAAgBuD,OAE3D1D,EAAmB0D,OAAUtD,EAAuBsD,MAKzD,GAAI5D,EAAY4D,QAAUvD,EAAgBuD,MAK1C,UACQF,GAAAA,EAAMC,KAAK,oEAA4D,CAC3ElC,SAAUR,EAAc2C,MACxBM,gBAAiBtD,EAAoBgD,MACrC5D,YAAaA,EAAY4D,QAE3BK,MAAM,oBACN3E,EAAuBsE,OAAQ,CACjC,CAAE,MAAOG,GACPC,QAAQD,MAAM,UAAWA,GACzBE,MAAM,gBACR,MAfEA,MAAM,wBALNA,MAAM,qBAoBR,EAGII,EAAyBA,KAC7BL,QAAQM,IAAI,aACZhF,EAAuBsE,OAAQ,CAAG,EAG9BW,EAAsBf,UACrB5C,EAAoBgD,OACvBK,MAAM,cACR,EAEI3G,GAAekH,EAAAA,EAAAA,KAAS,KAC5B,MAAMC,EAAOrB,EAAMsB,MAAMD,MAAQ,CAAC,EAClC,MAAO,IACFA,EACHlH,UAAWC,EAAQ,OACpB,IAGGmH,EAAoBA,KACxBlD,EAASmC,MAAQ,GACjB9B,EAAS8B,MAAQ,GACjBzB,EAAMyB,MAAQ,GACdrB,EAAiBqB,MAAQ,GACzBjB,EAAeiB,MAAQ,GACvBd,EAASc,MAAQ,EAAC,EAIdgB,EAAoBnD,IACxB,GAAiB,KAAbA,EACF,OAAO,EAET,MAAMoD,EAAQ,mCACd,OAAOA,EAAMC,KAAKrD,EAAS,EAGvBsD,EAAgBA,KACpBrD,EAAgBkC,MAAQgB,EAAiBnD,EAASmC,OAClDI,QAAQM,IAAI,kBAAmB5C,EAAgBkC,MAAM,GAGvDoB,EAAAA,EAAAA,IAAMvD,EAAUsD,GAGhB,MAAMX,EAAoBtC,IACxB,GAAiB,KAAbA,EACF,OAAO,EAET,MAAM+C,EAAQ,2CACd,OAAOA,EAAMC,KAAKhD,EAAS,EAGvBmD,EAAgBA,KACpBlD,EAAgB6B,MAAQQ,EAAiBtC,EAAS8B,OAClDI,QAAQM,IAAI,kBAAmBvC,EAAgB6B,MAAM,EAIjDsB,EAAmBA,KACvBhF,EAAmB0D,MAAQQ,EAAiBpE,EAAY4D,OACxDI,QAAQM,IAAI,sBAAuBpE,EAAmB0D,MAAM,EAIxDuB,EAAuBA,KAC3B7E,EAAuBsD,MAAQQ,EAAiB/D,EAAgBuD,OAChEI,QAAQM,IAAI,0BAA2BhE,EAAuBsD,MAAM,GAEtEoB,EAAAA,EAAAA,IAAMlD,EAAUmD,IAChBD,EAAAA,EAAAA,IAAMhF,EAAakF,IACnBF,EAAAA,EAAAA,IAAM3E,EAAiB8E,GAEvB,MAAMC,EAAiBjD,IACrB,GAAc,KAAVA,EACF,OAAO,EAET,MAAM0C,EAAQ,6BACd,OAAOA,EAAMC,KAAK3C,EAAM,EAGpBkD,EAAaA,KACjBjD,EAAawB,MAAQwB,EAAcjD,EAAMyB,OACzCI,QAAQM,IAAI,eAAgBlC,EAAawB,MAAM,GAGjDoB,EAAAA,EAAAA,IAAM7C,EAAOkD,GAGb,MAAMrC,EAAWQ,UACf,GAAK/B,EAASmC,OAAU9B,EAAS8B,OAAUzB,EAAMyB,OAAUrB,EAAiBqB,OAAUjB,EAAeiB,OAAUd,EAASc,MAKxH,GAAKlC,EAAgBkC,MAKrB,GAAK7B,EAAgB6B,MAKrB,GAAKxB,EAAawB,MAKlB,IACE,MAAM0B,EAAc,CAClB7D,SAAUA,EAASmC,MACnB9B,SAAUA,EAAS8B,MACnBzB,MAAOA,EAAMyB,MACbE,kBAAmBvB,EAAiBqB,MACpCM,gBAAiBvB,EAAeiB,MAChCd,SAAUA,EAASc,OAGf2B,EAAS,uDAEfvB,QAAQM,IAAI,WAAYiB,GACxBvB,QAAQM,IAAI,gBAAiBgB,GAE7B,MAAM7B,QAAiB+B,MAAMD,EAAQ,CACnCE,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUP,KAIvB,GADAtB,QAAQM,IAAI,mBAAoBb,EAASqC,QACrCrC,EAASsC,GAAI,CACf,MAAMlC,QAAaJ,EAASuC,OAC5BhC,QAAQM,IAAI,iBAAkBT,GAC9BI,MAAMJ,EAAKoC,SACX5G,EAAkBuE,OAAQ,EAC1Be,GACF,MAAO,GAAwB,MAApBlB,EAASqC,OAAgB,CAClC,MAAMI,QAAkBzC,EAASuC,OACjChC,QAAQM,IAAI,cAAe4B,GACD,4BAAtBA,EAAUD,QACZhC,MAAM,gBAENA,MAAMiC,EAAUD,QAEpB,KAAO,CACL,MAAMC,QAAkBzC,EAASuC,OACjChC,QAAQM,IAAI,cAAe4B,GAC3BjC,MAAMiC,EAAUD,QAClB,CACF,CAAE,MAAOlC,GACPC,QAAQD,MAAM,UAAWA,GACzBY,IACAV,MAAM,gBACR,MAnDEA,MAAM,gBALNA,MAAM,8BALNA,MAAM,+BALNA,MAAM,UAkER,EAGI9E,EAAQqE,UACZ,IACE,MAAMC,QAAiB+B,MAAM,oDAA4C,CACvEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBpE,SAAU3C,EAAc8E,MACxB9B,SAAU7C,EAAc2E,UAG5B,GAAIH,EAASsC,GAAI,CACf,MAAMlC,QAAaJ,EAASuC,OAC5B/B,MAAMJ,EAAKoC,SAEX7C,EAAM+C,SAAS,QAAS,CAAE1E,SAAU3C,EAAc8E,QAClDI,QAAQM,IAAI,QAAST,GACrBG,QAAQM,IAAI,UAAWlB,EAAMsB,OAC7B0B,YAAW,KACT9C,EAAO+C,KAAK,CAAEpD,KAAM,qBAAsB,GACzC,IACL,KAAO,CACL,MAAMiD,QAAkBzC,EAASuC,OACjC/B,MAAMiC,EAAUD,QAClB,CACF,CAAE,MAAOlC,GACPC,QAAQD,MAAM,UAAWA,GACzBE,MAAM,gBACR,GAGF,MAAO,CAELxC,WACAK,WACAK,QACAI,mBACAI,iBACAG,WAGAhE,gBACAG,gBAGAI,oBAGAuF,mBACAG,gBAGA/B,WACA2B,oBAGAjD,kBACAU,eACAL,kBACAzB,yBACAJ,qBAGAf,QAGA7B,eAEAgC,yBACAsB,sBACAnB,uBACA4E,yBACAE,sBAEAtD,gBACAvB,kBACAM,cACAK,kBACAc,wBACAL,uBACAN,oBACA0E,mBACAC,uBAEJ,G,YC9bF,MAAMmB,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAASC,MAEpE,S","sources":["webpack://sun-glare-project/./src/views/LoginView.vue","webpack://sun-glare-project/./src/views/LoginView.vue?5755"],"sourcesContent":["<template>\r\n    <div class=\"deng-lu\">\r\n      <!-- <div class=\"text\">\r\n        <h1>欢迎登录</h1>\r\n      </div> -->\r\n      <div class=\"parent\">\r\n      <div class=\"login-container\">\r\n            <div class=\"login-box\">\r\n               <!-- 头像容器 -->\r\n          <div class=\"avatar-container\">\r\n            <img :src=\"loggedInUser.avatarUrl || require('@/assets/touxiang.png')\" alt=\"\" class=\"avatar\">\r\n            <!-- 用户自定义头像按钮 -->\r\n          </div>\r\n          <!-- 头像上传模态框 -->\r\n        <div v-if=\"showAvatarModal\" class=\"avatar-modal\">\r\n          <div class=\"modal-content\">\r\n            <h2>上传头像</h2>\r\n            <!-- 头像文件输入 -->\r\n            <input type=\"file\" @change=\"handleAvatarUpload\" />\r\n            <!-- 取消按钮 -->\r\n            <button @click=\"closeAvatarUploadModal\">取消</button>\r\n            <!-- 确认上传按钮 -->\r\n            <button @click=\"uploadAvatar\">确认上传</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-container\">\r\n        <div class=\"form-group-user\">\r\n          <label for=\"username\">用户名:</label>\r\n          <input type=\"text\" id=\"username\" v-model=\"loginUsername\">\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group-user\">\r\n          <label for=\"password\">密码:</label>\r\n          <input type=\"password\" id=\"password\" v-model=\"loginPassword\">\r\n      </div>\r\n      <div class=\"login-button\"><button @click=\"login\">登  录</button>\r\n      </div>\r\n      <div class=\"button-group\">\r\n        <button @click=\"showRegisterModal = true\">没有账号，注册一个？</button>\r\n        <button @click=\"showResetPasswordModal = true\">忘记密码？</button>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  <!-- 忘记密码模态窗口 -->\r\n  <div v-if=\"showResetPasswordModal\" class=\"modal-overlay\">\r\n    <div class=\"modal\">\r\n      <h2 v-if=\"!securityQuestionText\">忘记密码</h2>\r\n      <h2 v-else-if=\"!isAnswerCorrect\">回答安全问题</h2>\r\n      <h2 v-else>修改密码</h2>\r\n      <div v-if=\"!securityQuestionText\" class=\"form-group-user\">\r\n        <label for=\"reset-username\">请输入您的用户名：</label>\r\n        <input type=\"text\" id=\"reset-username\" v-model=\"resetUsername\">\r\n        <div class=\"button-group\">\r\n          <button @click=\"fetchSecurityQuestion\">确认</button>\r\n          <button @click=\"showResetPasswordModal = false\">取消</button>\r\n        </div>\r\n      </div>\r\n      <div v-else-if=\"!isAnswerCorrect\" class=\"form-group-user\">\r\n        <label for=\"reset-password-answer\">请输入您的安全问题——{{ securityQuestionText }}的答案：</label>\r\n        <input type=\"text\" id=\"reset-password-answer\" v-model=\"resetPasswordAnswer\">\r\n        <div class=\"button-group\">\r\n          <button @click=\"verifySecurityAnswer\">确认</button>\r\n          <button @click=\"showResetPasswordModal = false\">取消</button>\r\n        </div>\r\n      </div>\r\n      <div v-else class=\"form-group-user\">\r\n        <label for=\"new-password\">新密码：</label>\r\n        <input type=\"password\" id=\"new-password\" v-model=\"newPassword\" :class=\"{'invalid-input': !isNewPasswordValid, 'valid-input': isNewPasswordValid}\">\r\n        <span class=\"note\">注意：密码需要使用包含英文和数字的6到10字符数。</span>\r\n        <label for=\"confirm-password\">确认密码：</label>\r\n        <input type=\"password\" id=\"confirm-password\" v-model=\"confirmPassword\" :class=\"{'invalid-input': !isConfirmPasswordValid, 'valid-input': isConfirmPasswordValid}\">\r\n        <div class=\"button-group\">\r\n          <button @click=\"submitNewPassword\">提交</button>\r\n          <button @click=\"showResetPasswordModal = false\">取消</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- 注册模态窗口 -->\r\n  <div v-if=\"showRegisterModal\" class=\"modal-overlay\">\r\n    <div class=\"modal\">\r\n      <h2>注册</h2>\r\n      <div class=\"form-group-user\">\r\n        <label for=\"reg-username\">用户名：</label>\r\n        <input type=\"text\" id=\"reg-username\" v-model=\"username\" :class=\"{'invalid-input': !isUsernameValid}\">\r\n        <span class=\"note\">注意：用户名只能使用2到10字符数的中文、数字、英文三种组合。</span>\r\n      </div>\r\n      <div class=\"form-group-user\">\r\n        <label for=\"reg-password\">密码：</label>\r\n        <input type=\"password\" id=\"reg-password\" v-model=\"password\" :class=\"{'invalid-input': !isPasswordValid}\">\r\n        <span class=\"note\">注意：密码需要使用包含英文和数字的6到10字符数。</span>\r\n      </div>\r\n      <div class=\"form-group-user\">\r\n        <label for=\"reg-email\">邮箱：</label>\r\n        <input type=\"email\" id=\"reg-email\" v-model=\"email\" :class=\"{'invalid-input': !isEmailValid}\">\r\n      </div>\r\n      <div class=\"form-group-user\">\r\n        <label for=\"reg-security-question\">安全问题：</label>\r\n        <input type=\"text\" id=\"reg-security-question\" v-model=\"securityQuestion\">\r\n        <span class=\"note\">注意：用于忘记密码时找回。</span>\r\n      </div>\r\n      <div class=\"form-group-user\">\r\n        <label for=\"reg-security-answer\">回答：</label>\r\n        <input type=\"text\" id=\"reg-security-answer\" v-model=\"securityAnswer\">\r\n      </div>\r\n      <div class=\"form-group-user\">\r\n        <label for=\"reg-birthday\">生日：</label>\r\n        <input type=\"date\" id=\"reg-birthday\" v-model=\"birthday\">\r\n      </div>\r\n      <div class=\"button-group\">\r\n        <button @click=\"showRegisterModal = false\">取消</button>\r\n        <button @click=\"register\">注册</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch, computed } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'LoginView',\r\n  setup () {\r\n    const username = ref('')\r\n    const password = ref('')\r\n    const email = ref('')\r\n    const securityQuestion = ref('')\r\n    const securityAnswer = ref('')\r\n    const birthday = ref('')\r\n    const loginUsername = ref('') // 你的用户名绑定\r\n    const loginPassword = ref('') // 你的密码绑定\r\n    const showRegisterModal = ref(false)\r\n    const isUsernameValid = ref(true)\r\n    const isPasswordValid = ref(true)\r\n    const isEmailValid = ref(true)\r\n    const store = useStore()\r\n    const router = useRouter()\r\n\r\n    // 添加新的状态来控制忘记密码模态框的显示和用户输入\r\n    const showResetPasswordModal = ref(false)\r\n    const resetPasswordAnswer = ref('')\r\n    const resetUsername = ref('')\r\n    const securityQuestionText = ref('')\r\n    const isAnswerCorrect = ref(false)\r\n    const newPassword = ref('')\r\n    const confirmPassword = ref('')\r\n    const isNewPasswordValid = ref(true)\r\n    const isConfirmPasswordValid = ref(true)\r\n\r\n    const fetchSecurityQuestion = async () => {\r\n      try {\r\n        const response = await axios.post(`${process.env.VUE_APP_API_URL}/api/get_security_question`, { username: resetUsername.value })\r\n        securityQuestionText.value = response.data.security_question\r\n      } catch (error) {\r\n        console.error('获取安全问题失败:', error)\r\n        alert('获取安全问题失败，请检查用户名是否正确。')\r\n      }\r\n    }\r\n\r\n    const verifySecurityAnswer = async () => {\r\n      try {\r\n        const response = await axios.post(`${process.env.VUE_APP_API_URL}/api/verify_security_answer`, {\r\n          username: resetUsername.value,\r\n          security_answer: resetPasswordAnswer.value\r\n        })\r\n        if (response.data.correct) {\r\n          isAnswerCorrect.value = true\r\n        } else {\r\n          alert('安全问题答案错误，请重试。')\r\n        }\r\n      } catch (error) {\r\n        console.error('验证安全问题答案失败:', error)\r\n        alert('验证安全问题答案失败，请稍后再试。')\r\n      }\r\n    }\r\n\r\n    const submitNewPassword = async () => {\r\n      isNewPasswordValid.value = validatePassword(newPassword.value)\r\n      isConfirmPasswordValid.value = validatePassword(confirmPassword.value)\r\n\r\n      if (!isNewPasswordValid.value || !isConfirmPasswordValid.value) {\r\n        alert('新密码或确认密码不符合要求，请重试。')\r\n        return\r\n      }\r\n\r\n      if (newPassword.value !== confirmPassword.value) {\r\n        alert('两次输入的密码不一致，请重试。')\r\n        return\r\n      }\r\n\r\n      try {\r\n        await axios.post(`${process.env.VUE_APP_API_URL}/api/forget_reset_password`, {\r\n          username: resetUsername.value,\r\n          security_answer: resetPasswordAnswer.value, // 使用安全问题答案\r\n          newPassword: newPassword.value\r\n        })\r\n        alert('密码重置成功，请使用新密码登录。')\r\n        showResetPasswordModal.value = false\r\n      } catch (error) {\r\n        console.error('重置密码失败:', error)\r\n        alert('重置密码失败，请稍后再试。')\r\n      }\r\n    }\r\n\r\n    const openResetPasswordModal = () => {\r\n      console.log('忘记密码按钮被点击')\r\n      showResetPasswordModal.value = true\r\n    }\r\n\r\n    const submitResetPassword = async () => {\r\n      if (!resetPasswordAnswer.value) {\r\n        alert('请输入您的安全问题答案')\r\n      }\r\n    }\r\n    const loggedInUser = computed(() => {\r\n      const user = store.state.user || {} // 确保 user 是一个对象，即使是空对象\r\n      return {\r\n        ...user,\r\n        avatarUrl: require('@/assets/touxiang.png')// 提供默认头像\r\n      }\r\n    })\r\n    // 清空注册表单，注册时调用\r\n    const clearRegisterForm = () => {\r\n      username.value = ''\r\n      password.value = ''\r\n      email.value = ''\r\n      securityQuestion.value = ''\r\n      securityAnswer.value = ''\r\n      birthday.value = ''\r\n    }\r\n\r\n    // 验证用户名\r\n    const validateUsername = (username) => {\r\n      if (username === '') {\r\n        return true // 空字符串时不进行验证\r\n      }\r\n      const regex = /^[a-zA-Z0-9\\u4e00-\\u9fa5]{2,10}$/\r\n      return regex.test(username)\r\n    }\r\n\r\n    const checkUsername = () => {\r\n      isUsernameValid.value = validateUsername(username.value)\r\n      console.log('Username valid:', isUsernameValid.value)\r\n    }\r\n\r\n    watch(username, checkUsername)\r\n\r\n    // 验证密码\r\n    const validatePassword = (password) => {\r\n      if (password === '') {\r\n        return true // 空字符串时不进行验证\r\n      }\r\n      const regex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,10}$/\r\n      return regex.test(password)\r\n    }\r\n\r\n    const checkPassword = () => {\r\n      isPasswordValid.value = validatePassword(password.value)\r\n      console.log('Password valid:', isPasswordValid.value)\r\n    }\r\n\r\n    // 检查新密码\r\n    const checkNewPassword = () => {\r\n      isNewPasswordValid.value = validatePassword(newPassword.value)\r\n      console.log('New Password valid:', isNewPasswordValid.value)\r\n    }\r\n\r\n    // 检查确认密码\r\n    const checkConfirmPassword = () => {\r\n      isConfirmPasswordValid.value = validatePassword(confirmPassword.value)\r\n      console.log('Confirm Password valid:', isConfirmPasswordValid.value)\r\n    }\r\n    watch(password, checkPassword)\r\n    watch(newPassword, checkNewPassword)\r\n    watch(confirmPassword, checkConfirmPassword)\r\n    // 验证邮箱\r\n    const validateEmail = (email) => {\r\n      if (email === '') {\r\n        return true // 空字符串时不进行验证\r\n      }\r\n      const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n      return regex.test(email)\r\n    }\r\n\r\n    const checkEmail = () => {\r\n      isEmailValid.value = validateEmail(email.value)\r\n      console.log('Email valid:', isEmailValid.value)\r\n    }\r\n\r\n    watch(email, checkEmail)\r\n\r\n    // 注册\r\n    const register = async () => {\r\n      if (!username.value || !password.value || !email.value || !securityQuestion.value || !securityAnswer.value || !birthday.value) {\r\n        alert('请填写所有字段')\r\n        return\r\n      }\r\n\r\n      if (!isUsernameValid.value) {\r\n        alert('用户名必须是2-10个字母、数字或汉字的组合')\r\n        return\r\n      }\r\n\r\n      if (!isPasswordValid.value) {\r\n        alert('密码必须是6-10个字符，并包含字母和数字')\r\n        return\r\n      }\r\n\r\n      if (!isEmailValid.value) {\r\n        alert('邮箱格式不正确')\r\n        return\r\n      }\r\n\r\n      try {\r\n        const requestBody = {\r\n          username: username.value,\r\n          password: password.value,\r\n          email: email.value,\r\n          security_question: securityQuestion.value,\r\n          security_answer: securityAnswer.value,\r\n          birthday: birthday.value\r\n        }\r\n\r\n        const apiUrl = `${process.env.VUE_APP_API_URL}/api/register`\r\n\r\n        console.log('API URL:', apiUrl)\r\n        console.log('Request Body:', requestBody)\r\n\r\n        const response = await fetch(apiUrl, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(requestBody)\r\n        })\r\n\r\n        console.log('Response Status:', response.status)\r\n        if (response.ok) {\r\n          const data = await response.json()\r\n          console.log('Response Data:', data)\r\n          alert(data.message)\r\n          showRegisterModal.value = false\r\n          clearRegisterForm() // 清空注册表单\r\n        } else if (response.status === 400) {\r\n          const errorData = await response.json()\r\n          console.log('Error Data:', errorData)\r\n          if (errorData.message === 'Username already exists') {\r\n            alert('用户名已存在，请重新输入')\r\n          } else {\r\n            alert(errorData.message) // 显示其他错误消息\r\n          }\r\n        } else {\r\n          const errorData = await response.json()\r\n          console.log('Error Data:', errorData)\r\n          alert(errorData.message)\r\n        }\r\n      } catch (error) {\r\n        console.error('注册请求失败:', error)\r\n        clearRegisterForm() // 清空注册表单\r\n        alert('注册请求失败，请稍后再试。')\r\n      }\r\n    }\r\n    // 登录\r\n    const login = async () => {\r\n      try {\r\n        const response = await fetch(`${process.env.VUE_APP_API_URL}/api/login`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            username: loginUsername.value,\r\n            password: loginPassword.value\r\n          })\r\n        })\r\n        if (response.ok) {\r\n          const data = await response.json()\r\n          alert(data.message) // 弹窗提示登录成功\r\n          // 更新Vuex Store\r\n          store.dispatch('login', { username: loginUsername.value })\r\n          console.log('登录成功:', data)\r\n          console.log('当前登录状态:', store.state)\r\n          setTimeout(() => {\r\n            router.push({ name: 'yong-hu-zhong-xin' })\r\n          }, 1000)\r\n        } else {\r\n          const errorData = await response.json()\r\n          alert(errorData.message) // 弹窗提示登录失败\r\n        }\r\n      } catch (error) {\r\n        console.error('登录请求失败:', error)\r\n        alert('登录请求失败，请稍后再试。')\r\n      }\r\n    }\r\n\r\n    return {\r\n      // 用户信息\r\n      username,\r\n      password,\r\n      email,\r\n      securityQuestion,\r\n      securityAnswer,\r\n      birthday,\r\n\r\n      // 登录信息\r\n      loginUsername,\r\n      loginPassword,\r\n\r\n      // 模态框控制\r\n      showRegisterModal,\r\n\r\n      // 验证方法\r\n      validateUsername,\r\n      checkUsername,\r\n\r\n      // 注册方法\r\n      register,\r\n      clearRegisterForm,\r\n\r\n      // 验证状态\r\n      isUsernameValid,\r\n      isEmailValid,\r\n      isPasswordValid,\r\n      isConfirmPasswordValid,\r\n      isNewPasswordValid,\r\n\r\n      // 登录方法\r\n      login,\r\n\r\n      // 登录用户信息\r\n      loggedInUser,\r\n\r\n      showResetPasswordModal,\r\n      resetPasswordAnswer,\r\n      securityQuestionText,\r\n      openResetPasswordModal,\r\n      submitResetPassword,\r\n\r\n      resetUsername,\r\n      isAnswerCorrect,\r\n      newPassword,\r\n      confirmPassword,\r\n      fetchSecurityQuestion,\r\n      verifySecurityAnswer,\r\n      submitNewPassword,\r\n      checkNewPassword,\r\n      checkConfirmPassword\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.deng-lu {\r\n  background-image: url('~@/assets/bg2.jpg'); /* 替换为你的图片路径 */\r\n  background-size: cover; /* 背景图片覆盖整个元素 */\r\n  background-repeat: no-repeat; /* 防止背景图片重复 */\r\n  background-attachment: fixed; /* 背景图片固定，不随页面滚动 */\r\n  background-position: center center; /* 背景图片居中显示 */\r\n}\r\n\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url('~@/assets/bg4.jpg'); /* 替换为你的图片路径 */\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal {\r\n  background-image: radial-gradient(circle, #fce3688e, #33b5fc76); /* 渐变 */;\r\n  -webkit-backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  border-radius: 10px; /* 添加圆角边框 */\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  width: 500px; /* 增加宽度 */\r\n  max-width: 90%; /* 确保在小屏幕上不会过宽 */\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.text > h1 {\r\n  text-align: center; /* 文本居中 */\r\n  background: -webkit-linear-gradient(rgba(238,174,202,1), rgba(148,187,233,1));\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n  color: transparent; /* 对于非WebKit浏览器的兼容 */\r\n}\r\n\r\n.text {\r\n  margin-top: 5px; /* 顶部外边距 */\r\n  margin-bottom: 5px; /* 底部外边距 */\r\n  -webkit-backdrop-filter: blur(25px);\r\n  backdrop-filter: blur(25px);\r\n  border: 1px solid rgba(255,255,255,0.45);\r\n  border-radius: 15px; /* 添加圆角 */\r\n  padding: 20px; /* 内边距 */\r\n  text-align: left /* 文本居中 */\r\n}\r\n\r\n.login-container {\r\n   display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.image-container {\r\n  aspect-ratio: 1 / 1; /* 设置容器的长宽比为1:1 */\r\n  display: flex; /* 使用flex布局使得图片能够居中 */\r\n  justify-content: center; /* 水平居中图片 */\r\n  align-items: center; /* 垂直居中图片 */\r\n  width: 55%; /* 或者根据需要设置一个具体的宽度 */\r\n  margin: auto; /* 如果需要，可以使容器在其父元素中居中 */\r\n  margin-left: 0; /* 确保图片没有左边距 */\r\n}\r\n\r\n.image-container img {\r\n  width: 100%; /* 图片宽度填满容器 */\r\n  height: 100%; /* 图片高度填满容器 */\r\n  object-fit: contain; /* 图片缩放以适应容器大小，保持原始长宽比 */\r\n  max-width: 100%; /* 确保图片最大宽度不超过容器 */\r\n  max-height: 100%; /* 确保图片最大高度不超过容器 */\r\n  margin-left: 0; /* 确保图片没有左边距 */\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .login-container {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .image-container {\r\n    width: 100%; /* 在较小屏幕上允许容器占据更多空间 */\r\n  }\r\n\r\n  .image-container img {\r\n    max-width: 100%; /* 在较小屏幕上允许图片占据更多空间 */\r\n    margin-left: 0; /* 确保图片没有左边距 */\r\n  }\r\n}\r\n\r\n.login-box {\r\n  width: 90%; /* 设置宽度为页面的三分之一 */\r\n  max-width: 600px; /* 设置一个最大宽度以避免在大屏幕上过宽 */\r\n  padding: 20px; /* 内边距，根据需要调整 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center; /* 子元素居中对齐 */\r\n  background-image: linear-gradient( #fce3688e, #33b5fc76); /* 渐变 */;\r\n  -webkit-backdrop-filter: blur(25px);\r\n  backdrop-filter: blur(25px);\r\n  border: 1px solid rgba(255, 255, 255, 0.45);\r\n  border-radius: 15px; /* 添加圆角 */\r\n  text-align: left; /* 文本左对齐 */\r\n  margin: 10px auto; /* 水平居中，注意这里只影响左右方向 */\r\n}\r\n\r\n/* 增加以下样式到包裹.login-box的父元素 */\r\n.parent {\r\n  display: flex;\r\n  justify-content: center; /* 水平居中 */\r\n  align-items: center; /* 垂直居中 */\r\n  min-height: 100vh; /* 确保父容器至少为视窗高度 */\r\n}\r\n\r\n.form-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  width: 100%;\r\n  align-items: center;\r\n}\r\n\r\n.form-group-user {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n}\r\n\r\n.form-group-user label {\r\n  margin-bottom: 5px;\r\n  color:rgb(255, 255, 255);\r\n  font-size: 16px;         /* 增大字体大小 */\r\n  font-weight: bold;        /* 字体加粗 */\r\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 1); /* 给文字添加阴影效果 */\r\n}\r\n\r\n.form-group-user input {\r\n  padding: 10px 20px; /* 调整内边距以匹配按钮 */\r\n  border-radius: 25px; /* 圆角边框，与按钮一致 */\r\n  border: 1.5px solid #a8a7a7; /* 保留边框 */\r\n  background-color: #ffffff2d; /* 背景颜色，可以根据需要调整 */\r\n  color: #333; /* 文字颜色，可以根据需要调整 */\r\n  margin-bottom: 10px; /* 在输入框之间添加一些间距，可根据需要调整 */\r\n  width: 90%;\r\n}\r\nbutton {\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  border: none;\r\n  background-color: #007bff;\r\n  color: rgb(44, 47, 50);\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px; /* 按钮之间的间隙 */\r\n  margin-top: 20px; /* 按钮组与上方内容的间隙 */\r\n}\r\n\r\n.button-group button {\r\n  background-color: #fdfcd45d; /* 设置背景色为透明 */\r\n  font-weight: bold;              /* 字体加粗 */\r\n  color: #ffffff;                  /* 设置字体颜色，这里假设为白色，您可以根据需要调整 */\r\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 1); /* 添加字体阴影效果 */\r\n  border: 1px solid transparent;  /* 设置边框为透明，如有需要可以设置边框颜色 */\r\n  padding: 10px 20px;             /* 设置按钮内边距 */\r\n  border-radius: 5px;              /* 设置圆角边框 */\r\n  cursor: pointer;                 /* 鼠标悬停时显示指针 */\r\n  transition: all 0.3s ease;      /* 平滑过渡效果 */\r\n  margin: 0 10px;                 /* 设置按钮外边距，根据需要调整 */\r\n  font-size: 14px;\r\n}\r\n\r\n.button-group button:hover {\r\n  background-color: rgba(234, 201, 69, 0.667); /* 鼠标悬浮时添加轻微的背景色 */\r\n  color: #ffffff;                  /* 鼠标悬浮时的字体颜色 */\r\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 1); /* 鼠标悬浮时的字体阴影效果增强 */\r\n}\r\n\r\n/* 调整按钮样式以匹配提供的样式 */\r\nbutton {\r\n  padding: 10px 20px; /* 按钮内边距 */\r\n  background-color: #57b6f6; /* 按钮背景颜色 */\r\n  color: white; /* 文字颜色 */\r\n  border: none; /* 去除边框 */\r\n  border-radius: 5px; /* 圆角边框 */\r\n  cursor: pointer; /* 鼠标悬停时显示指针 */\r\n  transition: background-color 0.3s; /* 背景颜色过渡效果 */\r\n  margin-top: 10px; /* 在按钮之间添加一些间距 */\r\n}\r\n/* 鼠标悬停在按钮上时的样式 */\r\nbutton:hover {\r\n  background-color: #0056b3; /* 按钮背景颜色变深 */\r\n}\r\n\r\n.form-group-user input:focus {\r\n  border-color: #007bff; /* 焦点时的边框颜色 */\r\n  outline: none; /* 去除默认的焦点样式 */\r\n  border-width: 2px; /* 边框粗细 */\r\n}\r\n\r\n.note {\r\n  font-size: 12px;\r\n  color: rgba(112, 73, 73, 0.75);\r\n  margin-top: 5px;\r\n  font-style: italic;\r\n}\r\n\r\n.form-group-user input.invalid-input {\r\n  border-color: red !important;\r\n}\r\n\r\n.form-group-user input.invalid-input:focus {\r\n  border-color: red !important;\r\n  outline: none;\r\n  border-width: 2px;\r\n}\r\n\r\n.modal h2 {\r\n  text-align: center;\r\n  color: rgb(255, 255, 255); /* 设置文本颜色为白色 */\r\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 1); /* 给文字添加阴影效果 */\r\n}\r\n\r\n.avatar-container {\r\n  display: flex;          /* 使用flex布局 */\r\n  justify-content: center; /* 水平居中头像 */\r\n  align-items: center;     /* 垂直居中头像 */\r\n  /* 可以根据需要添加其他样式，如边距等 */\r\n  margin-bottom: 20px;     /* 头像和下方内容的距离 */\r\n}\r\n\r\n/* 添加或更新头像图片的样式 */\r\n.avatar {\r\n  width: 100px;    /* 设置头像的宽度 */\r\n  height: 100px;   /* 设置头像的高度，保持宽高比 */\r\n  object-fit: cover;/* 确保图片覆盖整个区域，不被拉伸变形 */\r\n  border-radius: 50%; /* 设置圆形头像 */\r\n  border: 4px solid #fff; /* 添加白色边框，根据需要调整宽度和颜色 */\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* 添加阴影效果 */\r\n}\r\n.login-button {\r\n  display: flex;          /* 使用flex布局 */\r\n  justify-content: center; /* 水平居中 */\r\n  align-items: center;     /* 垂直居中 */\r\n  gap: 10px;              /* 如果有多个按钮或元素，设置间距 */\r\n  text-align: center; /* 文本居中 */\r\n  padding-top: 20px; /* 根据需要调整内边距 */\r\n}\r\n\r\n/* 按钮样式 */\r\n.login-button button {\r\n  width: 350px;\r\n  padding: 15px 30px;      /* 增加内边距，使按钮变大 */\r\n  font-size: 18px;         /* 增大字体大小 */\r\n  font-weight: bold;        /* 字体加粗 */\r\n  background-image: linear-gradient(45deg, #57b6f6, #f8a602); /* 45度角的线性渐变 */\r\n  color: white;            /* 字体颜色 */\r\n  border: none;            /* 去除边框 */\r\n  border-radius: 25px;       /* 圆角边框 */\r\n  cursor: pointer;          /* 鼠标悬停时显示指针 */\r\n  transition: background-color 0.3s; /* 背景颜色过渡效果 */\r\n}\r\n\r\n/* 鼠标悬停在按钮上时的样式 */\r\n.login-button button:hover {\r\n  background-color: #0056b3; /* 按钮背景颜色变深 */\r\n}\r\n\r\n.reset-form-group-user{\r\n  margin-bottom: 5px;\r\n  color:rgb(255, 255, 255);\r\n  font-size: 16px;         /* 增大字体大小 */\r\n  font-weight: bold;        /* 字体加粗 */\r\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 1); /* 给文字添加阴影效果 */\r\n}\r\n.reset-form-group-user input{\r\n  padding: 10px 20px; /* 调整内边距以匹配按钮 */\r\n  border-radius: 25px; /* 圆角边框，与按钮一致 */\r\n  /* border: none; 去除边框 */\r\n  background-color: #ffffff2d; /* 背景颜色，可以根据需要调整 */\r\n  color: #333; /* 文字颜色，可以根据需要调整 */\r\n  margin-bottom: 10px; /* 在输入框之间添加一些间距，可根据需要调整 */\r\n  margin-top: 30px;\r\n  width: 90%;\r\n}\r\n</style>\r\n","import { render } from \"./LoginView.vue?vue&type=template&id=636a1031\"\nimport script from \"./LoginView.vue?vue&type=script&lang=js\"\nexport * from \"./LoginView.vue?vue&type=script&lang=js\"\n\nimport \"./LoginView.vue?vue&type=style&index=0&id=636a1031&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","key","_createElementVNode","for","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","src","$setup","loggedInUser","avatarUrl","require","alt","_hoisted_6","_ctx","showAvatarModal","_hoisted_7","_hoisted_8","_hoisted_9","type","onChange","_cache","args","handleAvatarUpload","onClick","closeAvatarUploadModal","uploadAvatar","_createCommentVNode","_hoisted_10","_hoisted_11","_hoisted_12","id","$event","loginUsername","_hoisted_13","_hoisted_14","loginPassword","_hoisted_15","login","_hoisted_16","showRegisterModal","showResetPasswordModal","_hoisted_17","_hoisted_18","securityQuestionText","isAnswerCorrect","_hoisted_21","_hoisted_20","_hoisted_19","_hoisted_28","_hoisted_29","newPassword","_normalizeClass","isNewPasswordValid","_hoisted_30","_hoisted_31","confirmPassword","isConfirmPasswordValid","_hoisted_32","submitNewPassword","_hoisted_25","_hoisted_26","_toDisplayString","resetPasswordAnswer","_hoisted_27","verifySecurityAnswer","_hoisted_22","_hoisted_23","resetUsername","_hoisted_24","fetchSecurityQuestion","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","username","isUsernameValid","_hoisted_38","_hoisted_39","_hoisted_40","password","isPasswordValid","_hoisted_41","_hoisted_42","_hoisted_43","email","isEmailValid","_hoisted_44","_hoisted_45","securityQuestion","_hoisted_46","_hoisted_47","_hoisted_48","securityAnswer","_hoisted_49","_hoisted_50","birthday","_hoisted_51","register","name","setup","ref","store","useStore","router","useRouter","async","response","axios","post","value","data","security_question","error","console","alert","security_answer","correct","validatePassword","openResetPasswordModal","log","submitResetPassword","computed","user","state","clearRegisterForm","validateUsername","regex","test","checkUsername","watch","checkPassword","checkNewPassword","checkConfirmPassword","validateEmail","checkEmail","requestBody","apiUrl","fetch","method","headers","body","JSON","stringify","status","ok","json","message","errorData","dispatch","setTimeout","push","__exports__","render"],"sourceRoot":""}