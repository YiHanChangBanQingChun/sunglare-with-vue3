{"version":3,"file":"js/lu-jing-gui-hua-result.bd8efbaa.js","mappings":"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","sources":["webpack://sun-glare-project/./src/views/RouteresultView.vue","webpack://sun-glare-project/./src/views/RouteresultView.vue?9414"],"sourcesContent":["<template>\r\n  <!-- 输入了起点和终点之后,还没有摁查询路径的画面 -->\r\n  <div class=\"lu-jing-gui-hua\">\r\n    <!-- 搜索框 -->\r\n    <!-- 外层容器 -->\r\n    <div class=\"search-containers\">\r\n      <!-- 交换的侧边栏 -->\r\n      <div class=\"revert-containers\">\r\n        <div class=\"car\"><img src='@/assets/car.png'></div>\r\n        <div class=\"swap-action\">\r\n          <!-- 绑定 swap 方法到点击事件 -->\r\n          <button @click=\"swap\" title=\"切换起终点\">\r\n            <img :src=\"require('@/assets/revert_new.png')\" alt=\"\" class=\"revert\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <!-- 搜索起点的容器 -->\r\n      <div class=\"search-container start\">\r\n        <!-- 图片 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src='@/assets/pink-circle.png' alt=\"pink\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryStart\" @input=\"onSearchInputChange($event, true)\" placeholder=\"请输入起点\" class=\"search-box search-box-start\"/>\r\n        <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete\" title=\"清空\" @click=\"clc1\">\r\n            <img src='@/assets/cancel.png' alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 修正后的起点搜索结果展示 -->\r\n      <div class=\"search-results\" v-if=\"searchResults.length && searchQueryStart\" ref=\"searchResultsStart\">\r\n        <ul>\r\n          <li v-for=\"(result, index) in searchResults\" :key=\"index\" :class=\"{ 'highlighted': index === highlightedIndex }\" @click=\"selectResult(result, true)\">\r\n            {{ result.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n      <!-- 搜索终点的容器 -->\r\n      <div class=\"search-container end\">\r\n        <!-- 图片容器 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src='@/assets/green-circle.png' alt=\"green\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryEnd\" @input=\"onSearchInputChange($event, false)\" placeholder=\"请输入终点\" class=\"search-box search-box-end\"/>\r\n         <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete\" title=\"清空\" @click=\"clc2\">\r\n            <img src='@/assets/cancel.png' alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 修正后的终点搜索结果展示 -->\r\n        <div class=\"search-results\" v-if=\"searchResultsEnd.length && searchQueryEnd\" ref=\"searchResultsEnd\">\r\n        <ul>\r\n          <li v-for=\"(result, index) in searchResultsEnd\" :key=\"index\" :class=\"{ 'highlighted': index === highlightedIndex }\" @click=\"selectResult(result, false)\">\r\n            {{ result.name }}\r\n          </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"search-action\" @click=\"onSearch\" title=\"搜索\">\r\n        <img :src=\"require('@/assets/search.png')\" alt=\"\" class=\"search\">\r\n      </div>\r\n      <!-- 新的覆盖层容器 -->\r\n      <div v-if=\"isLoading\" class=\"loader-overlay\">\r\n      <div class=\"loader\">\r\n      </div>\r\n    </div>\r\n    </div>\r\n  </div>\r\n  <!-- 地图展示 -->\r\n  <div id=\"viewDiv\"></div>\r\n  <div v-if=\"ismaploading\" class=\"maploader-overlay\">\r\n    <div class=\"maploader\">\r\n    </div>\r\n  </div>\r\n  <!-- 时间选择框和路径展示框 -->\r\n  <div class=\"main-container\">\r\n    <!-- 时间选择框 -->\r\n    <div class=\"choose-time\">\r\n      <div class=\"form-group\">\r\n        <label for=\"date-input\">选择日期：</label>\r\n        <input id=\"date-input\" type=\"date\" v-model=\"selectedDate\" :min=\"minDate\" :max=\"maxDate\" :class=\"{ 'invalid-date': isDateDisabled(selectedDate) }\" @change=\"handleDateChange\">\r\n        <label for=\"time-input\">选择时间：</label>\r\n        <input id=\"time-input\" type=\"time\" v-model=\"formattedTime\" @input=\"onTimeInputChange\" step=\"600\"> <!-- 600秒 = 10分钟 -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Map from '@geoscene/core/Map.js'\r\nimport MapView from '@geoscene/core/views/MapView.js'\r\nimport Graphic from '@geoscene/core/Graphic'\r\nimport Point from '@geoscene/core/geometry/Point.js'\r\nimport GraphicsLayer from '@geoscene/core/layers/GraphicsLayer'\r\nimport Extent from '@geoscene/core/geometry/Extent'\r\nimport axios from 'axios'\r\nimport { ref, nextTick } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport BasemapGallery from '@geoscene/core/widgets/BasemapGallery.js'\r\nimport FeatureLayer from '@geoscene/core/layers/FeatureLayer.js'\r\nimport Compass from '@geoscene/core/widgets/Compass.js'\r\nimport ScaleBar from '@geoscene/core/widgets/ScaleBar.js'\r\nimport DistanceMeasurement2D from '@geoscene/core/widgets/DistanceMeasurement2D.js'\r\nimport LayerList from '@geoscene/core/widgets/LayerList.js'\r\n\r\nexport default {\r\n  name: 'RouteresultView',\r\n  setup () {\r\n    const searchQueryStart = ref('')\r\n    const searchQueryEnd = ref('')\r\n    const selectedResultStart = ref(null)\r\n    const selectedResultEnd = ref(null)\r\n    const router = useRouter()\r\n    return {\r\n      searchQueryStart,\r\n      searchQueryEnd,\r\n      selectedResultStart,\r\n      selectedResultEnd,\r\n      router\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      searchResults: [],\r\n      searchResultsEnd: [],\r\n      isLoading: false,\r\n      ismaploading: true,\r\n      selectedDate: '', // 用户选择的日期\r\n      selectedTime: '', // 用户选择的时间\r\n      highlightedIndex: -1, // 高亮的搜索结果索引\r\n      BasemapName: ''\r\n    }\r\n  },\r\n  mounted () {\r\n    if (this.$route.query.start && this.$route.query.end) {\r\n      // 如果URL中有起点和终点参数，解析并设置\r\n      this.selectedResultStart = JSON.parse(this.$route.query.start)\r\n      this.selectedResultEnd = JSON.parse(this.$route.query.end)\r\n    }\r\n    // 解析URL参数\r\n    this.parseUrlParams()\r\n    // 初始化地图\r\n    this.initMap()\r\n    // 设置定时器，每隔1分钟更新时间\r\n    setInterval(() => { this.updateTime() }, 60000)\r\n    window.addEventListener('keydown', this.handleKeydown)\r\n  },\r\n  beforeUnmount () {\r\n    window.removeEventListener('keydown', this.handleKeydown)\r\n  },\r\n  computed: {\r\n    minDate () {\r\n      return '2024-01-01'\r\n    },\r\n    maxDate () {\r\n      return '2024-12-31'\r\n    },\r\n    formattedTime () {\r\n      // 格式化时间为10分钟间隔\r\n      if (!this.selectedTime) return ''\r\n      const [hours, minutes] = this.selectedTime.split(':').map(Number)\r\n      const roundedMinutes = Math.floor(minutes / 10) * 10\r\n      return `${String(hours).padStart(2, '0')}:${String(roundedMinutes).padStart(2, '0')}`\r\n    }\r\n  },\r\n  methods: {\r\n    // 处理时间输入事件\r\n    onTimeInputChange (event) {\r\n      const value = event.target.value\r\n      const [hours, minutes] = value.split(':').map(Number)\r\n      const roundedMinutes = Math.floor(minutes / 10) * 10\r\n      this.selectedTime = `${String(hours).padStart(2, '0')}:${String(roundedMinutes).padStart(2, '0')}`\r\n    },\r\n    // 检查日期是否被禁用\r\n    isDateDisabled (date) {\r\n      if (!date) return false\r\n      const selected = new Date(date)\r\n      const month = selected.getMonth() + 1 // 月份从0开始\r\n      const day = selected.getDate()\r\n      if (month >= 1 && month <= 7 && day !== 15) {\r\n        return true\r\n      }\r\n      if (month === 8 && day <= 25) {\r\n        return true\r\n      }\r\n      if ((month === 10 || month === 12) && day !== 15) {\r\n        return true\r\n      }\r\n      if (month === 11 && day >= 9) {\r\n        return true\r\n      }\r\n      return false\r\n    },\r\n    // 处理日期变更事件\r\n    handleDateChange (event) {\r\n      const date = event.target.value\r\n      if (this.isDateDisabled(date)) {\r\n        // alert('选择的日期未进行模拟，请选择其他日期。可选日期为，1-7月的15日，8月20日-9月30日，10-12月的15日。')\r\n        alert('抱歉，选择的日期未进行模拟，请选择其他日期。可选日期为，9月1日-9月30日，11月1日到9日，以及其他月份的15日.')\r\n        this.selectedDate = ''\r\n      }\r\n    },\r\n    // 处理键盘按下事件\r\n    handleKeydown (event) {\r\n      if (this.searchResults.length && this.searchQueryStart) {\r\n        switch (event.key) {\r\n          case 'Escape':\r\n            this.searchResults = []\r\n            break\r\n          case 'Tab':\r\n            event.preventDefault()\r\n            this.highlightedIndex = (this.highlightedIndex + 1) % this.searchResults.length\r\n            nextTick(() => {\r\n              const highlightedElement = this.$refs.searchResultsStart.querySelector('li.highlighted')\r\n              if (highlightedElement) {\r\n                highlightedElement.scrollIntoView({ block: 'nearest', behavior: 'smooth' })\r\n              }\r\n            })\r\n            break\r\n          case 'Enter':\r\n            if (this.highlightedIndex >= 0 && this.highlightedIndex < this.searchResults.length) {\r\n              this.selectResult(this.searchResults[this.highlightedIndex], true)\r\n            }\r\n            break\r\n        }\r\n      } else if (this.searchResultsEnd.length && this.searchQueryEnd) {\r\n        switch (event.key) {\r\n          case 'Escape':\r\n            this.searchResultsEnd = []\r\n            break\r\n          case 'Tab':\r\n            event.preventDefault()\r\n            this.highlightedIndex = (this.highlightedIndex + 1) % this.searchResultsEnd.length\r\n            nextTick(() => {\r\n              const highlightedElement = this.$refs.searchResultsEnd.querySelector('li.highlighted')\r\n              if (highlightedElement) {\r\n                highlightedElement.scrollIntoView({ block: 'nearest', behavior: 'smooth' })\r\n              }\r\n            })\r\n            break\r\n          case 'Enter':\r\n            if (this.highlightedIndex >= 0 && this.highlightedIndex < this.searchResultsEnd.length) {\r\n              this.selectResult(this.searchResultsEnd[this.highlightedIndex], false)\r\n            }\r\n            break\r\n        }\r\n      }\r\n    },\r\n    // 更新时间，日期\r\n    updateTime () {\r\n      const now = new Date()\r\n      const currentTime = `${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`\r\n      // 只有当 selectedTime 是当前时间时，才更新\r\n      if (!this.isTimeFromUrl || this.selectedTime === currentTime) {\r\n        this.selectedTime = currentTime\r\n        this.isTimeFromUrl = false // 重置标志位\r\n      }\r\n    },\r\n    // 清空搜索框\r\n    clc1 () {\r\n      // 清空搜索框1\r\n      this.searchQueryStart = ''\r\n    },\r\n    // 清空搜索框2\r\n    clc2 () {\r\n      this.searchQueryEnd = ''\r\n    },\r\n    // 交换起点和终点信息并跳转页面\r\n    swap () {\r\n      const tempQuery = this.searchQueryStart\r\n      this.searchQueryStart = this.searchQueryEnd\r\n      this.searchQueryEnd = tempQuery\r\n      // 交换 selectedResultStart 和 selectedResultEnd\r\n      const tempResult = this.selectedResultStart\r\n      this.selectedResultStart = this.selectedResultEnd\r\n      this.selectedResultEnd = tempResult\r\n      // 跳转到 intermediate-page 页面，并传递交换后的起点和终点信息\r\n      this.router.push({\r\n        path: '/lu-jing-gui-hua/Intermediate-page',\r\n        query: {\r\n          start: JSON.stringify(this.selectedResultStart),\r\n          end: JSON.stringify(this.selectedResultEnd),\r\n          date: this.selectedDate,\r\n          time: this.selectedTime,\r\n          BasemapLayer: this.BasemapName\r\n        }\r\n      })\r\n    },\r\n    // 解析URL参数\r\n    parseUrlParams () {\r\n      const urlParams = new URLSearchParams(window.location.search)\r\n      const startParam = urlParams.get('start')\r\n      const endParam = urlParams.get('end')\r\n      const dateParam = urlParams.get('date')\r\n      const timeParam = urlParams.get('time')\r\n      // const BasemapLayer = urlParams.get('BasemapLayer')\r\n      // 如果有起点参数，进行解析\r\n      if (startParam) {\r\n        try {\r\n          // 解析起点参数\r\n          const startObj = JSON.parse(decodeURIComponent(startParam))\r\n          if (startObj && startObj.address) {\r\n            this.searchQueryStart = startObj.name\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing start parameter:', e)\r\n        }\r\n      }\r\n      if (endParam) { // 如果有终点参数，进行解析\r\n        try {\r\n          // 解析终点参数\r\n          const endObj = JSON.parse(decodeURIComponent(endParam))\r\n          if (endObj && endObj.address) {\r\n            this.searchQueryEnd = endObj.name // 绑定终点查询字符串\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing end parameter:', e)\r\n        }\r\n      }\r\n      // 如果有日期参数，进行解析\r\n      if (dateParam) {\r\n        this.selectedDate = dateParam\r\n      }\r\n      // 如果有时间参数，进行解析\r\n      if (timeParam) {\r\n        this.selectedTime = timeParam\r\n        this.isTimeFromUrl = true // 设置标志位\r\n      }\r\n      // 如果有底图参数，进行解析\r\n      // if (BasemapLayer) {\r\n      //   this.BasemapName = BasemapLayer\r\n      //   console.log('BasemapLayer open success', this.BasemapName)\r\n      // }\r\n      this.created()\r\n    },\r\n    // 处理搜索框输入事件\r\n    onSearchInputChange (event, isStart) {\r\n      const query = event.target.value\r\n      const searchResultsField = isStart ? 'searchResults' : 'searchResultsEnd'\r\n      if (query.includes(\"'\")) {\r\n        console.log('输入法临时输入，不发送请求')\r\n        return\r\n      }\r\n      if (query.length >= 2) {\r\n        fetch(`${process.env.VUE_APP_API_URL}/api/search`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ searchQueryStart: query })\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            this[searchResultsField] = data\r\n          })\r\n          .catch((error) => {\r\n            console.error('错误:', error)\r\n          })\r\n      } else {\r\n        this[searchResultsField] = []\r\n      }\r\n    },\r\n    // 处理选择搜索结果事件\r\n    selectResult (result, isStart = true) {\r\n      console.log('用户选择了搜索结果:', result)\r\n      const simplifiedResult = {\r\n        name: result.name,\r\n        address: result.address,\r\n        wgs84_latitude: result.wgs84_latitude,\r\n        wgs84_longitude: result.wgs84_longitude,\r\n        location: [result.wgs84_longitude, result.wgs84_latitude],\r\n        baidu_index: result.baidu_index,\r\n        baidu_latitude: result.baidu_latitude,\r\n        baidu_longitude: result.baidu_longitude,\r\n        id: result.id,\r\n        label: result.label\r\n      }\r\n      // 获取当前的起点和终点信息\r\n      let currentStart = this.selectedResultStart ? JSON.stringify(this.selectedResultStart) : null\r\n      let currentEnd = this.selectedResultEnd ? JSON.stringify(this.selectedResultEnd) : null\r\n      // 根据isStart参数选择起点或终点\r\n      if (isStart) {\r\n        this.selectedResultStart = simplifiedResult\r\n        this.searchQueryStart = simplifiedResult.name\r\n        this.searchResults = []\r\n        currentStart = JSON.stringify(simplifiedResult)\r\n      } else {\r\n        this.selectedResultEnd = simplifiedResult\r\n        this.searchQueryEnd = simplifiedResult.name\r\n        this.searchResultsEnd = []\r\n        currentEnd = JSON.stringify(simplifiedResult)\r\n      }\r\n      // 跳转到结果页面，带上起点和终点信息，并添加一个时间戳作为唯一查询参数\r\n      this.$router.push({\r\n        path: '/lu-jing-gui-hua/Intermediate-page',\r\n        query: {\r\n          start: currentStart,\r\n          end: currentEnd,\r\n          date: this.selectedDate,\r\n          time: this.selectedTime,\r\n          BasemapLayer: this.BasemapName\r\n        }\r\n      })\r\n    },\r\n    // 处理路径规划事件\r\n    onSearch () {\r\n      // 检查是否两个结果都已选择\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        // 显示加载动画\r\n        this.isLoading = true\r\n        // 构造包含location属性的起点和终点对象\r\n        const startWithLocation = {\r\n          ...this.selectedResultStart,\r\n          location: [this.selectedResultStart.wgs84_longitude, this.selectedResultStart.wgs84_latitude]\r\n        }\r\n        const endWithLocation = {\r\n          ...this.selectedResultEnd,\r\n          location: [this.selectedResultEnd.wgs84_longitude, this.selectedResultEnd.wgs84_latitude]\r\n        }\r\n        const formattedTime = this.selectedTime.length === 5 ? `${this.selectedTime}:00` : this.selectedTime\r\n        console.log('Formatted Time:', formattedTime) // 打印时间参数\r\n        // 发送请求到后端进行路径规划\r\n        axios.post(`${process.env.VUE_APP_API_URL}/api/route/plan`, { start: startWithLocation, end: endWithLocation, date: this.selectedDate, time: formattedTime })\r\n          .then(response => {\r\n            // 后端返回的路径规划结果ID\r\n            const defaultRoutePlanId = response.data.default_id\r\n            const timeBasedRoutePlanId = response.data.time_based_id\r\n            console.log('默认路径规划结果ID:', defaultRoutePlanId)\r\n            console.log('基于时间的路径规划结果ID:', timeBasedRoutePlanId)\r\n            console.log('路径规划成功，时间日期是:', this.selectedDate, this.selectedTime)\r\n            // 隐藏加载动画\r\n            this.isLoading = false\r\n            // 使用Vue Router跳转到结果页面，并传递路径规划结果ID\r\n            this.$router.push({\r\n              path: '/lu-jing-gui-hua/route',\r\n              query: {\r\n                start: JSON.stringify(startWithLocation),\r\n                end: JSON.stringify(endWithLocation),\r\n                default_id: defaultRoutePlanId,\r\n                time_based_id: timeBasedRoutePlanId,\r\n                date: this.selectedDate,\r\n                time: formattedTime,\r\n                BasemapLayer: this.BasemapName\r\n              }\r\n            })\r\n          })\r\n          .catch(error => {\r\n            console.error(error)\r\n            // 隐藏加载动画\r\n            this.isLoading = false\r\n            // 错误处理，例如显示提示信息\r\n            alert('路径规划失败，请稍后再试。')\r\n          })\r\n      } else {\r\n        // 如果起点或终点未选择，显示提示信息\r\n        alert('请确保起点和终点都已选择。')\r\n      }\r\n    },\r\n    // 初始化地图\r\n    initMap () {\r\n      const map = new Map({\r\n        // basemap: 'tianditu-vector' // 使用适合的底图\r\n        basemap: this.BasemapName || 'tianditu-vector' // 使用传递的底图参数或默认底图\r\n      })\r\n      this.map = map\r\n      console.log('BasemapLayer open success2', this.BasemapName)\r\n      this.view = new MapView({\r\n        container: 'viewDiv', // 使用正确的容器ID\r\n        map: map,\r\n        center: [114.3, 30.7], // 默认中心点坐标\r\n        zoom: 4, // 默认缩放级别\r\n        constraints: {\r\n          geometry: {\r\n            type: 'extent',\r\n            xmin: 113.6,\r\n            ymin: 29.9,\r\n            xmax: 115.0,\r\n            ymax: 31.3\r\n          },\r\n          minScale: 500,\r\n          maxScale: 2000000,\r\n          rotationEnabled: false,\r\n          snapToZoom: false\r\n        }\r\n      })\r\n      // 创建 BasemapGallery 实例\r\n      const basemapGallery = new BasemapGallery({\r\n        view: this.view,\r\n        source: {\r\n          query: {\r\n            title: '\"Basemaps for Developers\" AND owner:geoscenedev'\r\n          }\r\n        }\r\n      })\r\n      // 监听底图选择事件\r\n      basemapGallery.watch('activeBasemap', (newBasemap) => {\r\n        this.handleBasemapChange(newBasemap)\r\n      })\r\n      // 创建 LayerList 实例\r\n      const layerList = new LayerList({\r\n        view: this.view\r\n      })\r\n      // 创建 Compass 实例\r\n      const compass = new Compass({\r\n        view: this.view\r\n      })\r\n      // 创建 ScaleBar 实例\r\n      const scaleBar = new ScaleBar({\r\n        view: this.view,\r\n        unit: 'metric', // 使用公制单位\r\n        style: 'ruler' // 使用标尺样式\r\n      })\r\n      // 创建 DistanceMeasurement2D 实例\r\n      const distanceMeasurement2D = new DistanceMeasurement2D({\r\n        view: this.view,\r\n        unit: 'metric',\r\n        unitOptions: {\r\n          metric: ['kilometers', 'meters'],\r\n          nonMetric: ['miles', 'feet']\r\n        },\r\n        iconClass: 'esri-icon-measure-line' // 设置图标类\r\n      })\r\n      this.view.ui.add(distanceMeasurement2D, {\r\n        position: 'bottom-leading',\r\n        index: 0 // 确保它在最上面\r\n      })\r\n      // 将 BasemapGallery 添加到地图视图的右下角\r\n      this.view.ui.add(basemapGallery, {\r\n        position: 'bottom-right',\r\n        index: 0\r\n      })\r\n      // 将 LayerList 添加到地图视图的右下角\r\n      this.view.ui.add(layerList, {\r\n        position: 'bottom-right',\r\n        index: 1\r\n      })\r\n      // 移动缩放控件到左下角\r\n      this.view.ui.move('zoom', {\r\n        position: 'bottom-left',\r\n        index: 1\r\n      })\r\n      // 将指南针添加到地图视图的左下角\r\n      this.view.ui.add(compass, {\r\n        position: 'bottom-left',\r\n        index: 2\r\n      })\r\n      // 将 ScaleBar 添加到地图视图的左下角\r\n      this.view.ui.add(scaleBar, {\r\n        position: 'bottom-left',\r\n        index: 3\r\n      })\r\n      // 创建一个新的GraphicsLayer实例，以便在地图上绘制点\r\n      const graphicsLayer = new GraphicsLayer(\r\n        {\r\n          title: '起点与终点'\r\n        }\r\n      )\r\n      map.add(graphicsLayer)\r\n      // 创建 FeatureLayer 实例\r\n      const featureLayer = new FeatureLayer({\r\n        url: 'https://www.geosceneonline.cn/server/rest/services/Hosted/wuhan_village/FeatureServer',\r\n        title: '武汉县区面',\r\n        renderer: {\r\n          type: 'simple', // 使用简单渲染器\r\n          symbol: {\r\n            type: 'simple-fill', // 使用简单填充符号\r\n            color: [0, 0, 0, 0], // 填充颜色透明\r\n            outline: {\r\n              color: [0, 0, 0, 1], // 轮廓颜色红色\r\n              width: 1\r\n            }\r\n          }\r\n        },\r\n        popupTemplate: {\r\n          content: [{\r\n            type: 'fields',\r\n            fieldInfos: [{\r\n              fieldName: '县区name',\r\n              label: '县区名称'\r\n            }]\r\n          }]\r\n        }\r\n      })\r\n      // 将 FeatureLayer 添加到地图\r\n      map.add(featureLayer)\r\n      this.view.when(() => {\r\n        this.drawPoints(graphicsLayer)\r\n        this.adjustView()\r\n        this.ismaploading = false\r\n      }).catch((err) => {\r\n        console.error('MapView initialization error:', err)\r\n      })\r\n    },\r\n    // 调整视图以适应起点和终点\r\n    adjustView () {\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        const padding = 0.01 // 调整这个值以增加或减少边界的放宽程度\r\n        const extent = new Extent({\r\n          xmin: Math.min(this.selectedResultStart.location[0], this.selectedResultEnd.location[0]) - 10 * padding,\r\n          ymin: Math.min(this.selectedResultStart.location[1], this.selectedResultEnd.location[1]) - 10 * padding,\r\n          xmax: Math.max(this.selectedResultStart.location[0], this.selectedResultEnd.location[0]) + 10 * padding,\r\n          ymax: Math.max(this.selectedResultStart.location[1], this.selectedResultEnd.location[1]) + 10 * padding\r\n        })\r\n        this.view.goTo(extent).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      } else if (this.selectedResultStart) {\r\n        this.view.goTo({\r\n          center: [this.selectedResultStart.location[0], this.selectedResultStart.location[1]],\r\n          zoom: 10\r\n        }).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      } else if (this.selectedResultEnd) {\r\n        this.view.goTo({\r\n          center: [this.selectedResultEnd.location[0], this.selectedResultEnd.location[1]],\r\n          zoom: 10\r\n        }).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      }\r\n    },\r\n    // 处理底图选择\r\n    handleBasemapChange (basemap) {\r\n      const basemapMapping = {\r\n        '天地图-矢量（球面墨卡托投影）': 'tianditu-vector',\r\n        '天地图-影像（球面墨卡托投影）': 'tianditu-image',\r\n        '天地图-地形（球面墨卡托投影）': 'tianditu-topography'\r\n      }\r\n      // 检查 basemap.title 是否是中文\r\n      if (basemapMapping[basemap.title]) {\r\n        this.BasemapName = basemapMapping[basemap.title]\r\n      } else {\r\n        this.BasemapName = basemap.title\r\n      }\r\n      console.log('Basemap changed:', this.BasemapName)\r\n      const urlParams = new URLSearchParams(window.location.search)\r\n      urlParams.set('BasemapLayer', this.BasemapName)\r\n      window.history.replaceState({}, '', `${window.location.pathname}?${urlParams}`)\r\n    },\r\n    created () {\r\n      const BasemapLayer = this.$route.query.BasemapLayer\r\n      const basemapMapping = {\r\n        '天地图-矢量（球面墨卡托投影）': 'tianditu-vector',\r\n        '天地图-影像（球面墨卡托投影）': 'tianditu-image',\r\n        '天地图-地形（球面墨卡托投影）': 'tianditu-topography',\r\n        '天地图-矢量（含注记）（球面墨卡托投影）': 'tianditu-vector'\r\n      }\r\n\r\n      // 如果有底图参数，进行解析\r\n      if (BasemapLayer) {\r\n        // 检查 BasemapLayer 是否是中文\r\n        if (basemapMapping[BasemapLayer]) {\r\n          this.BasemapName = basemapMapping[BasemapLayer]\r\n        } else {\r\n          this.BasemapName = BasemapLayer\r\n        }\r\n      }\r\n      console.log('BasemapLayer is', this.BasemapName)\r\n    },\r\n    // 在地图上绘制起点和终点\r\n    drawPoints (graphicsLayer) {\r\n      // 检查this.$route.query.start和this.$route.query.end是否定义\r\n      if (!this.$route.query.start || !this.$route.query.end) {\r\n        console.error('Start or end point is undefined.')\r\n        return // 如果未定义，直接返回\r\n      }\r\n      const start = JSON.parse(this.$route.query.start)\r\n      const end = JSON.parse(this.$route.query.end)\r\n      // 检查start和end是否有location属性\r\n      if (!start.location || !end.location) {\r\n        console.error('Start or end point does not have a location.')\r\n        return // 如果没有location属性，直接返回\r\n      }\r\n      // 创建起点和终点的Point实例\r\n      const startPoint = new Point({\r\n        longitude: start.location[0],\r\n        latitude: start.location[1]\r\n      })\r\n      const endPoint = new Point({\r\n        longitude: end.location[0],\r\n        latitude: end.location[1]\r\n      })\r\n      const startGraphic = new Graphic({\r\n        geometry: startPoint,\r\n        symbol: {\r\n          type: 'simple-marker', // autocasts as new SimpleMarkerSymbol()\r\n          color: 'red',\r\n          size: '20px'\r\n        },\r\n        // 添加popupTemplate，用url信息解析而来\r\n        popupTemplate: {\r\n          title: '起点信息',\r\n          content: [\r\n            {\r\n              type: 'fields',\r\n              fieldInfos: [\r\n                {\r\n                  fieldName: 'address',\r\n                  label: '地址'\r\n                },\r\n                {\r\n                  fieldName: 'name',\r\n                  label: '名称'\r\n                },\r\n                // 可以继续添加更多字段\r\n                {\r\n                  fieldName: 'wgs84_latitude',\r\n                  label: 'WGS84纬度'\r\n                },\r\n                {\r\n                  fieldName: 'wgs84_longitude',\r\n                  label: 'WGS84经度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_index',\r\n                  label: '百度索引'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_latitude',\r\n                  label: '百度纬度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_longitude',\r\n                  label: '百度经度'\r\n                },\r\n                {\r\n                  fieldName: 'id',\r\n                  label: 'ID'\r\n                },\r\n                {\r\n                  fieldName: 'label',\r\n                  label: '标签'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        // 添加属性\r\n        attributes: start\r\n      })\r\n      const endGraphic = new Graphic({\r\n        geometry: endPoint,\r\n        symbol: {\r\n          type: 'simple-marker',\r\n          color: 'green',\r\n          size: '20px'\r\n        },\r\n        // 添加popupTemplate\r\n        popupTemplate: {\r\n          title: '起点信息',\r\n          content: [\r\n            {\r\n              type: 'fields',\r\n              fieldInfos: [\r\n                {\r\n                  fieldName: 'address',\r\n                  label: '地址'\r\n                },\r\n                {\r\n                  fieldName: 'name',\r\n                  label: '名称'\r\n                },\r\n                // 可以继续添加更多字段\r\n                {\r\n                  fieldName: 'wgs84_latitude',\r\n                  label: 'WGS84纬度'\r\n                },\r\n                {\r\n                  fieldName: 'wgs84_longitude',\r\n                  label: 'WGS84经度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_index',\r\n                  label: '百度索引'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_latitude',\r\n                  label: '百度纬度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_longitude',\r\n                  label: '百度经度'\r\n                },\r\n                {\r\n                  fieldName: 'id',\r\n                  label: 'ID'\r\n                },\r\n                {\r\n                  fieldName: 'label',\r\n                  label: '标签'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        attributes: end\r\n      })\r\n      // 将起点和终点添加到图形图层\r\n      graphicsLayer.addMany([startGraphic, endGraphic])\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style src=\"@/assets/share_css/routeplanning.css\">\r\n\r\n</style>\r\n","import { render } from \"./RouteresultView.vue?vue&type=template&id=a75dd6b4\"\nimport script from \"./RouteresultView.vue?vue&type=script&lang=js\"\nexport * from \"./RouteresultView.vue?vue&type=script&lang=js\"\n\nimport \"@/assets/share_css/routeplanning.css?vue&type=style&index=0&lang=css&external\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","key","ref","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","src","_imports_0","_hoisted_4","onClick","_cache","args","$options","swap","title","require","alt","_hoisted_5","_hoisted_6","_imports_1","type","$event","$setup","searchQueryStart","onInput","onSearchInputChange","placeholder","_hoisted_7","clc1","_imports_2","$data","searchResults","length","_hoisted_8","_renderList","result","index","_normalizeClass","highlightedIndex","selectResult","name","_hoisted_9","_createCommentVNode","_hoisted_10","_imports_3","searchQueryEnd","_hoisted_11","clc2","searchResultsEnd","_hoisted_12","_hoisted_13","onSearch","_hoisted_14","isLoading","_hoisted_15","id","ismaploading","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","for","selectedDate","min","minDate","max","maxDate","isDateDisabled","onChange","handleDateChange","_hoisted_20","formattedTime","onTimeInputChange","step","setup","selectedResultStart","selectedResultEnd","router","useRouter","data","selectedTime","BasemapName","mounted","this","$route","query","start","end","JSON","parse","parseUrlParams","initMap","setInterval","updateTime","window","addEventListener","handleKeydown","beforeUnmount","removeEventListener","computed","hours","minutes","split","map","Number","roundedMinutes","Math","floor","String","padStart","methods","event","value","target","date","selected","Date","month","getMonth","day","getDate","alert","preventDefault","nextTick","highlightedElement","$refs","searchResultsStart","querySelector","scrollIntoView","block","behavior","now","currentTime","getHours","getMinutes","isTimeFromUrl","tempQuery","tempResult","push","path","stringify","time","BasemapLayer","urlParams","URLSearchParams","location","search","startParam","get","endParam","dateParam","timeParam","startObj","decodeURIComponent","address","e","console","error","endObj","created","isStart","searchResultsField","includes","log","fetch","method","headers","body","then","response","json","catch","simplifiedResult","wgs84_latitude","wgs84_longitude","baidu_index","baidu_latitude","baidu_longitude","label","currentStart","currentEnd","$router","startWithLocation","endWithLocation","axios","post","defaultRoutePlanId","default_id","timeBasedRoutePlanId","time_based_id","Map","basemap","view","MapView","container","center","zoom","constraints","geometry","xmin","ymin","xmax","ymax","minScale","maxScale","rotationEnabled","snapToZoom","basemapGallery","BasemapGallery","source","watch","newBasemap","handleBasemapChange","layerList","LayerList","compass","Compass","scaleBar","ScaleBar","unit","style","distanceMeasurement2D","DistanceMeasurement2D","unitOptions","metric","nonMetric","iconClass","ui","add","position","move","graphicsLayer","GraphicsLayer","featureLayer","FeatureLayer","url","renderer","symbol","color","outline","width","popupTemplate","content","fieldInfos","fieldName","when","drawPoints","adjustView","err","padding","extent","Extent","goTo","basemapMapping","set","history","replaceState","pathname","startPoint","Point","longitude","latitude","endPoint","startGraphic","Graphic","size","attributes","endGraphic","addMany","__exports__","render"],"sourceRoot":""}