"use strict";(self["webpackChunksun_glare_project"]=self["webpackChunksun_glare_project"]||[]).push([[5171],{55171:function(e,t,a){a.r(t),a.d(t,{default:function(){return k}});var r,n=a(71457),o=(a(2516),a(86039)),i=a(47966),l=a(94924),s=a(40912),u=a(76543),p=(a(37679),a(69292),a(51020),a(29916)),d=a(12790),g=a(41759),c=a(99359),y=a(71680),h=a(79366),b=a(8197),w=a(99024),v=a(33690),M=a(2889),m=a(79950);const A=new m.U("0/0/0",0,0,0,void 0);let f=r=class extends((0,h.d)((0,w.j)((0,b.J)(y.A)))){constructor(){super(...arguments),this.tileInfo=M.A.create({spatialReference:d.A.WebMercator,size:256}),this.type="base-tile",this.fullExtent=new g.A(-20037508.342787,-20037508.34278,20037508.34278,20037508.342787,d.A.WebMercator),this.spatialReference=d.A.WebMercator}getTileBounds(e,t,a,r){const n=r||(0,c.vt)();return A.level=e,A.row=t,A.col=a,A.extent=n,this.tileInfo.updateTileInfo(A),A.extent=void 0,n}fetchTile(e,t,a,r={}){const{signal:n}=r,i=this.getTileUrl(e,t,a),l={responseType:"image",signal:n,query:{...this.refreshParameters}};return(0,o["default"])(i??"",l).then((e=>e.data))}async fetchImageBitmapTile(e,t,a,n={}){const{signal:i}=n;if(this.fetchTile!==r.prototype.fetchTile){const r=await this.fetchTile(e,t,a,n);return(0,v.C)(r,e,t,a,i)}const l=this.getTileUrl(e,t,a)??"",s={responseType:"blob",signal:i,query:{...this.refreshParameters}},{data:u}=await(0,o["default"])(l,s);return(0,v.C)(u,e,t,a,i)}getTileUrl(){throw new i.A("basetilelayer:gettileurl-not-implemented","getTileUrl() is not implemented")}};(0,n._)([(0,u.MZ)({type:M.A})],f.prototype,"tileInfo",void 0),(0,n._)([(0,u.MZ)({type:["show","hide"]})],f.prototype,"listMode",void 0),(0,n._)([(0,u.MZ)({readOnly:!0,value:"base-tile"})],f.prototype,"type",void 0),(0,n._)([(0,u.MZ)({nonNullable:!0})],f.prototype,"fullExtent",void 0),(0,n._)([(0,u.MZ)()],f.prototype,"spatialReference",void 0),f=r=(0,n._)([(0,p.$)("geoscene.layers.BaseTileLayer")],f);const _=f;var T=a(25673),S=a(58930),j=a(74036);const U=new l.J({BingMapsAerial:"aerial",BingMapsRoad:"road",BingMapsHybrid:"hybrid"}),Z="https://dev.virtualearth.net";let B=class extends((0,h.d)((0,T.q)((0,s.P)(_)))){constructor(e){super(e),this.type="bing-maps",this.tileInfo=new M.A({size:[256,256],dpi:96,origin:new j.A({x:-20037508.342787,y:20037508.342787,spatialReference:d.A.WebMercator}),spatialReference:d.A.WebMercator,lods:[new S.A({level:1,resolution:78271.5169639999,scale:295828763.795777}),new S.A({level:2,resolution:39135.7584820001,scale:147914381.897889}),new S.A({level:3,resolution:19567.8792409999,scale:73957190.948944}),new S.A({level:4,resolution:9783.93962049996,scale:36978595.474472}),new S.A({level:5,resolution:4891.96981024998,scale:18489297.737236}),new S.A({level:6,resolution:2445.98490512499,scale:9244648.868618}),new S.A({level:7,resolution:1222.99245256249,scale:4622324.434309}),new S.A({level:8,resolution:611.49622628138,scale:2311162.217155}),new S.A({level:9,resolution:305.748113140558,scale:1155581.108577}),new S.A({level:10,resolution:152.874056570411,scale:577790.554289}),new S.A({level:11,resolution:76.4370282850732,scale:288895.277144}),new S.A({level:12,resolution:38.2185141425366,scale:144447.638572}),new S.A({level:13,resolution:19.1092570712683,scale:72223.819286}),new S.A({level:14,resolution:9.55462853563415,scale:36111.909643}),new S.A({level:15,resolution:4.77731426794937,scale:18055.954822}),new S.A({level:16,resolution:2.38865713397468,scale:9027.977411}),new S.A({level:17,resolution:1.19432856685505,scale:4513.988705}),new S.A({level:18,resolution:.597164283559817,scale:2256.994353}),new S.A({level:19,resolution:.298582141647617,scale:1128.497176}),new S.A({level:20,resolution:.1492910708238085,scale:564.248588})]}),this.key=null,this.style="road",this.culture="en-US",this.region=null,this.portalUrl=null,this.hasAttributionData=!0}get bingMetadata(){return this._get("bingMetadata")}set bingMetadata(e){this._set("bingMetadata",e)}get copyright(){return null!=this.bingMetadata?this.bingMetadata.copyright:null}get operationalLayerType(){return U.toJSON(this.style)}get bingLogo(){return null!=this.bingMetadata?this.bingMetadata.brandLogoUri:null}load(e){return this.key?this.addResolvingPromise(this._getMetadata()):this.portalUrl?this.addResolvingPromise(this._getPortalBingKey().then((()=>this._getMetadata()))):this.addResolvingPromise(Promise.reject(new i.A("bingmapslayer:load","Bing layer must have bing key."))),Promise.resolve(this)}getTileUrl(e,t,a){if(!this.loaded||null==this.bingMetadata)return null;const r=this.bingMetadata.resourceSets[0].resources[0],n=r.imageUrlSubdomains[t%r.imageUrlSubdomains.length],o=this._getQuadKey(e,t,a);return r.imageUrl.replace("{subdomain}",n).replace("{quadkey}",o)}async fetchAttributionData(){return this.load().then((()=>null==this.bingMetadata?null:{contributors:this.bingMetadata.resourceSets[0].resources[0].imageryProviders.map((e=>({attribution:e.attribution,coverageAreas:e.coverageAreas.map((e=>({zoomMin:e.zoomMin,zoomMax:e.zoomMax,score:1,bbox:[e.bbox[0],e.bbox[1],e.bbox[2],e.bbox[3]]})))})))}))}_getMetadata(){const e={road:"roadOnDemand",aerial:"aerial",hybrid:"aerialWithLabelsOnDemand"}[this.style];return(0,o["default"])(`${Z}/REST/v1/Imagery/Metadata/${e}`,{responseType:"json",query:{include:"ImageryProviders",uriScheme:"https",key:this.key,suppressStatus:!0,output:"json",culture:this.culture,userRegion:this.region}}).then((e=>{const t=e.data;if(200!==t.statusCode)throw new i.A("bingmapslayer:getmetadata",t.statusDescription);if(this.bingMetadata=t,0===this.bingMetadata.resourceSets.length)throw new i.A("bingmapslayer:getmetadata","no bing resourcesets");if(0===this.bingMetadata.resourceSets[0].resources.length)throw new i.A("bingmapslayer:getmetadata","no bing resources")})).catch((e=>{throw new i.A("bingmapslayer:getmetadata",e.message)}))}_getPortalBingKey(){return(0,o["default"])(this.portalUrl??"",{responseType:"json",authMode:"no-prompt",query:{f:"json"}}).then((e=>{if(!e.data.bingKey)throw new i.A("bingmapslayer:getportalbingkey","The referenced Portal does not contain a valid bing key");this.key=e.data.bingKey})).catch((e=>{throw new i.A("bingmapslayer:getportalbingkey",e.message)}))}_getQuadKey(e,t,a){let r="";for(let n=e;n>0;n--){let e=0;const o=1<<n-1;0!=(a&o)&&(e+=1),0!=(t&o)&&(e+=2),r+=e.toString()}return r}};(0,n._)([(0,u.MZ)({json:{read:!1,write:!1},value:null})],B.prototype,"bingMetadata",null),(0,n._)([(0,u.MZ)({json:{read:!1,write:!1},value:"bing-maps",readOnly:!0})],B.prototype,"type",void 0),(0,n._)([(0,u.MZ)({type:M.A})],B.prototype,"tileInfo",void 0),(0,n._)([(0,u.MZ)({type:String,readOnly:!0,json:{read:!1,write:!1}})],B.prototype,"copyright",null),(0,n._)([(0,u.MZ)({type:String,json:{write:!1,read:!1}})],B.prototype,"key",void 0),(0,n._)([(0,u.MZ)({type:U.apiValues,nonNullable:!0,json:{read:{source:"layerType",reader:U.read}}})],B.prototype,"style",void 0),(0,n._)([(0,u.MZ)({type:["BingMapsAerial","BingMapsHybrid","BingMapsRoad"]})],B.prototype,"operationalLayerType",null),(0,n._)([(0,u.MZ)({type:String,json:{write:!1,read:!1}})],B.prototype,"culture",void 0),(0,n._)([(0,u.MZ)({type:String,json:{write:!1,read:!1}})],B.prototype,"region",void 0),(0,n._)([(0,u.MZ)({type:String,json:{write:!0,read:!0}})],B.prototype,"portalUrl",void 0),(0,n._)([(0,u.MZ)({type:Boolean,json:{write:!1,read:!1}})],B.prototype,"hasAttributionData",void 0),(0,n._)([(0,u.MZ)({type:String,readOnly:!0})],B.prototype,"bingLogo",null),B=(0,n._)([(0,p.$)("geoscene.layers.BingMapsLayer")],B);const k=B},33690:function(e,t,a){a.d(t,{C:function(){return i},m:function(){return o}});var r=a(47966),n=a(71120);async function o(e,t,a){let o;try{o=await createImageBitmap(e)}catch(i){throw new r.A("request:server",`Unable to load ${t}`,{url:t,error:i})}return(0,n.Te)(a),o}async function i(e,t,a,o,i){let l;try{l=await createImageBitmap(e)}catch(s){throw new r.A("request:server",`Unable to load tile ${t}/${a}/${o}`,{error:s,level:t,row:a,col:o})}return(0,n.Te)(i),l}}}]);
//# sourceMappingURL=5171.607cf447.js.map