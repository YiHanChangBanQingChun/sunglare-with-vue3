{"version":3,"file":"js/3228.51993380.js","mappings":"4RAIgG,SAASA,EAAEC,EAAEC,GAAG,MAAMF,EAAEC,EAAEE,SAAS,OAAOH,EAAEI,YAAYJ,EAAEI,UAAUJ,EAAEI,UAAUC,KAAK,MAAML,EAAEM,gBAAgBN,EAAEM,cAAcN,EAAEM,cAAcD,KAAK,MAAML,EAAEO,YAAYL,GAAGM,gBAAgBR,EAAEO,UAAUE,SAAS,KAAKT,EAAEO,UAAU,IAAIP,EAAEO,UAAUP,EAAEO,UAAUF,KAAK,YAAYL,EAAEO,UAAUP,EAAEU,sBAAsBV,EAAEW,MAAMX,EAAEW,MAAMC,MAAMC,KAAKC,UAAUd,EAAEW,MAAMR,iBAAiBH,EAAEU,qBAAqBV,EAAEe,oBAAoBf,EAAEgB,MAAMH,KAAKC,UAAU,CAACG,OAAOjB,EAAEe,2BAA2Bf,EAAEe,mBAAmBf,CAAC,CAACkB,eAAeC,EAAElB,EAAEC,EAAEF,GAAG,MAAMmB,QAAQC,EAAEnB,EAAEC,EAAEF,GAAGqB,EAAEF,EAAEG,KAAKC,EAAEF,EAAEG,aAAaC,EAAEJ,EAAEK,iBAAiBC,EAAE,CAAC,EAAE,IAAI,MAAMP,KAAKC,EAAEO,oBAAoB,CAAC,MAAM3B,EAAE,CAAC4B,YAAO,EAAOC,uBAAkB,EAAON,aAAaD,EAAEG,iBAAiBD,EAAEM,OAAOV,EAAEU,KAAKC,OAAOX,EAAEW,KAAKC,SAASb,EAAEc,gBAAgB,GAAG,MAAMd,EAAEe,SAASR,EAAEP,EAAEe,UAAUlC,OAAO,IAAI,MAAMC,KAAKkC,OAAOC,KAAKjB,GAAG,mBAAmBlB,IAAIyB,EAAEP,EAAElB,IAAID,EAAE,CAAC,MAAM,IAAIkB,EAAEG,KAAKK,EAAE,CAACT,eAAeG,EAAEpB,EAAEC,EAAEF,GAAG,MAAMmB,QAAQC,EAAEnB,EAAEC,EAAEF,EAAE,CAACQ,iBAAgB,IAAKa,EAAEF,EAAEG,KAAKC,EAAE,CAAC,EAAE,IAAI,MAAMH,KAAKC,EAAEO,oBAAoB,MAAMR,EAAEe,WAAWZ,EAAEH,EAAEe,UAAUf,EAAEkB,OAAO,MAAM,IAAInB,EAAEG,KAAKC,EAAE,CAACL,eAAeE,EAAED,EAAEE,EAAED,EAAE,CAAC,EAAEG,GAAG,MAAME,GAAEvB,EAAAA,EAAAA,GAAE,IAAIiB,EAAEoB,MAAMC,EAAE,UAAUjB,KAAKvB,EAAEqB,EAAEE,KAAK,OAAOtB,EAAAA,EAAAA,YAAEkB,EAAEsB,KAAK,uBAAuB,IAAIrB,EAAEmB,MAAM,IAAInB,EAAEmB,SAASd,IAAI,C,0BCAljCP,eAAeE,EAAEnB,EAAEmB,EAAEsB,GAAGtB,EAAEC,EAAAA,WAAEsB,KAAKvB,GAAG,MAAMG,GAAErB,EAAAA,EAAAA,IAAED,GAAG,OAAOkB,EAAEI,EAAEH,EAAEsB,GAAGE,MAAM1C,IAAI,MAAMiB,EAAEjB,EAAEoB,KAAKrB,EAAE,CAAC,EAAE,OAAOmC,OAAOC,KAAKlB,GAAG0B,SAAS3C,GAAGD,EAAEC,GAAGF,EAAAA,EAAE8C,SAAS3B,EAAEjB,MAAMD,CAAC,GAAG,CAACiB,eAAewB,EAAEvB,EAAEnB,EAAEoB,GAAGpB,EAAEqB,EAAAA,WAAEsB,KAAK3C,GAAG,MAAM0C,GAAExC,EAAAA,EAAAA,IAAEiB,GAAG,OAAOlB,EAAEyC,EAAE1C,EAAE,IAAIoB,IAAIwB,MAAM1C,GAAGA,EAAEoB,MAAM,C","sources":["webpack://sun-glare-project/./node_modules/@geoscene/core/rest/query/operations/queryRelatedRecords.js","webpack://sun-glare-project/./node_modules/@geoscene/core/rest/query/executeRelationshipQuery.js"],"sourcesContent":["/*\r\nAll material copyright GeoScene, All Rights Reserved, unless otherwise specified.\r\nSee https://js.geoscene.cn/4.27/geoscene/copyright.txt for details.\r\n*/\r\nimport e from\"../../../request.js\";import{mapParameters as t}from\"../../operations/urlUtils.js\";function o(e,t){const o=e.toJSON();return o.objectIds&&(o.objectIds=o.objectIds.join(\",\")),o.orderByFields&&(o.orderByFields=o.orderByFields.join(\",\")),o.outFields&&!t?.returnCountOnly?o.outFields.includes(\"*\")?o.outFields=\"*\":o.outFields=o.outFields.join(\",\"):delete o.outFields,o.outSpatialReference&&(o.outSR=o.outSR.wkid||JSON.stringify(o.outSR.toJSON()),delete o.outSpatialReference),o.dynamicDataSource&&(o.layer=JSON.stringify({source:o.dynamicDataSource}),delete o.dynamicDataSource),o}async function r(e,t,o){const r=await n(e,t,o),s=r.data,a=s.geometryType,d=s.spatialReference,c={};for(const n of s.relatedRecordGroups){const e={fields:void 0,objectIdFieldName:void 0,geometryType:a,spatialReference:d,hasZ:!!s.hasZ,hasM:!!s.hasM,features:n.relatedRecords};if(null!=n.objectId)c[n.objectId]=e;else for(const t of Object.keys(n))\"relatedRecords\"!==t&&(c[n[t]]=e)}return{...r,data:c}}async function s(e,t,o){const r=await n(e,t,o,{returnCountOnly:!0}),s=r.data,a={};for(const n of s.relatedRecordGroups)null!=n.objectId&&(a[n.objectId]=n.count);return{...r,data:a}}async function n(r,s,n={},a){const d=t({...r.query,f:\"json\",...a,...o(s,a)});return e(r.path+\"/queryRelatedRecords\",{...n,query:{...n.query,...d}})}export{r as executeRelationshipQuery,s as executeRelationshipQueryForCount,o as toQueryStringParameters};","/*\r\nAll material copyright GeoScene, All Rights Reserved, unless otherwise specified.\r\nSee https://js.geoscene.cn/4.27/geoscene/copyright.txt for details.\r\n*/\r\nimport{parseUrl as t}from\"../utils.js\";import{executeRelationshipQuery as r,executeRelationshipQueryForCount as e}from\"./operations/queryRelatedRecords.js\";import o from\"../support/FeatureSet.js\";import s from\"../support/RelationshipQuery.js\";async function n(e,n,u){n=s.from(n);const a=t(e);return r(a,n,u).then((t=>{const r=t.data,e={};return Object.keys(r).forEach((t=>e[t]=o.fromJSON(r[t]))),e}))}async function u(r,o,n){o=s.from(o);const u=t(r);return e(u,o,{...n}).then((t=>t.data))}export{n as executeRelationshipQuery,u as executeRelationshipQueryForCount};"],"names":["o","e","t","toJSON","objectIds","join","orderByFields","outFields","returnCountOnly","includes","outSpatialReference","outSR","wkid","JSON","stringify","dynamicDataSource","layer","source","async","r","n","s","data","a","geometryType","d","spatialReference","c","relatedRecordGroups","fields","objectIdFieldName","hasZ","hasM","features","relatedRecords","objectId","Object","keys","count","query","f","path","u","from","then","forEach","fromJSON"],"sourceRoot":""}