{"version":3,"file":"js/lu-jing-gui-hua-route.3e4b28d9.js","mappings":"+NAEOA,MAAM,mB,GAGJA,MAAM,qB,GAEJA,MAAM,qB,GACTC,EAAAA,EAAAA,IAAqG,OAAhGD,MAAM,OAAK,EAACC,EAAAA,EAAAA,IAA8E,OAAzEC,IAAI,yEAAoE,G,GACzFF,MAAM,e,GAGPC,EAAAA,EAAAA,IAA8H,OAAzHC,IAAI,qEAAqEC,IAAI,SAASC,MAAA,8B,YAA3FC,G,GAKDL,MAAM,0B,GAETC,EAAAA,EAAAA,IAEM,OAFDD,MAAM,uBAAqB,EAC9BC,EAAAA,EAAAA,IAAyF,OAApFC,IAAI,qEAAqEC,IAAI,W,MAK9EH,MAAM,kB,GAERC,EAAAA,EAAAA,IAA4F,OAAvFC,IAAI,qEAAqEC,IAAI,W,YAAlFG,G,GA3BZC,IAAA,EA+BaP,MAAM,kB,EA/BnB,Y,GAwCWA,MAAM,wB,GAETC,EAAAA,EAAAA,IAEM,OAFDD,MAAM,uBAAqB,EAC9BC,EAAAA,EAAAA,IAA0F,OAArFC,IAAI,qEAAqEC,IAAI,Y,MAK9EH,MAAM,kB,GAERC,EAAAA,EAAAA,IAA4F,OAAvFC,IAAI,qEAAqEC,IAAI,W,YAAlFK,G,GAlDZD,IAAA,EAsDaP,MAAM,kB,EAtDnB,Y,GA+DUC,EAAAA,EAAAA,IAA2F,OAAtFC,IAAI,qEAAqEC,IAAI,U,YAAlFM,G,GAINR,EAAAA,EAAAA,IAAwB,OAAnBS,GAAG,WAAS,S,GAEdV,MAAM,kB,GAEJA,MAAM,e,GACJA,MAAM,c,GACTC,EAAAA,EAAAA,IAAqC,SAA9BU,IAAI,cAAa,SAAK,G,GAE7BV,EAAAA,EAAAA,IAAqC,SAA9BU,IAAI,cAAa,SAAK,G,GAK5BX,MAAM,a,GACLA,MAAM,Y,GACRC,EAAAA,EAAAA,IAQM,OARDD,MAAM,QAAQ,aAAW,K,EAC5BC,EAAAA,EAAAA,IAAqC,OAAhCD,MAAM,gBAAe,UAC1BC,EAAAA,EAAAA,IAKI,KALDD,MAAM,SAAO,EACdC,EAAAA,EAAAA,IAAiB,YAAX,SACNA,EAAAA,EAAAA,IAAgB,YAAV,QACNA,EAAAA,EAAAA,IAAiB,YAAX,SACNA,EAAAA,EAAAA,IAAiB,YAAX,YAAI,G,GAGTD,MAAM,QAAQ,aAAW,K,GAC5BC,EAAAA,EAAAA,IAAqC,OAAhCD,MAAM,gBAAe,SAAK,G,GAC5BA,MAAM,S,GACPC,EAAAA,EAAAA,IAAiB,YAAX,QAAI,G,GAEVA,EAAAA,EAAAA,IAAiB,YAAX,QAAI,G,0CAhGtBW,EAAAA,EAAAA,IAAAC,EAAAA,GAAA,OAEEZ,EAAAA,EAAAA,IAkEM,MAlENa,EAkEM,EA/DJb,EAAAA,EAAAA,IA4DM,MA5DNc,EA4DM,EA1DJd,EAAAA,EAAAA,IAQM,MARNe,EAQM,CAPJC,GACAhB,EAAAA,EAAAA,IAKM,MALNiB,EAKM,EAHJjB,EAAAA,EAAAA,IAES,UAFAkB,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAC,MAAAD,EAAAC,QAAAF,IAAMG,MAAM,SAXtCC,QAiBMxB,EAAAA,EAAAA,IAqBI,MArBJyB,EAqBI,CAnBFC,GAEM,SAEN1B,EAAAA,EAAAA,IAAkJ,SAA3I2B,KAAK,OAvBpB,sBAAAR,EAAA,KAAAA,EAAA,GAAAS,GAuBoCC,EAAAC,iBAAgBF,GAAGG,QAAKZ,EAAA,KAAAA,EAAA,GAAAS,GAAEP,EAAAW,oBAAoBJ,GAAQ,IAAOK,YAAY,QAAQlC,MAAM,+B,iBAAvF8B,EAAAC,qBAE5B9B,EAAAA,EAAAA,IAIO,OAJPkC,EAIO,EAHLlC,EAAAA,EAAAA,IAEM,OAFDD,MAAM,SAASwB,MAAM,KAAML,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAc,MAAAd,EAAAc,QAAAf,KA1BjDgB,KA+B0CP,EAAAQ,cAAcC,QAAUT,EAAAC,mBAAgB,WAA1EnB,EAAAA,EAAAA,IAMI,MANJ4B,EAMI,EALJvC,EAAAA,EAAAA,IAIK,0BAHHW,EAAAA,EAAAA,IAEKC,EAAAA,GAAA,MAnCf4B,EAAAA,EAAAA,IAiCwCX,EAAAQ,eAjCxC,CAiCsBI,EAAQC,M,WAApB/B,EAAAA,EAAAA,IAEK,MAFyCL,IAAKoC,EAAQxB,QAAKU,GAAEP,EAAAsB,aAAaF,GAAQ,K,QAClFA,EAAOG,MAAI,EAlC1BC,M,YAAAC,EAAAA,EAAAA,IAAA,UAwCM9C,EAAAA,EAAAA,IAqBM,MArBN+C,EAqBM,CAnBJC,GAEM,SAENhD,EAAAA,EAAAA,IAA+I,SAAxI2B,KAAK,OA9CpB,sBAAAR,EAAA,KAAAA,EAAA,GAAAS,GA8CoCC,EAAAoB,eAAcrB,GAAGG,QAAKZ,EAAA,KAAAA,EAAA,GAAAS,GAAEP,EAAAW,oBAAoBJ,GAAQ,IAAQK,YAAY,QAAQlC,MAAM,6B,iBAAtF8B,EAAAoB,mBAE5BjD,EAAAA,EAAAA,IAIO,OAJPkD,EAIO,EAHLlD,EAAAA,EAAAA,IAEM,OAFDD,MAAM,SAASwB,MAAM,KAAML,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAA8B,MAAA9B,EAAA8B,QAAA/B,KAjDjDgC,KAsD0CvB,EAAAwB,iBAAiBf,QAAUT,EAAAoB,iBAAc,WAA3EtC,EAAAA,EAAAA,IAMM,MANN2C,EAMM,EALJtD,EAAAA,EAAAA,IAIK,0BAHHW,EAAAA,EAAAA,IAEKC,EAAAA,GAAA,MA1DjB4B,EAAAA,EAAAA,IAwD0CX,EAAAwB,kBAxD1C,CAwDwBZ,EAAQC,M,WAApB/B,EAAAA,EAAAA,IAEK,MAF4CL,IAAKoC,EAAQxB,QAAKU,GAAEP,EAAAsB,aAAaF,GAAQ,K,QACvFA,EAAOG,MAAI,EAzD1BW,M,YAAAT,EAAAA,EAAAA,IAAA,UA8DM9C,EAAAA,EAAAA,IAEM,OAFDD,MAAM,gBAAiBmB,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAmC,UAAAnC,EAAAmC,YAAApC,IAAUG,MAAM,MA9DzDkC,KAmEIC,KAEF1D,EAAAA,EAAAA,IAiCM,MAjCN2D,EAiCM,EA/BJ3D,EAAAA,EAAAA,IAOM,MAPN4D,EAOM,EANJ5D,EAAAA,EAAAA,IAKM,MALN6D,EAKM,CAJJC,GAAqC,SACrC9D,EAAAA,EAAAA,IAA0D,SAAnDS,GAAG,aAAakB,KAAK,OA1EpC,sBAAAR,EAAA,KAAAA,EAAA,GAAAS,GA0EoDC,EAAAkC,aAAYnC,I,iBAAZC,EAAAkC,gBAC5CC,GAAqC,SACrChE,EAAAA,EAAAA,IAA0D,SAAnDS,GAAG,aAAakB,KAAK,OA5EpC,sBAAAR,EAAA,KAAAA,EAAA,GAAAS,GA4EoDC,EAAAoC,aAAYrC,I,iBAAZC,EAAAoC,qBAIhDjE,EAAAA,EAAAA,IAqBM,MArBNkE,EAqBM,EApBJlE,EAAAA,EAAAA,IAmBK,KAnBLmE,EAmBK,CAlBHC,GASApE,EAAAA,EAAAA,IAQM,MARNqE,EAQM,CAPJC,GACAtE,EAAAA,EAAAA,IAKI,IALJuE,EAKI,CAJFC,GACAxE,EAAAA,EAAAA,IAAmD,aAAAyE,EAAAA,EAAAA,IAA1C5C,EAAA6C,YAAa,MAAED,EAAAA,EAAAA,IAAG5C,EAAA8C,cAAe,KAAE,GAC5CC,GACA5E,EAAAA,EAAAA,IAAgC,aAAAyE,EAAAA,EAAAA,IAAvB5C,EAAAgD,eAAa,iB,oHAkBlC,GACEjC,KAAM,YACNkC,IAAAA,GACE,MAAO,CACLhD,iBAAkB,GAClBmB,eAAgB,GAChB8B,oBAAqB,KACrBC,kBAAmB,KACnB3C,cAAe,GACfgB,iBAAkB,GAClB4B,WAAW,EACXP,WAAY,EACZC,aAAc,EACdE,cAAe,MACfd,aAAc,GACdE,aAAc,GAElB,EAEAiB,OAAAA,GACEC,KAAKC,UACDD,KAAKE,OAAOC,MAAMC,OAASJ,KAAKE,OAAOC,MAAME,MAC/CL,KAAKJ,oBAAsBU,KAAKC,MAAMP,KAAKE,OAAOC,MAAMC,OACxDJ,KAAKH,kBAAoBS,KAAKC,MAAMP,KAAKE,OAAOC,MAAME,MAExDL,KAAKQ,iBACLR,KAAKpB,cAAe,IAAI6B,MAAOC,cAAcC,UAAU,EAAG,IAC1DX,KAAKlB,cAAe,IAAI2B,MAAOC,cAAcC,UAAU,GAAI,IAE3DX,KAAKY,aAGLC,aAAY,KAAQb,KAAKY,YAAY,GAAI,IAC3C,EAEAE,QAAS,CAEPF,UAAAA,GACE,MAAMG,EAAM,IAAIN,KAChBT,KAAKlB,aAAe,GAAGkC,OAAOD,EAAIE,YAAYC,SAAS,EAAG,QAAQF,OAAOD,EAAII,cAAcD,SAAS,EAAG,MACzG,EAEAlE,IAAAA,GAEEgD,KAAKrD,iBAAmB,EAC1B,EAEAqB,IAAAA,GACEgC,KAAKlC,eAAiB,EACxB,EACA3B,IAAAA,GACE,MAAMiF,EAAYpB,KAAKrD,iBACvBqD,KAAKrD,iBAAmBqD,KAAKlC,eAC7BkC,KAAKlC,eAAiBsD,EACtB,MAAMC,EAAarB,KAAKJ,oBACxBI,KAAKJ,oBAAsBI,KAAKH,kBAChCG,KAAKH,kBAAoBwB,EACzBrB,KAAK3B,UACP,EAEAmC,cAAAA,GACE,MAAMc,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QAChDC,EAAaL,EAAUM,IAAI,SAC3BC,EAAWP,EAAUM,IAAI,OAC/B,GAAID,EACF,IACE,MAAMG,EAAWxB,KAAKC,MAAMwB,mBAAmBJ,IAC3CG,GAAYA,EAASE,UACvBhC,KAAKrD,iBAAmBmF,EAASrE,KAErC,CAAE,MAAOwE,GACPC,QAAQC,MAAM,iCAAkCF,EAClD,CAEF,GAAIJ,EACF,IACE,MAAMO,EAAS9B,KAAKC,MAAMwB,mBAAmBF,IACzCO,GAAUA,EAAOJ,UACnBhC,KAAKlC,eAAiBsE,EAAO3E,KAEjC,CAAE,MAAOwE,GACPC,QAAQC,MAAM,+BAAgCF,EAChD,CAEJ,EAEApF,mBAAAA,CAAqBwF,EAAOC,GAC1B,MAAMnC,EAAQkC,EAAME,OAAOC,MACrBC,EAAqBH,EAAU,gBAAkB,mBACnDnC,EAAMuC,SAAS,KACjBR,QAAQS,IAAI,iBAGVxC,EAAMhD,QAAU,EAClByF,MAAM,qDAA6C,CACjDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMzC,KAAK0C,UAAU,CAAErG,iBAAkBwD,MAExC8C,MAAKC,GAAYA,EAASC,SAC1BF,MAAKtD,IACJK,KAAKyC,GAAsB9C,CAAG,IAE/ByD,OAAOjB,IACND,QAAQC,MAAM,MAAOA,EAAM,IAG/BnC,KAAKyC,GAAsB,EAE/B,EAEAjF,YAAAA,CAAcF,EAAQgF,GAAU,GAC9BJ,QAAQS,IAAI,aAAcrF,GAC1B,MAAM+F,EAAmB,CACvB5F,KAAMH,EAAOG,KACbuE,QAAS1E,EAAO0E,QAChBsB,eAAgBhG,EAAOgG,eACvBC,gBAAiBjG,EAAOiG,gBACxB9B,SAAU,CAACnE,EAAOiG,gBAAiBjG,EAAOgG,gBAC1CE,YAAalG,EAAOkG,YACpBC,eAAgBnG,EAAOmG,eACvBC,gBAAiBpG,EAAOoG,gBACxBpI,GAAIgC,EAAOhC,GACXqI,MAAOrG,EAAOqG,OAGhB,IAAIC,EAAe5D,KAAKJ,oBAAsBU,KAAK0C,UAAUhD,KAAKJ,qBAAuB,KACrFiE,EAAa7D,KAAKH,kBAAoBS,KAAK0C,UAAUhD,KAAKH,mBAAqB,KAE/EyC,GACFtC,KAAKJ,oBAAsByD,EAC3BrD,KAAKrD,iBAAmB0G,EAAiB5F,KACzCuC,KAAK9C,cAAgB,GACrB0G,EAAetD,KAAK0C,UAAUK,KAE9BrD,KAAKH,kBAAoBwD,EACzBrD,KAAKlC,eAAiBuF,EAAiB5F,KACvCuC,KAAK9B,iBAAmB,GACxB2F,EAAavD,KAAK0C,UAAUK,IAG9BrD,KAAK8D,QAAQC,KAAK,CAChBC,KAAM,qCACN7D,MAAO,CACLC,MAAOwD,EACPvD,IAAKwD,EACLI,EAAGxD,KAAKM,QAGd,EACA1C,QAAAA,GAEE,GAAI2B,KAAKJ,qBAAuBI,KAAKH,kBAAmB,CAEtDG,KAAKF,WAAY,EAEjB,MAAMoE,EAAoB,IACrBlE,KAAKJ,oBACR6B,SAAU,CAACzB,KAAKJ,oBAAoB2D,gBAAiBvD,KAAKJ,oBAAoB0D,iBAE1Ea,EAAkB,IACnBnE,KAAKH,kBACR4B,SAAU,CAACzB,KAAKH,kBAAkB0D,gBAAiBvD,KAAKH,kBAAkByD,iBAG5Ec,EAAAA,EAAMC,KAAK,yDAAiD,CAAEjE,MAAO8D,EAAmB7D,IAAK8D,IAC1FlB,MAAKC,IAEJ,MAAMoB,EAAcpB,EAASvD,KAAKrE,GAClC4G,QAAQS,IAAI,YAAa2B,GAGzBtE,KAAKF,WAAY,EAGjBE,KAAK8D,QAAQC,KAAK,CAChBC,KAAM,yBACN7D,MAAO,CACLC,MAAOE,KAAK0C,UAAUkB,GACtB7D,IAAKC,KAAK0C,UAAUmB,GACpB7I,GAAIgJ,KAGRtE,KAAKuE,UAAUL,EAAmBC,GAClCnE,KAAKC,SAAS,IAEfmD,OAAMjB,IACLD,QAAQC,MAAMA,GAEdnC,KAAKF,WAAY,EAEjB0E,MAAM,gBAAgB,GAE5B,MAEEA,MAAM,gBAEV,EAEAvE,OAAAA,GACE,MAAMwE,EAAM,IAAIC,EAAAA,EAAI,CAClBC,QAAS,oBAGX3E,KAAK4E,KAAO,IAAIC,EAAAA,EAAQ,CACtBC,UAAW,UACXL,IAAKA,EACLM,OAAQ,CAAC,MAAO,MAChBC,KAAM,EACNC,YAAa,CACXC,SAAU,CACR1I,KAAM,SACN2I,KAAM,MACNC,KAAM,KACNC,KAAM,IACNC,KAAM,MAERC,SAAU,IACVC,SAAU,IACVC,iBAAiB,EAGjBC,YAAY,KAIhB1F,KAAK4E,KAAKe,GAAGC,KAAK,OAAQ,eAE1B,MAAMC,EAAgB,IAAIC,EAAAA,EAC1BrB,EAAIsB,IAAIF,GAER7F,KAAKgG,WAAWH,GAChB7F,KAAKuE,UAAUE,EACjB,EAEAuB,UAAAA,CAAYH,GAEV,IAAK7F,KAAKE,OAAOC,MAAMC,QAAUJ,KAAKE,OAAOC,MAAME,IAEjD,YADA6B,QAAQC,MAAM,oCAGhB,MAAM/B,EAAQE,KAAKC,MAAMP,KAAKE,OAAOC,MAAMC,OACrCC,EAAMC,KAAKC,MAAMP,KAAKE,OAAOC,MAAME,KAEzC,IAAKD,EAAMqB,WAAapB,EAAIoB,SAE1B,YADAS,QAAQC,MAAM,gDAIhB,MAAM8D,EAAa,IAAIC,EAAAA,EAAM,CAC3BC,UAAW/F,EAAMqB,SAAS,GAC1B2E,SAAUhG,EAAMqB,SAAS,KAErB4E,EAAW,IAAIH,EAAAA,EAAM,CACzBC,UAAW9F,EAAIoB,SAAS,GACxB2E,SAAU/F,EAAIoB,SAAS,KAEnB6E,EAAe,IAAIC,EAAAA,EAAQ,CAC/BrB,SAAUe,EACVO,OAAQ,CACNhK,KAAM,gBACNiK,MAAO,MACPC,KAAM,QAGRC,cAAe,CACbvK,MAAO,OACPwK,QAAS,CACP,CACEpK,KAAM,SACNqK,WAAY,CACV,CACEC,UAAW,UACXnD,MAAO,MAET,CACEmD,UAAW,OACXnD,MAAO,MAGT,CACEmD,UAAW,iBACXnD,MAAO,WAET,CACEmD,UAAW,kBACXnD,MAAO,WAET,CACEmD,UAAW,cACXnD,MAAO,QAET,CACEmD,UAAW,iBACXnD,MAAO,QAET,CACEmD,UAAW,kBACXnD,MAAO,QAET,CACEmD,UAAW,KACXnD,MAAO,MAET,CACEmD,UAAW,QACXnD,MAAO,UAMjBoD,WAAY3G,IAER4G,EAAa,IAAIT,EAAAA,EAAQ,CAC7BrB,SAAUmB,EACVG,OAAQ,CACNhK,KAAM,gBACNiK,MAAO,QACPC,KAAM,QAGRC,cAAe,CACbvK,MAAO,OACPwK,QAAS,CACP,CACEpK,KAAM,SACNqK,WAAY,CACV,CACEC,UAAW,UACXnD,MAAO,MAET,CACEmD,UAAW,OACXnD,MAAO,MAGT,CACEmD,UAAW,iBACXnD,MAAO,WAET,CACEmD,UAAW,kBACXnD,MAAO,WAET,CACEmD,UAAW,cACXnD,MAAO,QAET,CACEmD,UAAW,iBACXnD,MAAO,QAET,CACEmD,UAAW,kBACXnD,MAAO,QAET,CACEmD,UAAW,KACXnD,MAAO,MAET,CACEmD,UAAW,QACXnD,MAAO,UAMjBoD,WAAY1G,IAGdwF,EAAcoB,QAAQ,CAACX,EAAcU,GACvC,EAEAzC,SAAAA,CAAWE,GACT,MAAMyC,EAAUlH,KAAKE,OAAOC,MAAM7E,GAClC,IAAK4L,EAEH,YADAhF,QAAQC,MAAM,0BAIhB,MAAMgF,EAAa,2DAAkDD,IACrEtE,MAAMuE,GACHlE,MAAKC,GAAYA,EAASC,SAC1BF,MAAKtD,IACJ,IAAIyH,EAAc,EACdC,EAAY,EAChB,MAAMC,EAAe,IAAIC,EAAAA,WAAa,CACpCC,OAAQ7H,EAAK8H,SAAShD,KAAI,CAACiD,EAASnK,KAClC6J,GAAeM,EAAQC,WAAWxK,OAClCkK,GAAaK,EAAQC,WAAWC,KACzB,CACL1C,SAAU,CACR1I,KAAM,WACNqL,MAAOH,EAAQxC,SAAS4C,aAE1Bf,WAAY,IACPW,EAAQC,WACXrM,GAAIiC,OAIVwK,SAAU,CACRvL,KAAM,SACNgK,OAAQ,CACNhK,KAAM,cACNiK,MAAO,CAAC,EAAG,EAAG,KACduB,MAAO,IAGXC,cAAe,KACfC,OAAQ,CACN,CAAEzK,KAAM,KAAMjB,KAAM,OACpB,CAAEiB,KAAM,MAAOjB,KAAM,WACrB,CAAEiB,KAAM,WAAYjB,KAAM,WAC1B,CAAEiB,KAAM,OAAQjB,KAAM,WACtB,CAAEiB,KAAM,OAAQjB,KAAM,WACtB,CAAEiB,KAAM,OAAQjB,KAAM,UACtB,CAAEiB,KAAM,WAAYjB,KAAM,UAC1B,CAAEiB,KAAM,SAAUjB,KAAM,aAI5BiI,EAAI0D,OAAOpC,IAAIuB,GAEftH,KAAKT,WAAa6I,KAAKC,MAAMhB,EAAY,MACzCrH,KAAKR,aAAe4I,KAAKC,MAAOhB,EAAY,KAAQ,IAGlDrH,KAAKN,cADH0H,EAAc,IACK,GAAGA,EAAYkB,QAAQ,MAEvB,IAAIlB,EAAc,KAAMkB,QAAQ,MACvD,IAEDlF,OAAMjB,GAASD,QAAQC,MAAM,kCAAmCA,IACrE,I,WCliBJ,MAAMoG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,Q,2LCLsnB,IAAIC,EAAE,eAAcC,EAAAA,EAAAA,IAAEC,EAAAA,EAAAA,GAAE1E,EAAAA,KAAK2E,WAAAA,CAAYC,GAAGC,MAAMD,GAAG7I,KAAK+I,cAAc,KAAK/I,KAAKgJ,SAAS,IAAIC,EAAAA,EAAEjJ,KAAKkJ,8BAA6B,EAAGlJ,KAAKxD,KAAK,WAAWwD,KAAKmJ,UAAS,CAAE,CAACC,OAAAA,GAAUpJ,KAAKqJ,YAAYrJ,KAAKgJ,SAASI,SAAS,CAACrD,GAAAA,CAAI8C,GAAG,OAAO7I,KAAKgJ,SAASjD,IAAI8C,GAAG7I,IAAI,CAACiH,OAAAA,CAAQ4B,GAAG,OAAO7I,KAAKgJ,SAAS/B,QAAQ4B,GAAG7I,IAAI,CAACqJ,SAAAA,GAAY,OAAOrJ,KAAKgJ,SAASK,YAAYrJ,IAAI,CAACsJ,MAAAA,CAAOT,GAAG7I,KAAKgJ,SAASM,OAAOT,EAAE,CAACU,UAAAA,CAAWV,GAAG7I,KAAKgJ,SAASO,WAAWV,EAAE,CAACW,EAAAA,CAAGX,EAAE5G,GAAG,OAAO6G,MAAMU,GAAGX,EAAE5G,EAAE,CAACwH,cAAAA,CAAeZ,GAAG7I,KAAK0J,KAAK,iBAAiBb,EAAE,IAAGA,EAAAA,EAAAA,GAAE,EAAC5G,EAAAA,EAAAA,IAAE,CAACzF,KAAKmN,EAAAA,KAAKlB,EAAEmB,UAAU,qBAAgB,IAAQf,EAAAA,EAAAA,GAAE,EAAC5G,EAAAA,EAAAA,KAAE4H,EAAAA,EAAAA,GAAEZ,EAAAA,EAAE,cAAcR,EAAEmB,UAAU,gBAAW,IAAQf,EAAAA,EAAAA,GAAE,EAAC5G,EAAAA,EAAAA,IAAE,CAACzF,KAAK,CAAC,OAAO,WAAWiM,EAAEmB,UAAU,gBAAW,IAAQf,EAAAA,EAAAA,GAAE,EAAC5G,EAAAA,EAAAA,OAAKwG,EAAEmB,UAAU,oCAA+B,IAAQf,EAAAA,EAAAA,GAAE,EAAC5G,EAAAA,EAAAA,IAAE,CAAC6H,UAAS,KAAMrB,EAAEmB,UAAU,YAAO,IAAQf,EAAAA,EAAAA,GAAE,EAAC5G,EAAAA,EAAAA,IAAE,CAAC8H,eAAc,KAAMtB,EAAEmB,UAAU,gBAAW,GAAQnB,GAAEI,EAAAA,EAAAA,GAAE,EAACmB,EAAAA,EAAAA,GAAE,kCAAkCvB,GAAG,MAAMwB,EAAExB,C","sources":["webpack://sun-glare-project/./src/views/RouteView.vue","webpack://sun-glare-project/./src/views/RouteView.vue?75e7","webpack://sun-glare-project/./node_modules/@geoscene/core/layers/GraphicsLayer.js"],"sourcesContent":["<template>\r\n  <!-- 输入了起点和终点之后,还没有摁查询路径的画面 -->\r\n  <div class=\"lu-jing-gui-hua\">\r\n    <!-- 搜索框 -->\r\n    <!-- 外层容器 -->\r\n    <div class=\"search-containers\">\r\n      <!-- 交换的侧边栏 -->\r\n      <div class=\"revert-containers\">\r\n        <div class=\"car\"><img src=\"https://wx3.sinaimg.cn/orj360/008tIcISgy1hsgyr8gzsjj300o00odfl.jpg\"></div>\r\n        <div class=\"swap-action\">\r\n          <!-- 绑定 swap 方法到点击事件 -->\r\n          <button @click=\"swap\" title=\"切换起终点\">\r\n            <img src=\"https://wx1.sinaimg.cn/orj360/008tIcISgy1hsiz7qtw48j301s01sq2p.jpg\" alt=\"revert\" style=\"width: 22px; height: 25px;\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <!-- 搜索起点的容器 -->\r\n      <div class=\"search-container start\">\r\n        <!-- 图片 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src=\"https://wx1.sinaimg.cn/orj360/008tIcISgy1hsgyr8gv8dj300f00f0oh.jpg\" alt=\"pink\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryStart\" @input=\"onSearchInputChange($event, true)\" placeholder=\"请输入起点\" class=\"search-box search-box-start\"/>\r\n       <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete\" title=\"清空\" @click=\"clc1\">\r\n            <img src=\"https://wx2.sinaimg.cn/orj360/008tIcISgy1hsnss2ckv4j300k00k0m1.jpg\" alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 修正后的起点搜索结果展示 -->\r\n        <div class=\"search-results\" v-if=\"searchResults.length && searchQueryStart\">\r\n        <ul>\r\n          <li v-for=\"(result, index) in searchResults\" :key=\"index\" @click=\"selectResult(result, true)\">\r\n            {{ result.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n      <!-- 搜索终点的容器 -->\r\n      <div class=\"search-container end\">\r\n        <!-- 图片容器 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src=\"https://wx4.sinaimg.cn/orj360/008tIcISgy1hsgyr8got8j300f00f0o9.jpg\" alt=\"green\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryEnd\" @input=\"onSearchInputChange($event, false)\" placeholder=\"请输入终点\" class=\"search-box search-box-end\"/>\r\n         <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete\" title=\"清空\" @click=\"clc2\">\r\n            <img src=\"https://wx2.sinaimg.cn/orj360/008tIcISgy1hsnss2ckv4j300k00k0m1.jpg\" alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 修正后的终点搜索结果展示 -->\r\n        <div class=\"search-results\" v-if=\"searchResultsEnd.length && searchQueryEnd\">\r\n          <ul>\r\n            <li v-for=\"(result, index) in searchResultsEnd\" :key=\"index\" @click=\"selectResult(result, false)\">\r\n            {{ result.name }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"search-action\" @click=\"onSearch\" title=\"搜索\">\r\n          <img src=\"https://wx4.sinaimg.cn/mw2000/008tIcISgy1hsq1fw9ob9j300w00w3ya.jpg\" alt=\"search\">\r\n      </div>\r\n    </div>\r\n    <!-- 地图展示 -->\r\n    <div id=\"viewDiv\"></div>\r\n  </div>\r\n  <div class=\"main-container\">\r\n    <!-- 时间选择框 -->\r\n    <div class=\"choose-time\">\r\n      <div class=\"form-group\">\r\n        <label for=\"date-input\">选择日期：</label>\r\n        <input id=\"date-input\" type=\"date\" v-model=\"selectedDate\">\r\n        <label for=\"time-input\">选择时间：</label>\r\n        <input id=\"time-input\" type=\"time\" v-model=\"selectedTime\">\r\n      </div>\r\n    </div>\r\n    <!-- 路线展示 -->\r\n    <div class=\"routelist\">\r\n      <ul class=\"cardlist\">\r\n        <div class=\"route\" data-index=\"0\">\r\n          <div class=\"introduction\">无眩光路径</div>\r\n          <p class=\"intro\">\r\n            <span>总时长：</span>\r\n            <span>时间1</span>\r\n            <span>总距离：</span>\r\n            <span>公里数1</span>\r\n          </p>\r\n        </div>\r\n        <div class=\"route\" data-index=\"1\">\r\n          <div class=\"introduction\">耗时少路径</div>\r\n          <p class=\"intro\">\r\n            <span>总时长：</span>\r\n            <span>{{ totalHours }}小时{{ totalMinutes }}分钟</span>\r\n            <span>总距离：</span>\r\n            <span>{{ totalDistance }}</span>\r\n          </p>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Map from '@geoscene/core/Map.js'\r\nimport MapView from '@geoscene/core/views/MapView.js'\r\nimport Graphic from '@geoscene/core/Graphic'\r\nimport Point from '@geoscene/core/geometry/Point.js'\r\nimport GraphicsLayer from '@geoscene/core/layers/GraphicsLayer'\r\nimport FeatureLayer from '@geoscene/core/layers/FeatureLayer'\r\n\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'RouteView',\r\n  data () {\r\n    return {\r\n      searchQueryStart: '',\r\n      searchQueryEnd: '',\r\n      selectedResultStart: null,\r\n      selectedResultEnd: null,\r\n      searchResults: [],\r\n      searchResultsEnd: [],\r\n      isLoading: false,\r\n      totalHours: 0,\r\n      totalMinutes: 0,\r\n      totalDistance: '0千米',\r\n      selectedDate: '', // 用户选择的日期\r\n      selectedTime: ''// 用户选择的时间\r\n    }\r\n  },\r\n  // 在组件挂载时初始化地图\r\n  mounted () {\r\n    this.initMap()\r\n    if (this.$route.query.start && this.$route.query.end) {\r\n      this.selectedResultStart = JSON.parse(this.$route.query.start)\r\n      this.selectedResultEnd = JSON.parse(this.$route.query.end)\r\n    }\r\n    this.parseUrlParams()\r\n    this.selectedDate = new Date().toISOString().substring(0, 10)\r\n    this.selectedTime = new Date().toISOString().substring(11, 16)\r\n    // 更新时间选择器为当前时间\r\n    this.updateTime()\r\n\r\n    // 设置定时器，每隔1分钟更新时间\r\n    setInterval(() => { this.updateTime() }, 60000)\r\n  },\r\n  // 在路由参数变化时重新绘制地图\r\n  methods: {\r\n    // 更新时间，日期\r\n    updateTime () {\r\n      const now = new Date()\r\n      this.selectedTime = `${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`\r\n    },\r\n    // 清空搜索框\r\n    clc1 () {\r\n      // 清空搜索框1\r\n      this.searchQueryStart = ''\r\n    },\r\n    // 清空搜索框2\r\n    clc2 () {\r\n      this.searchQueryEnd = ''\r\n    },\r\n    swap () {\r\n      const tempQuery = this.searchQueryStart\r\n      this.searchQueryStart = this.searchQueryEnd\r\n      this.searchQueryEnd = tempQuery\r\n      const tempResult = this.selectedResultStart\r\n      this.selectedResultStart = this.selectedResultEnd\r\n      this.selectedResultEnd = tempResult\r\n      this.onSearch()\r\n    },\r\n    // 解析URL参数\r\n    parseUrlParams () {\r\n      const urlParams = new URLSearchParams(window.location.search)\r\n      const startParam = urlParams.get('start')\r\n      const endParam = urlParams.get('end')\r\n      if (startParam) {\r\n        try {\r\n          const startObj = JSON.parse(decodeURIComponent(startParam))\r\n          if (startObj && startObj.address) {\r\n            this.searchQueryStart = startObj.name\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing start parameter:', e)\r\n        }\r\n      }\r\n      if (endParam) { // 如果有终点参数，进行解析\r\n        try {\r\n          const endObj = JSON.parse(decodeURIComponent(endParam))\r\n          if (endObj && endObj.address) {\r\n            this.searchQueryEnd = endObj.name // 绑定终点查询字符串\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing end parameter:', e)\r\n        }\r\n      }\r\n    },\r\n    // 处理搜索框输入变化事件\r\n    onSearchInputChange (event, isStart) {\r\n      const query = event.target.value\r\n      const searchResultsField = isStart ? 'searchResults' : 'searchResultsEnd'\r\n      if (query.includes(\"'\")) {\r\n        console.log('输入法临时输入，不发送请求')\r\n        return\r\n      }\r\n      if (query.length >= 2) {\r\n        fetch(`${process.env.VUE_APP_API_URL}/api/search`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ searchQueryStart: query })\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            this[searchResultsField] = data\r\n          })\r\n          .catch((error) => {\r\n            console.error('错误:', error)\r\n          })\r\n      } else {\r\n        this[searchResultsField] = []\r\n      }\r\n    },\r\n    // 处理选择搜索结果事件\r\n    selectResult (result, isStart = true) {\r\n      console.log('用户选择了搜索结果:', result)\r\n      const simplifiedResult = {\r\n        name: result.name,\r\n        address: result.address,\r\n        wgs84_latitude: result.wgs84_latitude,\r\n        wgs84_longitude: result.wgs84_longitude,\r\n        location: [result.wgs84_longitude, result.wgs84_latitude],\r\n        baidu_index: result.baidu_index,\r\n        baidu_latitude: result.baidu_latitude,\r\n        baidu_longitude: result.baidu_longitude,\r\n        id: result.id,\r\n        label: result.label\r\n      }\r\n      // 获取当前的起点和终点信息\r\n      let currentStart = this.selectedResultStart ? JSON.stringify(this.selectedResultStart) : null\r\n      let currentEnd = this.selectedResultEnd ? JSON.stringify(this.selectedResultEnd) : null\r\n      // 根据isStart参数选择起点或终点\r\n      if (isStart) {\r\n        this.selectedResultStart = simplifiedResult\r\n        this.searchQueryStart = simplifiedResult.name\r\n        this.searchResults = []\r\n        currentStart = JSON.stringify(simplifiedResult)\r\n      } else {\r\n        this.selectedResultEnd = simplifiedResult\r\n        this.searchQueryEnd = simplifiedResult.name\r\n        this.searchResultsEnd = []\r\n        currentEnd = JSON.stringify(simplifiedResult)\r\n      }\r\n      // 跳转到结果页面，带上起点和终点信息，并添加一个时间戳作为唯一查询参数\r\n      this.$router.push({\r\n        path: '/lu-jing-gui-hua/Intermediate-page',\r\n        query: {\r\n          start: currentStart,\r\n          end: currentEnd,\r\n          t: Date.now() // 添加时间戳\r\n        }\r\n      })\r\n    },\r\n    onSearch () {\r\n      // 检查是否两个结果都已选择\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        // 显示加载动画\r\n        this.isLoading = true\r\n        // 构造包含location属性的起点和终点对象\r\n        const startWithLocation = {\r\n          ...this.selectedResultStart,\r\n          location: [this.selectedResultStart.wgs84_longitude, this.selectedResultStart.wgs84_latitude]\r\n        }\r\n        const endWithLocation = {\r\n          ...this.selectedResultEnd,\r\n          location: [this.selectedResultEnd.wgs84_longitude, this.selectedResultEnd.wgs84_latitude]\r\n        }\r\n        // 发送请求到后端进行路径规划\r\n        axios.post(`${process.env.VUE_APP_API_URL}/api/route/plan`, { start: startWithLocation, end: endWithLocation })\r\n          .then(response => {\r\n            // 后端返回的路径规划结果ID\r\n            const routePlanId = response.data.id\r\n            console.log('路径规划结果ID:', routePlanId)\r\n\r\n            // 隐藏加载动画\r\n            this.isLoading = false\r\n\r\n            // 使用Vue Router跳转到结果页面，并传递路径规划结果ID\r\n            this.$router.push({\r\n              path: '/lu-jing-gui-hua/route',\r\n              query: {\r\n                start: JSON.stringify(startWithLocation),\r\n                end: JSON.stringify(endWithLocation),\r\n                id: routePlanId\r\n              }\r\n            })\r\n            this.drawRoute(startWithLocation, endWithLocation)\r\n            this.initMap()\r\n          })\r\n          .catch(error => {\r\n            console.error(error)\r\n            // 隐藏加载动画\r\n            this.isLoading = false\r\n            // 错误处理，例如显示提示信息\r\n            alert('路径规划失败，请稍后再试。')\r\n          })\r\n      } else {\r\n        // 如果起点或终点未选择，显示提示信息\r\n        alert('请确保起点和终点都已选择。')\r\n      }\r\n    },\r\n    // 初始化地图\r\n    initMap () {\r\n      const map = new Map({\r\n        basemap: 'tianditu-vector' // 使用适合的底图\r\n      })\r\n      // 创建MapView实例\r\n      this.view = new MapView({\r\n        container: 'viewDiv', // 使用正确的容器ID\r\n        map: map,\r\n        center: [114.3, 30.7], // 使用中心点坐标\r\n        zoom: 4,\r\n        constraints: {\r\n          geometry: {\r\n            type: 'extent',\r\n            xmin: 113.6,\r\n            ymin: 29.9,\r\n            xmax: 115.0,\r\n            ymax: 31.3\r\n          },\r\n          minScale: 500,\r\n          maxScale: 2000000,\r\n          rotationEnabled: false,\r\n          // 假设tileInfo.lods已经在某处定义，否则这里需要调整\r\n          // lods: tileInfo.lods,\r\n          snapToZoom: false\r\n        }\r\n      })\r\n      // 移动缩放控件到左下角\r\n      this.view.ui.move('zoom', 'bottom-left')\r\n      // 创建GraphicsLayer实例\r\n      const graphicsLayer = new GraphicsLayer()\r\n      map.add(graphicsLayer)\r\n      // 绘制起点和终点，绘制路径\r\n      this.drawPoints(graphicsLayer)\r\n      this.drawRoute(map)\r\n    },\r\n    // 绘制起点和终点\r\n    drawPoints (graphicsLayer) {\r\n      // 检查this.$route.query.start和this.$route.query.end是否定义\r\n      if (!this.$route.query.start || !this.$route.query.end) {\r\n        console.error('Start or end point is undefined.')\r\n        return // 如果未定义，直接返回\r\n      }\r\n      const start = JSON.parse(this.$route.query.start)\r\n      const end = JSON.parse(this.$route.query.end)\r\n      // 检查start和end是否有location属性\r\n      if (!start.location || !end.location) {\r\n        console.error('Start or end point does not have a location.')\r\n        return // 如果没有location属性，直接返回\r\n      }\r\n      // 创建起点和终点的Point对象\r\n      const startPoint = new Point({\r\n        longitude: start.location[0],\r\n        latitude: start.location[1]\r\n      })\r\n      const endPoint = new Point({\r\n        longitude: end.location[0],\r\n        latitude: end.location[1]\r\n      })\r\n      const startGraphic = new Graphic({\r\n        geometry: startPoint,\r\n        symbol: {\r\n          type: 'simple-marker', // autocasts as new SimpleMarkerSymbol()\r\n          color: 'red',\r\n          size: '20px'\r\n        },\r\n        // 添加popupTemplate\r\n        popupTemplate: {\r\n          title: '起点信息',\r\n          content: [\r\n            {\r\n              type: 'fields',\r\n              fieldInfos: [\r\n                {\r\n                  fieldName: 'address',\r\n                  label: '地址'\r\n                },\r\n                {\r\n                  fieldName: 'name',\r\n                  label: '名称'\r\n                },\r\n                // 可以继续添加更多字段\r\n                {\r\n                  fieldName: 'wgs84_latitude',\r\n                  label: 'WGS84纬度'\r\n                },\r\n                {\r\n                  fieldName: 'wgs84_longitude',\r\n                  label: 'WGS84经度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_index',\r\n                  label: '百度索引'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_latitude',\r\n                  label: '百度纬度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_longitude',\r\n                  label: '百度经度'\r\n                },\r\n                {\r\n                  fieldName: 'id',\r\n                  label: 'ID'\r\n                },\r\n                {\r\n                  fieldName: 'label',\r\n                  label: '标签'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        attributes: start\r\n      })\r\n      const endGraphic = new Graphic({\r\n        geometry: endPoint,\r\n        symbol: {\r\n          type: 'simple-marker',\r\n          color: 'green',\r\n          size: '20px'\r\n        },\r\n        // 添加popupTemplate\r\n        popupTemplate: {\r\n          title: '终点信息',\r\n          content: [\r\n            {\r\n              type: 'fields',\r\n              fieldInfos: [\r\n                {\r\n                  fieldName: 'address',\r\n                  label: '地址'\r\n                },\r\n                {\r\n                  fieldName: 'name',\r\n                  label: '名称'\r\n                },\r\n                // 可以继续添加更多字段\r\n                {\r\n                  fieldName: 'wgs84_latitude',\r\n                  label: 'WGS84纬度'\r\n                },\r\n                {\r\n                  fieldName: 'wgs84_longitude',\r\n                  label: 'WGS84经度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_index',\r\n                  label: '百度索引'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_latitude',\r\n                  label: '百度纬度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_longitude',\r\n                  label: '百度经度'\r\n                },\r\n                {\r\n                  fieldName: 'id',\r\n                  label: 'ID'\r\n                },\r\n                {\r\n                  fieldName: 'label',\r\n                  label: '标签'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        attributes: end\r\n      })\r\n      // 将起点和终点添加到图形图层\r\n      graphicsLayer.addMany([startGraphic, endGraphic])\r\n    },\r\n    // 绘制路径\r\n    drawRoute (map) {\r\n      const routeId = this.$route.query.id // 从URL获取路线ID\r\n      if (!routeId) {\r\n        console.error('Route ID is undefined.')\r\n        return\r\n      }\r\n      // 修改为后端提供的接口URL，需要准备数据库，后端代码以及部署后端服务\r\n      const geojsonUrl = `${process.env.VUE_APP_API_URL}/api/get_geojson/${routeId}`\r\n      fetch(geojsonUrl) // 使用fetch API获取GeoJSON文件\r\n        .then(response => response.json()) // 将响应转换为JSON\r\n        .then(data => {\r\n          let totalLength = 0\r\n          let totalCost = 0\r\n          const geojsonLayer = new FeatureLayer({ // 创建FeatureLayer图层\r\n            source: data.features.map((feature, index) => {\r\n              totalLength += feature.properties.length\r\n              totalCost += feature.properties.cost\r\n              return {\r\n                geometry: {\r\n                  type: 'polyline',\r\n                  paths: feature.geometry.coordinates\r\n                },\r\n                attributes: {\r\n                  ...feature.properties,\r\n                  id: index // 为每个要素生成唯一的ID\r\n                }\r\n              }\r\n            }),\r\n            renderer: {\r\n              type: 'simple', // 使用简单渲染器\r\n              symbol: {\r\n                type: 'simple-line', // 使用简单线符号\r\n                color: [0, 0, 255], // 蓝色\r\n                width: 3 // 宽度为3像素\r\n              }\r\n            },\r\n            objectIdField: 'id', // 必须指定一个唯一的字段作为ObjectId\r\n            fields: [\r\n              { name: 'id', type: 'oid' },\r\n              { name: 'seq', type: 'integer' },\r\n              { name: 'path_seq', type: 'integer' },\r\n              { name: 'node', type: 'integer' },\r\n              { name: 'edge', type: 'integer' },\r\n              { name: 'cost', type: 'double' },\r\n              { name: 'agg_cost', type: 'double' },\r\n              { name: 'length', type: 'double' } // 添加length字段\r\n            ]\r\n          })\r\n          // 将FeatureLayer图层添加到地图上\r\n          map.layers.add(geojsonLayer)\r\n          // 计算总时长（小时和分钟）\r\n          this.totalHours = Math.floor(totalCost / 3600)\r\n          this.totalMinutes = Math.floor((totalCost % 3600) / 60)\r\n          // 计算总距离（米或千米）\r\n          if (totalLength < 1000) {\r\n            this.totalDistance = `${totalLength.toFixed(2)}米`\r\n          } else {\r\n            this.totalDistance = `${(totalLength / 1000).toFixed(2)}千米`\r\n          }\r\n        })\r\n        .catch(error => console.error('Error loading the geojson file:', error))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/*之后要自己调样式的大小，这个仅作参考*/\r\n#viewDiv {\r\n  position: fixed; /* 固定定位 */\r\n  top: 0; /* 紧贴网页顶部 */\r\n  height: 100vh; /* 将高度设置为视口高度的100% */\r\n  width: 100vw; /* 将宽度设置为视口宽度的100% */\r\n  z-index: -1; /* 设置较低的z-index值，使其在App.vue的下部分 */\r\n  margin: auto;\r\n}\r\n\r\n.lu-jing-gui-hua {\r\n  display: flex;\r\n  flex-direction: row; /* 使子元素垂直排列,使大框和revert小框水平分布 */\r\n  align-items: flex; /* 水平居中对齐子元素 */\r\n}\r\n\r\n.text {\r\n  margin-top: 5px; /* 顶部外边距 */\r\n  margin-bottom: 5px; /* 底部外边距 */\r\n  background: rgba(109, 72, 72, 0.45);\r\n  -webkit-backdrop-filter: blur(25px);\r\n  backdrop-filter: blur(25px);\r\n  border: 1px solid rgba(255,255,255,0.45);\r\n  padding: 20px; /* 内边距 */\r\n  text-align: left /* 文本居中 */\r\n}\r\n\r\n.search-containers {\r\n  display: flex;\r\n  flex-direction: column; /* 保持垂直排列 */\r\n  justify-content: flex-start; /* 从顶部开始排列 */\r\n  align-items: flex-start; /* 子元素沿交叉轴的开始边缘对齐，即顶部对齐 */\r\n  width: 27%; /* 设置一个固定宽度 */\r\n  padding-right: 10px; /* 根据需要调整，确保搜索框周围有足够空间 */\r\n  padding-left:32px;/*整个搜索框的左边空间*/\r\n  padding-top: 8px;\r\n  padding-bottom: 10px;\r\n  background: #FFFFFF; /* 应用深色毛玻璃效果 */\r\n  -webkit-backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  border-radius: 10px; /* 设置圆角 */\r\n  border: 1px solid rgba(255, 255, 255, 0.45); /* 添加边框 */\r\n  margin-bottom: 10px;\r\n  position: relative; /* 添加相对定位 */\r\n  top: 0vh;\r\n}\r\n\r\n/* 移除左右外边距 */\r\n.search-container.start,\r\n.search-container.end {\r\n  position: relative; /* 设置相对定位 */\r\n  margin-top: 5px;\r\n  padding-left: 0px; /* 留出图片的空间 */\r\n  margin-left: 24px; /* 根据侧边栏宽度来设置左边距 */\r\n}\r\n\r\n.search-box {\r\n  position: relative; /* 允许绝对定位的子元素 */\r\n  padding: 8px 8px; /* 初始内边距 */\r\n  border: 2px solid #ccc;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  flex-grow: 1;\r\n  box-sizing: border-box;\r\n  text-indent: 0px; /* 初始文本缩进，保持文本在左侧 */\r\n  width: 200%; /* 使搜索框填充容器 */\r\n  display: flex;\r\n  align-items: center; /* 垂直居中对齐 */\r\n}\r\n\r\n/* 鼠标悬停时只改变边框颜色，不改变宽度 */\r\n.search-box:hover {\r\n  border-color: blue; /* 改变边框颜色而不是宽度 */\r\n}\r\n\r\n.search-box:focus {\r\n  border-width: 2px;\r\n  border-color: blue;\r\n  text-indent: 0px; /* 聚焦时减少文本缩进 */\r\n}\r\n\r\n.search-results {\r\n  position: absolute;\r\n  top: 100%; /* 确保列表紧贴搜索框的底部 */\r\n  left: 0;\r\n  width: 180%; /* 使列表宽度与搜索框相同 */\r\n  background-color: white; /* 或其他背景色，确保列表可见 */\r\n  z-index: 1000; /* 确保搜索结果列表在其他元素之上 */\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1); /* 可选：添加一些阴影以提升视觉效果 */\r\n  max-height: 160px; /* 限制最大高度，5行大约160px，根据实际行高调整 */\r\n  overflow-y: auto; /* 超出部分显示滚动条 */\r\n  display: flex;\r\n  align-items: center; /* 垂直居中对齐 */\r\n}\r\n\r\n.search-results li:hover {\r\n  text-decoration: underline; /* 添加下划线 */\r\n  background-color: #f0f0f0; /* 更改背景颜色以提高对比度 */\r\n  cursor: pointer; /* 更改鼠标指针为手形，更明显地指示可点击 */\r\n}\r\n\r\n/* 查询按钮的容器样式 */\r\n.search-action {\r\n  display: flex;\r\n  position: absolute; /* 绝对定位 */\r\n  right: 8px; /* 与右边界保持一定距离 */\r\n  top: 13px; /* 与底部保持一定距离 */\r\n  border: 2px solid  #ccc;\r\n  justify-content: flex-start;\r\n  border-radius: 10px;\r\n  cursor: pointer; /* 鼠标悬停时显示指针 */\r\n}\r\n\r\n/* 将CSS链接转换为@import语句 */\r\n@import url(\"https://js.geoscene.cn/4.27/@geoscene/core/assets/geoscene/themes/light/main.css\");\r\n\r\n.car{\r\n  padding-top:3px;\r\n  left:1px;\r\n}\r\n\r\n/* 交换的容器样式 */\r\n.revert-containers{\r\n  position: absolute; /* 或使用 fixed，根据需要 */\r\n  left: 0; /* 侧边栏靠在最左边 */\r\n  top: 0; /* 根据需要调整垂直位置 */\r\n  z-index: 10; /* 确保侧边栏在其他元素上方 */\r\n  width: 30px;\r\n  height:99px;\r\n  padding-left:5px;\r\n  background-color: #FFFFFF;\r\n  border-radius: 10px; /* 设置圆角 */\r\n  -webkit-backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n}\r\n.swap-action button {\r\n  display:flex;\r\n  flex-direction: row; /* 保持水平排列 */\r\n  justify-content: flex-start; /* 水平排列的子元素靠左对齐 */\r\n  position: absolute;\r\n  left: 5px; /* 图标距离父容器左边的距离 */\r\n  top: 50%; /* 垂直居中对齐 */\r\n  transform: translateY(-50%); /* 使用transform属性垂直居中 */\r\n  border:white;/* 边框颜色设置为白色 */\r\n  padding:0px;\r\n  background-color: #FFFFFF;\r\n  cursor: pointer; /* 鼠标悬停时显示指针 */\r\n}\r\n\r\n/* 搜索框框前面的圆圈的样式 */\r\n.search-icon-wrapper {\r\n  display: inline-block; /* 或者使用 flex 布局 */\r\n  position: absolute; /* 绝对定位 */\r\n  left: -20px; /* 根据需要调整 */\r\n  top: 50%;\r\n  transform: translateY(-50%); /* 垂直居中对齐 */\r\n}\r\n\r\n/* 删除logo的样式 */\r\n.search-box-img {/* 作用：使得 删除logo 在搜索框内 */\r\n  position: absolute;\r\n  right: -140px; /* 距离输入框右侧的距离 */\r\n  top: 50%;\r\n  transform: translateY(-35%); /* 垂直居中对齐 */\r\n  z-index: 1; /* 确保图片在输入框之上 */\r\n  padding-inline-end: 0px;\r\n}\r\n.delete{\r\n  cursor: pointer; /* 鼠标悬停时显示指针 */\r\n}\r\n.delete img {\r\n  pointer-events: none; /* 点击图片时不会影响输入框 （记得改成删除这个框框内容）*/\r\n}\r\n\r\n/* 搜索logo的样式 */\r\n.search-action img {\r\n  transform: scale(0.85); /* 将图片缩放到原始尺寸的50% */\r\n}\r\n.search-action:hover{\r\n  border-color: blue;\r\n}\r\n/* 选择时间框的样式 */\r\n.choose-time{\r\n  display: flex;\r\n  flex-direction: column; /* 垂直排列 */\r\n  align-items: center;\r\n  margin-bottom: 10px; /* 根据需要添加外边距 */\r\n  width: 430px;\r\n  height: auto;\r\n  background-color:#FFFFFF;\r\n  border-radius: 10px; /* 设置圆角 */\r\n}\r\n.form-group label,\r\n.form-group input {\r\n  margin-right: 10px; /* 右侧外边距 */\r\n}\r\n\r\n/* 路线展示框的样式 */\r\n.routelist{\r\n  display: flex;\r\n  flex-direction: column; /* 垂直排列 */\r\n  left: 8px; /* 侧边栏靠在最左边 */\r\n  top: 130px; /* 根据需要调整垂直位置 */\r\n  width: 430px;\r\n  height: auto;\r\n  background-color: #FFFFFF;\r\n  border-radius: 10px; /* 设置圆角 */\r\n  -webkit-backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n}\r\n.cardlist{\r\n  padding:8px;\r\n}\r\n.route{\r\n  left: 8px; /* 距离左侧的距离 */\r\n  width:378px;\r\n  height: auto;\r\n  border-radius: 10px; /* 设置圆角 */\r\n  border: 2px solid #E4E6E7;\r\n  padding: 25px 20px 10px 15px;\r\n  cursor: pointer;\r\n  margin: 0 0 10px;\r\n}\r\n.route:hover{\r\n  border-color: blue;\r\n}\r\n.introduction{\r\n  color: #3385FF;\r\n}\r\n.intro span{\r\n  margin-right: 10px; /* 右侧外边距 */\r\n}\r\n\r\n</style>\r\n","import { render } from \"./RouteView.vue?vue&type=template&id=9ad1e830\"\nimport script from \"./RouteView.vue?vue&type=script&lang=js\"\nexport * from \"./RouteView.vue?vue&type=script&lang=js\"\n\nimport \"./RouteView.vue?vue&type=style&index=0&id=9ad1e830&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/*\r\nAll material copyright GeoScene, All Rights Reserved, unless otherwise specified.\r\nSee https://js.geoscene.cn/4.27/geoscene/copyright.txt for details.\r\n*/\r\nimport{_ as r}from\"../chunks/tslib.es6.js\";import{property as e}from\"../core/accessorSupport/decorators/property.js\";import\"../core/accessorSupport/ensureType.js\";import\"../core/arrayUtils.js\";import\"../core/has.js\";import{subclass as o}from\"../core/accessorSupport/decorators/subclass.js\";import{owningCollectionProperty as s}from\"../core/support/OwningCollection.js\";import t from\"./Layer.js\";import{BlendLayer as i}from\"./mixins/BlendLayer.js\";import{ScaleRangeLayer as p}from\"./mixins/ScaleRangeLayer.js\";import{GraphicsCollection as a}from\"../support/GraphicsCollection.js\";import c from\"../symbols/support/ElevationInfo.js\";let n=class extends(i(p(t))){constructor(r){super(r),this.elevationInfo=null,this.graphics=new a,this.screenSizePerspectiveEnabled=!0,this.type=\"graphics\",this.internal=!1}destroy(){this.removeAll(),this.graphics.destroy()}add(r){return this.graphics.add(r),this}addMany(r){return this.graphics.addMany(r),this}removeAll(){return this.graphics.removeAll(),this}remove(r){this.graphics.remove(r)}removeMany(r){this.graphics.removeMany(r)}on(r,e){return super.on(r,e)}graphicChanged(r){this.emit(\"graphic-update\",r)}};r([e({type:c})],n.prototype,\"elevationInfo\",void 0),r([e(s(a,\"graphics\"))],n.prototype,\"graphics\",void 0),r([e({type:[\"show\",\"hide\"]})],n.prototype,\"listMode\",void 0),r([e()],n.prototype,\"screenSizePerspectiveEnabled\",void 0),r([e({readOnly:!0})],n.prototype,\"type\",void 0),r([e({constructOnly:!0})],n.prototype,\"internal\",void 0),n=r([o(\"geoscene.layers.GraphicsLayer\")],n);const h=n;export{h as default};"],"names":["class","_createElementVNode","src","alt","style","_hoisted_6","_hoisted_11","key","_hoisted_18","_hoisted_22","id","for","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","onClick","_cache","args","$options","swap","title","_hoisted_7","_hoisted_8","_hoisted_9","type","$event","$data","searchQueryStart","onInput","onSearchInputChange","placeholder","_hoisted_10","clc1","_hoisted_12","searchResults","length","_hoisted_13","_renderList","result","index","selectResult","name","_hoisted_14","_createCommentVNode","_hoisted_15","_hoisted_16","searchQueryEnd","_hoisted_17","clc2","_hoisted_19","searchResultsEnd","_hoisted_20","_hoisted_21","onSearch","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","selectedDate","_hoisted_29","selectedTime","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_toDisplayString","totalHours","totalMinutes","_hoisted_37","totalDistance","data","selectedResultStart","selectedResultEnd","isLoading","mounted","this","initMap","$route","query","start","end","JSON","parse","parseUrlParams","Date","toISOString","substring","updateTime","setInterval","methods","now","String","getHours","padStart","getMinutes","tempQuery","tempResult","urlParams","URLSearchParams","window","location","search","startParam","get","endParam","startObj","decodeURIComponent","address","e","console","error","endObj","event","isStart","target","value","searchResultsField","includes","log","fetch","method","headers","body","stringify","then","response","json","catch","simplifiedResult","wgs84_latitude","wgs84_longitude","baidu_index","baidu_latitude","baidu_longitude","label","currentStart","currentEnd","$router","push","path","t","startWithLocation","endWithLocation","axios","post","routePlanId","drawRoute","alert","map","Map","basemap","view","MapView","container","center","zoom","constraints","geometry","xmin","ymin","xmax","ymax","minScale","maxScale","rotationEnabled","snapToZoom","ui","move","graphicsLayer","GraphicsLayer","add","drawPoints","startPoint","Point","longitude","latitude","endPoint","startGraphic","Graphic","symbol","color","size","popupTemplate","content","fieldInfos","fieldName","attributes","endGraphic","addMany","routeId","geojsonUrl","totalLength","totalCost","geojsonLayer","FeatureLayer","source","features","feature","properties","cost","paths","coordinates","renderer","width","objectIdField","fields","layers","Math","floor","toFixed","__exports__","render","n","i","p","constructor","r","super","elevationInfo","graphics","a","screenSizePerspectiveEnabled","internal","destroy","removeAll","remove","removeMany","on","graphicChanged","emit","c","prototype","s","readOnly","constructOnly","o","h"],"sourceRoot":""}