{"version":3,"file":"js/lu-jing-gui-hua-intermediate-page.e69b10d2.js","mappings":"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","sources":["webpack://sun-glare-project/./src/views/IntermediatepageView.vue","webpack://sun-glare-project/./src/views/IntermediatepageView.vue?2cfd","webpack://sun-glare-project/./node_modules/@geoscene/core/layers/GraphicsLayer.js"],"sourcesContent":["<template>\r\n  <!-- 输入了起点和终点之后,还没有摁查询路径的画面 -->\r\n   <div class=\"lu-jing-gui-hua\">\r\n    <!-- 搜索框 -->\r\n    <!-- 外层容器 -->\r\n    <div class=\"search-containers\">\r\n      <!-- 交换的侧边栏 -->\r\n      <div class=\"revert-containers\">\r\n        <div class=\"car\"><img src=\"https://wx3.sinaimg.cn/orj360/008tIcISgy1hsgyr8gzsjj300o00odfl.jpg\"></div>\r\n        <div class=\"swap-action\">\r\n          <!-- 绑定 swap 方法到点击事件 -->\r\n          <button @click=\"swap\" title=\"切换起终点\">\r\n            <img src=\"https://wx1.sinaimg.cn/orj360/008tIcISgy1hsiz7qtw48j301s01sq2p.jpg\" alt=\"revert\" style=\"width: 22px; height: 25px;\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <!-- 搜索起点的容器 -->\r\n      <div class=\"search-container start\">\r\n        <!-- 图片 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src=\"https://wx1.sinaimg.cn/orj360/008tIcISgy1hsgyr8gv8dj300f00f0oh.jpg\" alt=\"pink\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryStart\" @input=\"onSearchInputChange($event, true)\" placeholder=\"请输入起点\" class=\"search-box search-box-start\"/>\r\n       <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete1\" title=\"清空\" @click=\"clc1\">\r\n            <img src=\"https://wx2.sinaimg.cn/orj360/008tIcISgy1hsnss2ckv4j300k00k0m1.jpg\" alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 修正后的起点搜索结果展示 -->\r\n        <div class=\"search-results\" v-if=\"searchResults.length && searchQueryStart\">\r\n        <ul>\r\n          <li v-for=\"(result, index) in searchResults\" :key=\"index\" @click=\"selectResult(result, true)\">\r\n            {{ result.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n     <!-- 搜索终点的容器 -->\r\n    <div class=\"search-container end\">\r\n    <!-- 图片容器 -->\r\n      <div class=\"search-icon-wrapper\">\r\n        <img src=\"https://wx4.sinaimg.cn/orj360/008tIcISgy1hsgyr8got8j300f00f0o9.jpg\" alt=\"green\">\r\n      </div>\r\n    <!-- 输入框 -->\r\n   <input type=\"text\" v-model=\"searchQueryEnd\" @input=\"onSearchInputChange($event, false)\" placeholder=\"请输入终点\" class=\"search-box search-box-end\"/>\r\n    <!-- 搜索框内部的删除图片 -->\r\n    <span class=\"search-box-img\">\r\n          <div class=\"delete1\" title=\"清空\" @click=\"clc2\">\r\n            <img src=\"https://wx2.sinaimg.cn/orj360/008tIcISgy1hsnss2ckv4j300k00k0m1.jpg\" alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n   <!-- 修正后的终点搜索结果展示 -->\r\n    <div class=\"search-results\" v-if=\"searchResultsEnd.length && searchQueryEnd\">\r\n      <ul>\r\n        <li v-for=\"(result, index) in searchResultsEnd\" :key=\"index\" @click=\"selectResult(result, false)\">\r\n        {{ result.name }}\r\n        </li>\r\n      </ul>\r\n   </div>\r\n</div>\r\n      <div class=\"search-action\" @click=\"onSearch\" title=\"搜索\">\r\n          <img src=\"https://wx4.sinaimg.cn/mw2000/008tIcISgy1hsq1fw9ob9j300w00w3ya.jpg\" alt=\"search\">\r\n      </div>\r\n    </div>\r\n    <div v-if=\"isLoading\" class=\"loader-overlay\">\r\n      <div class=\"loader\"></div>\r\n    </div>\r\n    </div>\r\n    <!-- 地图容器 -->\r\n    <div id=\"viewDiv\"></div>\r\n</template>\r\n\r\n<script>\r\nimport Map from '@geoscene/core/Map.js'\r\nimport MapView from '@geoscene/core/views/MapView.js'\r\nimport Graphic from '@geoscene/core/Graphic'\r\nimport Point from '@geoscene/core/geometry/Point.js'\r\nimport GraphicsLayer from '@geoscene/core/layers/GraphicsLayer'\r\nimport axios from 'axios'\r\nimport { ref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nexport default {\r\n  name: 'IntermediatePageView',\r\n  setup () {\r\n    const searchQueryStart = ref('')\r\n    const searchQueryEnd = ref('')\r\n    const selectedResultStart = ref(null)\r\n    const selectedResultEnd = ref(null)\r\n    const router = useRouter()\r\n\r\n    return {\r\n      searchQueryStart,\r\n      searchQueryEnd,\r\n      selectedResultStart,\r\n      selectedResultEnd,\r\n      router\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      searchResults: [],\r\n      searchResultsEnd: [],\r\n      isLoading: false\r\n    }\r\n  },\r\n  // 在组件挂载时初始化地图\r\n  mounted () {\r\n    // 初始化地图\r\n    this.initMap()\r\n    if (this.$route.query.start) {\r\n      // 如果URL中有起点参数，解析并设置为选中结果\r\n      this.selectedResultStart = JSON.parse(this.$route.query.start)\r\n    }\r\n    if (this.$route.query.end) {\r\n      // 如果URL中有终点参数，解析并设置为选中结果\r\n      this.selectedResultEnd = JSON.parse(this.$route.query.end)\r\n    }\r\n    // 解析URL参数\r\n    this.parseUrlParams()\r\n  },\r\n  methods: {\r\n    // 清空搜索框\r\n    clc1 () {\r\n      // 清空搜索框1\r\n      this.searchQueryStart = ''\r\n    },\r\n    // 清空搜索框2\r\n    clc2 () {\r\n      this.searchQueryEnd = ''\r\n    },\r\n    // 解析URL参数\r\n    parseUrlParams () {\r\n      // 获取URL中的查询参数\r\n      const urlParams = new URLSearchParams(window.location.search)\r\n      const startParam = urlParams.get('start')\r\n      const endParam = urlParams.get('end')\r\n      // 如果有起点参数，进行解析\r\n      if (startParam) {\r\n        try {\r\n          const startObj = JSON.parse(decodeURIComponent(startParam))\r\n          if (startObj && startObj.address) {\r\n            this.searchQueryStart = startObj.name\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing start parameter:', e)\r\n        }\r\n      }\r\n      // 如果有终点参数，进行解析\r\n      if (endParam) {\r\n        try {\r\n          const endObj = JSON.parse(decodeURIComponent(endParam))\r\n          if (endObj && endObj.address) {\r\n            this.searchQueryEnd = endObj.name // 绑定终点查询字符串\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing end parameter:', e)\r\n        }\r\n      }\r\n    },\r\n    // 交换起点和终点信息并跳转页面\r\n    swap () {\r\n      const tempQuery = this.searchQueryStart\r\n      this.searchQueryStart = this.searchQueryEnd\r\n      this.searchQueryEnd = tempQuery\r\n      // 交换 selectedResultStart 和 selectedResultEnd\r\n      const tempResult = this.selectedResultStart\r\n      this.selectedResultStart = this.selectedResultEnd\r\n      this.selectedResultEnd = tempResult\r\n      // 跳转到 intermediate-page 页面，并传递交换后的起点和终点信息\r\n      this.router.push({\r\n        path: '/lu-jing-gui-hua/result',\r\n        query: {\r\n          start: JSON.stringify(this.selectedResultStart),\r\n          end: JSON.stringify(this.selectedResultEnd)\r\n        }\r\n      })\r\n    },\r\n    // 处理搜索框输入变化\r\n    onSearchInputChange (event, isStart) {\r\n      // 获取搜索框的值\r\n      const query = event.target.value\r\n      const searchResultsField = isStart ? 'searchResults' : 'searchResultsEnd'\r\n      // 检查是否是输入法临时输入\r\n      if (query.includes(\"'\")) {\r\n        console.log('输入法临时输入，不发送请求')\r\n        return\r\n      }\r\n      // 发送请求获取搜索结果\r\n      if (query.length >= 2) {\r\n        // 使用的是本地的Flask后端，需要根据实际情况修改URL，结合后端接口的标识使用不同的URL\r\n        fetch(`${process.env.VUE_APP_API_URL}/api/search`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ searchQueryStart: query })\r\n        })\r\n        // 解析JSON响应\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            this[searchResultsField] = data\r\n          })\r\n          .catch((error) => {\r\n            console.error('错误:', error)\r\n          })\r\n      } else {\r\n        // 清空搜索结果\r\n        this[searchResultsField] = []\r\n      }\r\n    },\r\n    // 选择搜索结果\r\n    selectResult (result, isStart = true) {\r\n      // poi所含的信息\r\n      const simplifiedResult = {\r\n        name: result.name,\r\n        address: result.address,\r\n        wgs84_latitude: result.wgs84_latitude,\r\n        wgs84_longitude: result.wgs84_longitude,\r\n        location: [result.wgs84_longitude, result.wgs84_latitude],\r\n        baidu_index: result.baidu_index,\r\n        baidu_latitude: result.baidu_latitude,\r\n        baidu_longitude: result.baidu_longitude,\r\n        id: result.id,\r\n        label: result.label\r\n      }\r\n      // 检查是否是更新操作，具体逻辑是检查是否已经有选择的结果，\r\n      // 如果有则更新url，否则添加，但目前有点问题，更新好像不行，\r\n      // 另外搞了个clcSearch函数，直接跳转回routeplanning页面\r\n      let isUpdate = false\r\n      if (isStart && this.selectedResultStart) {\r\n        isUpdate = true\r\n        this.selectedResultStart = simplifiedResult\r\n        this.searchQueryStart = simplifiedResult.name\r\n        this.searchResults = []\r\n      } else if (!isStart && this.selectedResultEnd) {\r\n        isUpdate = true\r\n        this.selectedResultEnd = simplifiedResult\r\n        this.searchQueryEnd = simplifiedResult.name\r\n        this.searchResultsEnd = []\r\n      } else {\r\n        // 设置选中结果并清空搜索结果\r\n        if (isStart) {\r\n          this.selectedResultStart = simplifiedResult\r\n          this.searchQueryStart = simplifiedResult.name\r\n          this.searchResults = []\r\n        } else {\r\n          this.selectedResultEnd = simplifiedResult\r\n          this.searchQueryEnd = simplifiedResult.name\r\n          this.searchResultsEnd = []\r\n        }\r\n      }\r\n      // 检查是否需要导航\r\n      const shouldNavigate = this.selectedResultStart || this.selectedResultEnd\r\n      // 导航逻辑\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        this.navigateToResultPage()\r\n      } else if (shouldNavigate) {\r\n        this.navigateToIntermediatePage(isStart ? 'start' : 'end', simplifiedResult, isUpdate)\r\n      }\r\n    },\r\n    // 导航到结果页面\r\n    navigateToResultPage () {\r\n      this.$router.push({\r\n        path: '/lu-jing-gui-hua/result',\r\n        // 带着参数跳转，将经纬度绑定传递给result页面\r\n        query: {\r\n          start: JSON.stringify({\r\n            ...this.selectedResultStart,\r\n            location: [this.selectedResultStart.wgs84_longitude, this.selectedResultStart.wgs84_latitude]\r\n          }),\r\n          end: JSON.stringify({\r\n            ...this.selectedResultEnd,\r\n            location: [this.selectedResultEnd.wgs84_longitude, this.selectedResultEnd.wgs84_latitude]\r\n          })\r\n        }\r\n      })\r\n    },\r\n    navigateToIntermediatePage (type, result, isUpdate = false) {\r\n      const path = '/lu-jing-gui-hua/intermediate-page'\r\n      const query = {\r\n        [type]: JSON.stringify(result)\r\n      }\r\n\r\n      if (isUpdate) {\r\n        // 更新URL并刷新页面\r\n        this.$router.replace({ path, query }).then(() => {\r\n          window.location.reload()\r\n        })\r\n      } else {\r\n        // 正常导航\r\n        this.$router.push({ path, query })\r\n      }\r\n    },\r\n    onSearch () {\r\n      // 检查是否两个结果都已选择\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        // 显示加载动画\r\n        this.isLoading = true\r\n        // 构造包含location属性的起点和终点对象\r\n        const startWithLocation = {\r\n          ...this.selectedResultStart,\r\n          location: [this.selectedResultStart.wgs84_longitude, this.selectedResultStart.wgs84_latitude]\r\n        }\r\n        const endWithLocation = {\r\n          ...this.selectedResultEnd,\r\n          location: [this.selectedResultEnd.wgs84_longitude, this.selectedResultEnd.wgs84_latitude]\r\n        }\r\n        // 发送请求到后端进行路径规划\r\n        axios.post(`${process.env.VUE_APP_API_URL}/api/route/plan`, { start: startWithLocation, end: endWithLocation })\r\n          .then(response => {\r\n            // 后端返回的路径规划结果ID\r\n            const routePlanId = response.data.id\r\n            console.log('路径规划结果ID:', routePlanId)\r\n\r\n            // 隐藏加载动画\r\n            this.isLoading = false\r\n\r\n            // 使用Vue Router跳转到结果页面，并传递路径规划结果ID\r\n            this.$router.push({\r\n              path: '/lu-jing-gui-hua/route',\r\n              query: {\r\n                start: JSON.stringify(startWithLocation),\r\n                end: JSON.stringify(endWithLocation),\r\n                id: routePlanId\r\n              }\r\n            })\r\n          })\r\n          .catch(error => {\r\n            console.error(error)\r\n            // 隐藏加载动画\r\n            this.isLoading = false\r\n            // 错误处理，例如显示提示信息\r\n            alert('路径规划失败，请稍后再试。')\r\n          })\r\n      } else {\r\n        // 如果起点或终点未选择，显示提示信息\r\n        alert('请确保起点和终点都已选择。')\r\n      }\r\n    },\r\n    // 初始化地图\r\n    initMap () {\r\n      const map = new Map({\r\n        basemap: 'tianditu-vector' // 使用适合的底图\r\n      })\r\n      this.map = map\r\n      this.view = new MapView({\r\n        container: 'viewDiv', // 使用正确的容器ID\r\n        map: map,\r\n        center: [114.3, 30.7], // 使用中心点坐标\r\n        zoom: 4,\r\n        constraints: {\r\n          geometry: {\r\n            type: 'extent',\r\n            xmin: 113.6,\r\n            ymin: 29.9,\r\n            xmax: 115.0,\r\n            ymax: 31.3\r\n          },\r\n          minScale: 500,\r\n          maxScale: 2000000,\r\n          rotationEnabled: false,\r\n          // 假设tileInfo.lods已经在某处定义，否则这里需要调整\r\n          // lods: tileInfo.lods,\r\n          snapToZoom: false\r\n        }\r\n      })\r\n      // 移动缩放控件到左下角\r\n      this.view.ui.move('zoom', 'bottom-left')\r\n      // 创建一个新的GraphicsLayer实例，以便在地图上绘制点\r\n      const graphicsLayer = new GraphicsLayer()\r\n      map.add(graphicsLayer)\r\n      this.view.when(() => {\r\n        this.drawPoints(graphicsLayer)\r\n      }).catch((err) => {\r\n        console.error('MapView initialization error:', err)\r\n      })\r\n    },\r\n    // 绘制起点和终点\r\n    drawPoints (graphicsLayer) {\r\n      // 绘制起点\r\n      if (this.selectedResultStart) {\r\n        const start = this.selectedResultStart\r\n        const startPoint = new Point({\r\n          longitude: start.location[0],\r\n          latitude: start.location[1]\r\n        })\r\n\r\n        const startGraphic = new Graphic({\r\n          // 点参数设置\r\n          geometry: startPoint,\r\n          symbol: {\r\n            type: 'simple-marker', // 自动转换为 SimpleMarkerSymbol\r\n            color: 'red',\r\n            size: '20px'\r\n          },\r\n          popupTemplate: {\r\n            title: '起点信息',\r\n            content: [\r\n              {\r\n                type: 'fields',\r\n                fieldInfos: [\r\n                  {\r\n                    fieldName: 'address',\r\n                    label: '地址'\r\n                  },\r\n                  {\r\n                    fieldName: 'name',\r\n                    label: '名称'\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          attributes: start\r\n        })\r\n\r\n        graphicsLayer.add(startGraphic)\r\n      }\r\n      // 绘制终点\r\n      if (this.selectedResultEnd) {\r\n        const end = this.selectedResultEnd\r\n        const endPoint = new Point({\r\n          longitude: end.location[0],\r\n          latitude: end.location[1]\r\n        })\r\n        const endGraphic = new Graphic({\r\n          geometry: endPoint,\r\n          symbol: {\r\n            type: 'simple-marker',\r\n            color: 'green',\r\n            size: '20px'\r\n          },\r\n          popupTemplate: {\r\n            title: '终点信息',\r\n            content: [\r\n              {\r\n                type: 'fields',\r\n                fieldInfos: [\r\n                  {\r\n                    fieldName: 'address',\r\n                    label: '地址'\r\n                  },\r\n                  {\r\n                    fieldName: 'name',\r\n                    label: '名称'\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          attributes: end\r\n        })\r\n\r\n        graphicsLayer.add(endGraphic)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/*之后要自己调样式的大小，这个仅作参考*/\r\n#viewDiv {\r\n  position: fixed; /* 固定定位 */\r\n  top: 0; /* 紧贴网页顶部 */\r\n  height: 100vh; /* 将高度设置为视口高度的100% */\r\n  width: 100vw; /* 将宽度设置为视口宽度的100% */\r\n  z-index: -1; /* 设置较低的z-index值，使其在App.vue的下部分 */\r\n  margin: auto;\r\n}\r\n\r\n.lu-jing-gui-hua {\r\n  display: flex;\r\n  flex-direction: row; /* 使子元素垂直排列,使大框和revert小框水平分布 */\r\n  align-items: flex; /* 水平居中对齐子元素 */\r\n}\r\n\r\n.text {\r\n  margin-top: 5px; /* 顶部外边距 */\r\n  margin-bottom: 5px; /* 底部外边距 */\r\n  background: rgba(109, 72, 72, 0.45);\r\n  -webkit-backdrop-filter: blur(25px);\r\n  backdrop-filter: blur(25px);\r\n  border: 1px solid rgba(255,255,255,0.45);\r\n  padding: 20px; /* 内边距 */\r\n  text-align: left /* 文本居中 */\r\n}\r\n\r\n.search-containers {\r\n  display: flex;\r\n  flex-direction: column; /* 保持垂直排列 */\r\n  justify-content: flex-start; /* 从顶部开始排列 */\r\n  align-items: flex-start; /* 子元素沿交叉轴的开始边缘对齐，即顶部对齐 */\r\n  width: 27%; /* 设置一个固定宽度 */\r\n  padding-right: 10px; /* 根据需要调整，确保搜索框周围有足够空间 */\r\n  padding-left:32px;/*整个搜索框的左边空间*/\r\n  padding-top: 8px;\r\n  padding-bottom: 10px;\r\n  background: #FFFFFF; /* 应用深色毛玻璃效果 */\r\n  -webkit-backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  border-radius: 10px; /* 设置圆角 */\r\n  border: 1px solid rgba(255, 255, 255, 0.45); /* 添加边框 */\r\n  margin-bottom: 10px;\r\n  position: relative; /* 添加相对定位 */\r\n  top: 0vh;\r\n}\r\n\r\n/* 移除左右外边距 */\r\n.search-container.start,\r\n.search-container.end {\r\n  position: relative; /* 设置相对定位 */\r\n  margin-top: 5px;\r\n  padding-left: 0px; /* 留出图片的空间 */\r\n  margin-left: 24px; /* 根据侧边栏宽度来设置左边距 */\r\n}\r\n\r\n.search-box {\r\n  position: relative; /* 允许绝对定位的子元素 */\r\n  padding: 8px 8px; /* 初始内边距 */\r\n  border: 2px solid #ccc;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  flex-grow: 1;\r\n  box-sizing: border-box;\r\n  text-indent: 0px; /* 初始文本缩进，保持文本在左侧 */\r\n  width: 180%; /* 使搜索框填充容器 */\r\n  display: flex;\r\n  align-items: center; /* 垂直居中对齐 */\r\n}\r\n\r\n/* 鼠标悬停时只改变边框颜色，不改变宽度 */\r\n.search-box:hover {\r\n  border-color: blue; /* 改变边框颜色而不是宽度 */\r\n}\r\n\r\n.search-box:focus {\r\n  border-width: 2px;\r\n  border-color: blue;\r\n  text-indent: 0px; /* 聚焦时减少文本缩进 */\r\n}\r\n\r\n.search-results {\r\n  position: absolute;\r\n  top: 100%; /* 确保列表紧贴搜索框的底部 */\r\n  left: 0;\r\n  width: 180%; /* 使列表宽度与搜索框相同 */\r\n  background-color: white; /* 或其他背景色，确保列表可见 */\r\n  z-index: 1000; /* 确保搜索结果列表在其他元素之上 */\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1); /* 可选：添加一些阴影以提升视觉效果 */\r\n  max-height: 160px; /* 限制最大高度，5行大约160px，根据实际行高调整 */\r\n  overflow-y: auto; /* 超出部分显示滚动条 */\r\n  display: flex;\r\n  align-items: center; /* 垂直居中对齐 */\r\n}\r\n\r\n.search-results li:hover {\r\n  text-decoration: underline; /* 添加下划线 */\r\n  background-color: #f0f0f0; /* 更改背景颜色以提高对比度 */\r\n  cursor: pointer; /* 更改鼠标指针为手形，更明显地指示可点击 */\r\n}\r\n\r\n/* 查询按钮的容器样式 */\r\n.search-action {\r\n  display: flex;\r\n  position: absolute; /* 绝对定位 */\r\n  right: 8px; /* 与右边界保持一定距离 */\r\n  top: 13px; /* 与底部保持一定距离 */\r\n  border: 2px solid  #ccc;\r\n  justify-content: flex-start;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* 加载动画样式 */\r\n.loader-overlay {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 30%;\r\n  height: 30%;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n/* 加载动画样式 */\r\n.loader {\r\n  width: 50px;\r\n  aspect-ratio: 1;\r\n  display: grid;\r\n  border-radius: 50%;\r\n  background:\r\n    linear-gradient(0deg ,rgb(0 0 0/50%) 30%,#0000 0 70%,rgb(0 0 0/100%) 0) 50%/8% 100%,\r\n    linear-gradient(90deg,rgb(0 0 0/25%) 30%,#0000 0 70%,rgb(0 0 0/75% ) 0) 50%/100% 8%;\r\n  background-repeat: no-repeat;\r\n  animation: l23 1s infinite steps(12);\r\n}\r\n\r\n/* 加载动画样式 */\r\n.loader::before,\r\n.loader::after {\r\n  content: \"\";\r\n  grid-area: 1/1;\r\n  border-radius: 50%;\r\n  background: inherit;\r\n  opacity: 0.915;\r\n  transform: rotate(30deg);\r\n}\r\n\r\n/* 加载动画样式 */\r\n.loader::after {\r\n  opacity: 0.83;\r\n  transform: rotate(60deg);\r\n}\r\n\r\n/* 加载动画样式 */\r\n@keyframes l23 {\r\n  100% {transform: rotate(1turn)}\r\n}\r\n\r\n/* 将CSS链接转换为@import语句 */\r\n@import url(\"https://js.geoscene.cn/4.27/@geoscene/core/assets/geoscene/themes/light/main.css\");\r\n\r\n.car{\r\n  padding-top:3px;\r\n  left:1px;\r\n}\r\n.revert-containers{\r\n  position: absolute; /* 或使用 fixed，根据需要 */\r\n  left: 0; /* 侧边栏靠在最左边 */\r\n  top: 0; /* 根据需要调整垂直位置 */\r\n  z-index: 10; /* 确保侧边栏在其他元素上方 */\r\n  width: 30px;\r\n  height:102px;\r\n  padding-left:5px;\r\n  background-color: #FFFFFF;\r\n  border-radius: 10px; /* 设置圆角 */\r\n  -webkit-backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n}\r\n.swap-action button {\r\n  display:flex;\r\n  flex-direction: row; /* 保持水平排列 */\r\n  justify-content: flex-start; /* 水平排列的子元素靠左对齐 */\r\n  position: absolute;\r\n  left: 5px; /* 图标距离父容器左边的距离 */\r\n  top: 50%; /* 垂直居中对齐 */\r\n  transform: translateY(-50%); /* 使用transform属性垂直居中 */\r\n  border:white;/* 边框颜色设置为白色 */\r\n  padding:0px;\r\n  background-color: white;\r\n  cursor: pointer; /* 鼠标悬停时显示指针 */\r\n}\r\n\r\n.search-icon-wrapper {\r\n  display: inline-block; /* 或者使用 flex 布局 */\r\n  position: absolute; /* 绝对定位 */\r\n  left: -20px; /* 根据需要调整 */\r\n  top: 50%;\r\n  transform: translateY(-50%); /* 垂直居中对齐 */\r\n}\r\n\r\n.search-box-img {\r\n  position: absolute;\r\n  right: -140px; /* 距离输入框右侧的距离 */\r\n  top: 50%;\r\n  transform: translateY(-35%); /* 垂直居中对齐 */\r\n  z-index: 1; /* 确保图片在输入框之上 */\r\n  padding-inline-end: 0px;\r\n}\r\n\r\n.delete1 img {\r\n  pointer-events: none; /* 点击图片时不会影响输入框 （记得改成删除这个框框内容）*/\r\n}\r\n\r\n.search-action img {\r\n  transform: scale(0.85); /* 将图片缩放到原始尺寸的50% */\r\n}\r\n.search-action:hover{\r\n  border-color: blue;\r\n}\r\n\r\n</style>\r\n","import { render } from \"./IntermediatepageView.vue?vue&type=template&id=089e366e\"\nimport script from \"./IntermediatepageView.vue?vue&type=script&lang=js\"\nexport * from \"./IntermediatepageView.vue?vue&type=script&lang=js\"\n\nimport \"./IntermediatepageView.vue?vue&type=style&index=0&id=089e366e&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/*\r\nAll material copyright GeoScene, All Rights Reserved, unless otherwise specified.\r\nSee https://js.geoscene.cn/4.27/geoscene/copyright.txt for details.\r\n*/\r\nimport{_ as r}from\"../chunks/tslib.es6.js\";import{property as e}from\"../core/accessorSupport/decorators/property.js\";import\"../core/accessorSupport/ensureType.js\";import\"../core/arrayUtils.js\";import\"../core/has.js\";import{subclass as o}from\"../core/accessorSupport/decorators/subclass.js\";import{owningCollectionProperty as s}from\"../core/support/OwningCollection.js\";import t from\"./Layer.js\";import{BlendLayer as i}from\"./mixins/BlendLayer.js\";import{ScaleRangeLayer as p}from\"./mixins/ScaleRangeLayer.js\";import{GraphicsCollection as a}from\"../support/GraphicsCollection.js\";import c from\"../symbols/support/ElevationInfo.js\";let n=class extends(i(p(t))){constructor(r){super(r),this.elevationInfo=null,this.graphics=new a,this.screenSizePerspectiveEnabled=!0,this.type=\"graphics\",this.internal=!1}destroy(){this.removeAll(),this.graphics.destroy()}add(r){return this.graphics.add(r),this}addMany(r){return this.graphics.addMany(r),this}removeAll(){return this.graphics.removeAll(),this}remove(r){this.graphics.remove(r)}removeMany(r){this.graphics.removeMany(r)}on(r,e){return super.on(r,e)}graphicChanged(r){this.emit(\"graphic-update\",r)}};r([e({type:c})],n.prototype,\"elevationInfo\",void 0),r([e(s(a,\"graphics\"))],n.prototype,\"graphics\",void 0),r([e({type:[\"show\",\"hide\"]})],n.prototype,\"listMode\",void 0),r([e()],n.prototype,\"screenSizePerspectiveEnabled\",void 0),r([e({readOnly:!0})],n.prototype,\"type\",void 0),r([e({constructOnly:!0})],n.prototype,\"internal\",void 0),n=r([o(\"geoscene.layers.GraphicsLayer\")],n);const h=n;export{h as default};"],"names":["class","_createElementVNode","src","alt","style","_hoisted_6","_hoisted_11","key","_hoisted_18","_hoisted_22","_hoisted_25","id","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","onClick","_cache","args","$options","swap","title","_hoisted_7","_hoisted_8","_hoisted_9","type","$event","$setup","searchQueryStart","onInput","onSearchInputChange","placeholder","_hoisted_10","clc1","_hoisted_12","$data","searchResults","length","_hoisted_13","_renderList","result","index","selectResult","name","_hoisted_14","_createCommentVNode","_hoisted_15","_hoisted_16","searchQueryEnd","_hoisted_17","clc2","_hoisted_19","searchResultsEnd","_hoisted_20","_hoisted_21","onSearch","_hoisted_23","isLoading","_hoisted_24","_hoisted_26","_hoisted_27","setup","ref","selectedResultStart","selectedResultEnd","router","useRouter","data","mounted","this","initMap","$route","query","start","JSON","parse","end","parseUrlParams","methods","urlParams","URLSearchParams","window","location","search","startParam","get","endParam","startObj","decodeURIComponent","address","e","console","error","endObj","tempQuery","tempResult","push","path","stringify","event","isStart","target","value","searchResultsField","includes","log","fetch","method","headers","body","then","response","json","catch","simplifiedResult","wgs84_latitude","wgs84_longitude","baidu_index","baidu_latitude","baidu_longitude","label","isUpdate","shouldNavigate","navigateToResultPage","navigateToIntermediatePage","$router","replace","reload","startWithLocation","endWithLocation","axios","post","routePlanId","alert","map","Map","basemap","view","MapView","container","center","zoom","constraints","geometry","xmin","ymin","xmax","ymax","minScale","maxScale","rotationEnabled","snapToZoom","ui","move","graphicsLayer","GraphicsLayer","add","when","drawPoints","err","startPoint","Point","longitude","latitude","startGraphic","Graphic","symbol","color","size","popupTemplate","content","fieldInfos","fieldName","attributes","endPoint","endGraphic","__exports__","render","n","i","p","t","constructor","r","super","elevationInfo","graphics","a","screenSizePerspectiveEnabled","internal","destroy","removeAll","addMany","remove","removeMany","on","graphicChanged","emit","c","prototype","s","readOnly","constructOnly","o","h"],"sourceRoot":""}