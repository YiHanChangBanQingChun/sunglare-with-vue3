{"version":3,"file":"js/3191.7ceabed6.js","mappings":"oPAIA,SAASA,EAAEA,GAAG,MAAM,MAAMA,GAAG,MAAMA,GAAG,MAAMA,CAAC,CAAC,SAASC,EAAED,GAAG,MAAM,MAAMA,GAAG,MAAMA,GAAG,MAAMA,CAAC,CAAC,SAASE,EAAEF,GAAG,MAAM,MAAMA,GAAG,MAAMA,GAAG,MAAMA,CAAC,CAAC,SAASG,EAAEH,GAAG,MAAM,MAAMA,GAAG,MAAMA,GAAG,MAAMA,CAAC,CAAC,SAASI,EAAEJ,GAAG,MAAM,MAAMA,GAAG,MAAMA,GAAG,MAAMA,CAAC,CAAC,MAAMK,EAAE,CAAC,CAAC,MAAM,MAAM,OAAO,CAAC,MAAM,MAAM,OAAO,CAAC,MAAM,MAAM,QAAQC,EAAE,CAAC,CAAC,QAAQ,QAAQ,OAAO,EAAE,MAAM,OAAO,OAAO,CAAC,OAAO,KAAK,QAAQ,SAASC,EAAEP,EAAEC,GAAG,MAAMC,EAAE,GAAG,IAAIC,EAAEC,EAAE,GAAGJ,EAAE,GAAGQ,SAASP,EAAEO,OAAO,MAAM,IAAIC,MAAM,2BAA2B,MAAMJ,EAAEL,EAAEQ,OAAOF,EAAEN,EAAE,GAAGQ,OAAO,IAAID,EAAE,EAAE,IAAIJ,EAAE,EAAEA,EAAEE,EAAEF,IAAI,CAAC,IAAII,EAAE,EAAEH,EAAE,EAAEA,EAAEE,EAAEF,IAAIG,GAAGP,EAAEG,GAAGC,GAAGH,EAAEG,GAAGF,EAAEQ,KAAKH,EAAE,CAAC,OAAOL,CAAC,CAAC,SAASS,EAAEX,GAAG,MAAMC,EAAE,CAACD,EAAEE,EAAE,IAAIF,EAAEY,EAAE,IAAIZ,EAAEa,EAAE,KAAKC,KAAKd,GAAGA,GAAG,OAAOA,EAAE,QAAQA,EAAE,MAAM,QAAQ,MAAME,EAAEK,EAAEF,EAAEJ,GAAG,MAAM,CAACc,EAAE,IAAIb,EAAE,GAAGc,EAAE,IAAId,EAAE,GAAGe,EAAE,IAAIf,EAAE,GAAG,CAAC,SAASgB,EAAElB,GAAG,MAAMC,EAAEM,EAAED,EAAE,CAACN,EAAEe,EAAE,IAAIf,EAAEgB,EAAE,IAAIhB,EAAEiB,EAAE,MAAMH,KAAKd,IAAI,MAAMC,EAAED,GAAG,SAAS,MAAMA,EAAE,MAAMA,IAAI,EAAE,KAAK,KAAK,OAAOmB,KAAKC,IAAI,EAAED,KAAKE,IAAIpB,EAAE,GAAG,IAAI,MAAM,CAACC,EAAEiB,KAAKG,MAAM,IAAIrB,EAAE,IAAIW,EAAEO,KAAKG,MAAM,IAAIrB,EAAE,IAAIY,EAAEM,KAAKG,MAAM,IAAIrB,EAAE,IAAI,CAAC,SAASsB,EAAEvB,GAAG,MAAMC,EAAE,CAACD,EAAEe,EAAE,OAAOf,EAAEgB,EAAE,IAAIhB,EAAEiB,EAAE,SAASH,KAAKd,GAAGA,GAAG,EAAE,KAAK,EAAEA,IAAI,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAEA,EAAE,EAAE,KAAK,MAAM,CAACwB,EAAE,IAAIvB,EAAE,GAAG,GAAGM,EAAE,KAAKN,EAAE,GAAGA,EAAE,IAAIY,EAAE,KAAKZ,EAAE,GAAGA,EAAE,IAAI,CAAC,SAASwB,EAAEzB,GAAG,MAAMC,EAAED,EAAEwB,EAAEtB,EAAE,EAAED,EAAE,IAAI,IAAID,EAAEO,EAAE,KAAKN,EAAE,IAAI,KAAKA,EAAE,IAAI,IAAID,EAAEa,EAAE,KAAKC,KAAKd,GAAGA,EAAE,EAAE,GAAGA,GAAG,EAAE,GAAG,EAAE,KAAK,GAAGA,EAAE,EAAE,MAAM,MAAM,CAACe,EAAE,OAAOb,EAAE,GAAGc,EAAE,IAAId,EAAE,GAAGe,EAAE,QAAQf,EAAE,GAAG,CAAC,SAASW,EAAEb,GAAG,MAAMC,EAAED,EAAEwB,EAAEtB,EAAEF,EAAEO,EAAEJ,EAAEH,EAAEa,EAAET,EAAEe,KAAKO,KAAKxB,EAAEA,EAAEC,EAAEA,GAAG,IAAIE,EAAEc,KAAKQ,MAAMxB,EAAED,GAAG,OAAOG,EAAEA,EAAE,EAAEA,EAAEA,EAAE,EAAEc,KAAKS,GAAG,CAACJ,EAAEvB,EAAEK,EAAEF,EAAEc,EAAEb,EAAE,CAAC,SAASmB,EAAExB,GAAG,MAAMC,EAAED,EAAEwB,EAAEtB,EAAEF,EAAEM,EAAEH,EAAEH,EAAEkB,EAAE,MAAM,CAACM,EAAEvB,EAAEM,EAAEL,EAAEiB,KAAKU,IAAI1B,GAAGU,EAAEX,EAAEiB,KAAKW,IAAI3B,GAAG,CAAC,SAASS,EAAEZ,GAAG,OAAOuB,EAAEZ,EAAEX,GAAG,CAAC,SAAS+B,EAAE/B,GAAG,OAAOkB,EAAEO,EAAEzB,GAAG,CAAC,SAASgC,EAAEhC,GAAG,OAAOa,EAAEU,EAAEZ,EAAEX,IAAI,CAAC,SAASiC,EAAEjC,GAAG,OAAOkB,EAAEO,EAAED,EAAExB,IAAI,CAAC,SAASe,EAAEf,GAAG,MAAMC,EAAED,EAAEE,EAAEA,EAAEF,EAAEY,EAAET,EAAEH,EAAEa,EAAET,EAAEe,KAAKE,IAAIpB,EAAEC,EAAEC,GAAGE,EAAED,EAAEe,KAAKC,IAAInB,EAAEC,EAAEC,GAAG,IAAIG,EAAEF,EAAEG,EAAE,IAAIF,EAAE,EAAED,IAAIH,GAAGC,EAAEC,GAAGE,EAAE,EAAED,IAAIF,GAAGC,EAAEF,GAAGI,EAAE,GAAGJ,EAAEC,GAAGG,EAAE,EAAEM,EAAE,IAAIN,EAAE,EAAEA,EAAEC,EAAE,OAAOC,EAAE,IAAIA,GAAG,GAAGA,GAAG,GAAGI,GAAG,IAAIL,GAAG,IAAI,IAAI,CAACY,EAAEX,EAAEgB,EAAEZ,EAAEuB,EAAE5B,EAAE,CAAC,SAAS6B,EAAEnC,GAAG,MAAMC,GAAGD,EAAEkB,EAAE,KAAK,IAAI,GAAGhB,EAAEF,EAAEuB,EAAE,IAAIpB,EAAEH,EAAEkC,EAAE,IAAI,IAAI9B,EAAED,EAAED,EAAEG,EAAED,GAAG,EAAEe,KAAKiB,IAAInC,EAAE,EAAE,IAAI,IAAIK,EAAE,OAAOa,KAAKkB,MAAMpC,IAAI,KAAK,EAAEK,EAAE,CAACJ,EAAEE,EAAEQ,EAAEP,EAAEQ,EAAE,GAAG,MAAM,KAAK,EAAEP,EAAE,CAACJ,EAAEG,EAAEO,EAAER,EAAES,EAAE,GAAG,MAAM,KAAK,EAAEP,EAAE,CAACJ,EAAE,EAAEU,EAAER,EAAES,EAAER,GAAG,MAAM,KAAK,EAAEC,EAAE,CAACJ,EAAE,EAAEU,EAAEP,EAAEQ,EAAET,GAAG,MAAM,KAAK,EAAEE,EAAE,CAACJ,EAAEG,EAAEO,EAAE,EAAEC,EAAET,GAAG,MAAM,KAAK,EAAE,KAAK,EAAEE,EAAE,CAACJ,EAAEE,EAAEQ,EAAE,EAAEC,EAAER,GAAG,MAAM,QAAQC,EAAE,CAACJ,EAAE,EAAEU,EAAE,EAAEC,EAAE,GAAG,OAAOP,EAAEJ,EAAEiB,KAAKG,MAAMhB,EAAEJ,EAAEC,EAAEC,GAAGE,EAAEM,EAAEO,KAAKG,MAAMhB,EAAEM,EAAET,EAAEC,GAAGE,EAAEO,EAAEM,KAAKG,MAAMhB,EAAEO,EAAEV,EAAEC,GAAGE,CAAC,CAAC,SAASgC,EAAEjC,GAAG,OAAOL,EAAEK,GAAGA,EAAEF,EAAEE,GAAG4B,EAAE5B,GAAGH,EAAEG,GAAG0B,EAAE1B,GAAGD,EAAEC,GAAGa,EAAEb,GAAGJ,EAAEI,GAAG8B,EAAE9B,GAAGA,CAAC,CAAC,SAASW,EAAEhB,GAAG,OAAGC,EAAED,GAAUA,EAASe,EAAEuB,EAAEtC,GAAG,CAAC,SAASiB,EAAEjB,GAAG,OAAOE,EAAEF,GAAGA,EAAEY,EAAE0B,EAAEtC,GAAG,CAAC,SAASkC,EAAElC,GAAG,OAAOG,EAAEH,GAAGA,EAAEgC,EAAEM,EAAEtC,GAAG,C,sRCA75C,MAAMuC,EAAEC,sBAAAA,CAAuBtC,GAAG,MAAMD,EAAEI,EAAAA,EAAEoC,SAASvC,EAAEwC,YAAYnB,GAAEpB,EAAAA,EAAAA,IAAEF,EAAEC,EAAEyC,MAAM,OAAOC,QAAQC,QAAQ,MAAMtB,EAAEA,EAAEuB,SAAS,KAAK,CAACC,2BAAAA,CAA4B7C,GAAG,MAAMD,EAAEI,EAAAA,EAAEoC,SAASvC,EAAEwC,YAAYnB,GAAEE,EAAAA,EAAAA,IAAExB,GAAG,OAAO2C,QAAQC,QAAQtB,EAAE,CAAC,YAAMyB,CAAO9C,GAAG,MAAMG,QAAQJ,EAAAA,EAAAA,GAAEC,EAAE+C,KAAK/C,EAAEgD,SAAS,OAAO7C,GAAGA,EAAEyC,QAAQ,CAACK,SAAAA,CAAUjD,GAAGA,EAAEwC,WAAWrC,EAAAA,EAAEoC,SAASvC,EAAEwC,YAAYxC,EAAEkD,OAAOlD,EAAEkD,OAAOlC,EAAAA,EAAEuB,SAASvC,EAAEkD,QAAQ,KAAK,MAAMnD,EAAEoD,KAAKC,WAAWH,UAAUjD,GAAG,OAAO0C,QAAQC,QAAQ,MAAM5C,EAAEA,EAAE6C,SAAS,KAAK,CAAC,sBAAMS,CAAiBrD,GAAGmD,KAAKC,WAAWtC,EAAAA,EAAEyB,SAASvC,EAAEsD,gBAAgBtD,EAAEuD,YAAY,kBAAkBJ,KAAKC,YAAYI,aAAaf,OAAOU,KAAKC,WAAWI,aAAaD,WAAWvD,EAAEuD,WAAW,CAAC,0BAAME,CAAqBzD,GAAGmD,KAAKO,gBAAerD,EAAAA,EAAAA,IAAEL,EAAE2D,mBAAmB,CAAC,aAAMC,CAAQ5D,GAAG,MAAMD,EAAEoD,KAAKO,eAAeE,QAAQ,CAACV,OAAOlC,EAAAA,EAAEuB,SAASvC,EAAEkD,QAAQW,mBAAmB7D,EAAE6D,mBAAmBjD,KAAKZ,GAAG,MAAMA,EAAEG,EAAAA,EAAEoC,SAASvC,GAAG,OAAO8D,kBAAkB9D,EAAE8D,mBAAmBlD,KAAKZ,GAAG,MAAMA,EAAE+D,EAAAA,EAAExB,SAASvC,GAAG,OAAOgE,iBAAiBhE,EAAEgE,mBAAmB,OAAO,MAAMjE,EAAEA,EAAE6C,SAAS,IAAI,CAACqB,OAAAA,CAAQjE,GAAG,MAAMD,EAAEoD,KAAKC,WAAWc,cAAc/D,EAAAA,EAAEoC,SAASvC,EAAEmE,eAAenE,EAAEoE,eAAe,OAAO1B,QAAQC,QAAQ,MAAM5C,GAAGA,EAAE6C,SAAS,CAACyB,4BAAAA,CAA6BrE,GAAG,MAAMD,GAAEqC,EAAAA,EAAAA,IAAEjC,EAAAA,EAAEoC,SAASvC,EAAEmE,gBAAgB,OAAOzB,QAAQC,QAAQ5C,EAAE,CAACuE,KAAAA,CAAMtE,GAAG,MAAMD,GAAEsB,EAAAA,EAAAA,IAAElB,EAAAA,EAAEoC,SAASvC,EAAEmE,eAAenE,EAAEuE,SAASvE,EAAEwE,qBAAqB,OAAOzE,GAAGA,EAAE0E,SAAS,CAACzE,EAAEG,KAAKJ,EAAE2E,IAAIvE,EAAEH,GAAG4C,SAAS,IAAIF,QAAQC,QAAQ5C,EAAE,CAAC,wBAAM4E,CAAmB3E,GAAG,MAAMD,EAAEC,EAAE4E,eAAehE,KAAKZ,GAAGA,EAAE,IAAIG,EAAAA,EAAEH,GAAG,OAAOqB,GAAEnB,EAAAA,EAAAA,IAAEH,EAAEC,EAAE6E,cAAc,CAACC,YAAY9E,EAAE8E,YAAYC,cAAc/E,EAAE+E,cAAcC,WAAWhF,EAAEgF,WAAWC,SAASjF,EAAEiF,WAAW,IAAI5E,EAAEiB,EAAED,EAAE,OAAOrB,EAAEkF,QAAQ5D,GAAEb,EAAAA,EAAAA,IAAEY,EAAErB,EAAEmF,cAAcnF,EAAEkF,MAAMlF,EAAEoF,cAAcpF,EAAEqF,gBAAgBrF,EAAEsF,mBAAmBtF,EAAEuF,UAAUlF,GAAEP,EAAAA,EAAAA,IAAEE,EAAEmF,cAAcnF,EAAEuF,SAASjE,GAAEkE,EAAAA,EAAAA,IAAElE,EAAEtB,EAAEyF,KAAK,YAAY,gBAAgBpF,IAAI,CAACmC,WAAWlB,GAAGsB,SAAS8C,qBAAqBrF,EAAE,CAAC,oBAAMsF,CAAe3F,EAAEG,GAAG,MAAMJ,EAAE,CAACgD,KAAK,IAAI6C,aAAa5F,EAAE6F,SAASC,QAAQC,KAAK,IAAIC,WAAWhG,EAAE6F,SAASI,YAAYC,MAAMlG,EAAE6F,SAASK,MAAMC,OAAOnG,EAAE6F,SAASM,SAASC,WAAW/E,EAAEgF,UAAUnG,SAASW,EAAAA,EAAAA,IAAEb,EAAEsG,SAAStG,EAAEuG,mBAAmBxG,EAAEI,EAAEqG,QAAQ,MAAM,CAACC,OAAO,CAACC,aAAarF,EAAEyE,OAAOa,YAAYzG,EAAE4F,QAAQc,aAAa,CAACvF,EAAEyE,OAAO5F,EAAE4F,QAAQ,CAAC,6BAAMe,CAAwB1G,GAAG,MAAMJ,EAAEiB,EAAAA,EAAEuB,SAASpC,EAAE2G,iBAAiBzF,EAAEL,EAAAA,EAAEuB,SAASpC,EAAE4G,iBAAiB,IAAI7G,EAAE,KAAKC,EAAE6G,2BAA2B9G,EAAE,IAAIF,EAAAA,EAAE,CAACiH,MAAM9G,EAAE6G,6BAA6B7G,EAAE+G,iBAAgB5F,EAAAA,EAAAA,IAAEvB,EAAEoH,iBAAiB9F,EAAE8F,iBAAiBjH,WAAW4B,EAAAA,EAAAA,MAAI,MAAMrB,EAAEN,EAAEiH,iBAAgBrF,EAAAA,EAAAA,GAAE5B,EAAEiH,iBAAiB,KAAK,OAAOhH,EAAAA,EAAAA,IAAE,IAAID,EAAE2G,gBAAgB/G,EAAEgH,gBAAgB1F,EAAEgG,oBAAoBnH,EAAEkH,gBAAgB3G,GAAG,E","sources":["webpack://sun-glare-project/./node_modules/@geoscene/core/core/colorUtils.js","webpack://sun-glare-project/./node_modules/@geoscene/core/layers/support/RasterWorker.js"],"sourcesContent":["/*\r\nAll material copyright GeoScene, All Rights Reserved, unless otherwise specified.\r\nSee https://js.geoscene.cn/4.27/geoscene/copyright.txt for details.\r\n*/\r\nfunction n(n){return\"r\"in n&&\"g\"in n&&\"b\"in n}function t(n){return\"h\"in n&&\"s\"in n&&\"v\"in n}function r(n){return\"l\"in n&&\"a\"in n&&\"b\"in n}function u(n){return\"l\"in n&&\"c\"in n&&\"h\"in n}function o(n){return\"x\"in n&&\"y\"in n&&\"z\"in n}const e=[[.4124,.3576,.1805],[.2126,.7152,.0722],[.0193,.1192,.9505]],c=[[3.2406,-1.5372,-.4986],[-.9689,1.8758,.0415],[.0557,-.204,1.057]];function a(n,t){const r=[];let u,o;if(n[0].length!==t.length)throw new Error(\"dimensions do not match\");const e=n.length,c=n[0].length;let a=0;for(u=0;u<e;u++){for(a=0,o=0;o<c;o++)a+=n[u][o]*t[o];r.push(a)}return r}function i(n){const t=[n.r/255,n.g/255,n.b/255].map((n=>n<=.04045?n/12.92:((n+.055)/1.055)**2.4)),r=a(e,t);return{x:100*r[0],y:100*r[1],z:100*r[2]}}function h(n){const t=a(c,[n.x/100,n.y/100,n.z/100]).map((n=>{const t=n<=.0031308?12.92*n:1.055*n**(1/2.4)-.055;return Math.min(1,Math.max(t,0))}));return{r:Math.round(255*t[0]),g:Math.round(255*t[1]),b:Math.round(255*t[2])}}function s(n){const t=[n.x/95.047,n.y/100,n.z/108.883].map((n=>n>(6/29)**3?n**(1/3):1/3*(29/6)**2*n+4/29));return{l:116*t[1]-16,a:500*(t[0]-t[1]),b:200*(t[1]-t[2])}}function f(n){const t=n.l,r=[(t+16)/116+n.a/500,(t+16)/116,(t+16)/116-n.b/200].map((n=>n>6/29?n**3:3*(6/29)**2*(n-4/29)));return{x:95.047*r[0],y:100*r[1],z:108.883*r[2]}}function b(n){const t=n.l,r=n.a,u=n.b,o=Math.sqrt(r*r+u*u);let e=Math.atan2(u,r);return e=e>0?e:e+2*Math.PI,{l:t,c:o,h:e}}function l(n){const t=n.l,r=n.c,u=n.h;return{l:t,a:r*Math.cos(u),b:r*Math.sin(u)}}function g(n){return s(i(n))}function M(n){return h(f(n))}function m(n){return b(s(i(n)))}function d(n){return h(f(l(n)))}function x(n){const t=n.r,r=n.g,u=n.b,o=Math.max(t,r,u),e=o-Math.min(t,r,u);let c=o,a=0===e?0:o===t?(r-u)/e%6:o===r?(u-t)/e+2:(t-r)/e+4,i=0===e?0:e/c;return a<0&&(a+=6),a*=60,i*=100,c*=100/255,{h:a,s:i,v:c}}function k(n){const t=(n.h+360)%360/60,r=n.s/100,u=n.v/100*255,o=u*r,e=o*(1-Math.abs(t%2-1));let c;switch(Math.floor(t)){case 0:c={r:o,g:e,b:0};break;case 1:c={r:e,g:o,b:0};break;case 2:c={r:0,g:o,b:e};break;case 3:c={r:0,g:e,b:o};break;case 4:c={r:e,g:0,b:o};break;case 5:case 6:c={r:o,g:0,b:e};break;default:c={r:0,g:0,b:0}}return c.r=Math.round(c.r+u-o),c.g=Math.round(c.g+u-o),c.b=Math.round(c.b+u-o),c}function p(e){return n(e)?e:u(e)?d(e):r(e)?M(e):o(e)?h(e):t(e)?k(e):e}function y(n){if(t(n))return n;return x(p(n))}function z(n){return r(n)?n:g(p(n))}function v(n){return u(n)?n:m(p(n))}function w(n){return o(n)?n:i(p(n))}export{y as toHSV,z as toLAB,v as toLCH,p as toRGB,w as toXYZ};","/*\r\nAll material copyright GeoScene, All Rights Reserved, unless otherwise specified.\r\nSee https://js.geoscene.cn/4.27/geoscene/copyright.txt for details.\r\n*/\r\nimport\"../../geometry.js\";import r from\"../../geometry/support/GeographicTransformation.js\";import e from\"./PixelBlock.js\";import{decode as t}from\"./rasterFormats/RasterCodec.js\";import{split as s,mosaic as o,approximateTransform as i,getLocalArithmeticNorthRotations as n}from\"./rasterFunctions/pixelUtils.js\";import{create as a}from\"./rasterFunctions/rasterFunctionHelper.js\";import{requirePE as l,load as m,getProjectionOffsetGrid as c}from\"./rasterFunctions/rasterProjectionHelper.js\";import{computeStatisticsHistograms as f,estimateStatisticsHistograms as p}from\"./rasterFunctions/stretchUtils.js\";import{convertVectorFieldData as u,convertToLocalDirections as S}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as d}from\"./rasterTransforms/utils.js\";import y from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as x}from\"../../views/2d/engine/flow/dataUtils.js\";import h from\"../../geometry/Extent.js\";import O from\"../../geometry/Point.js\";class N{convertVectorFieldData(r){const t=e.fromJSON(r.pixelBlock),s=u(t,r.type);return Promise.resolve(null!=s?s.toJSON():null)}computeStatisticsHistograms(r){const t=e.fromJSON(r.pixelBlock),s=f(t);return Promise.resolve(s)}async decode(r){const e=await t(r.data,r.options);return e&&e.toJSON()}symbolize(r){r.pixelBlock=e.fromJSON(r.pixelBlock),r.extent=r.extent?h.fromJSON(r.extent):null;const t=this.symbolizer.symbolize(r);return Promise.resolve(null!=t?t.toJSON():null)}async updateSymbolizer(r){this.symbolizer=y.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}async updateRasterFunction(r){this.rasterFunction=a(r.rasterFunctionJSON)}async process(r){const t=this.rasterFunction.process({extent:h.fromJSON(r.extent),primaryPixelBlocks:r.primaryPixelBlocks.map((r=>null!=r?e.fromJSON(r):null)),primaryPixelSizes:r.primaryPixelSizes?.map((r=>null!=r?O.fromJSON(r):null)),primaryRasterIds:r.primaryRasterIds});return null!=t?t.toJSON():null}stretch(r){const t=this.symbolizer.simpleStretch(e.fromJSON(r.srcPixelBlock),r.stretchParams);return Promise.resolve(null!=t&&t.toJSON())}estimateStatisticsHistograms(r){const t=p(e.fromJSON(r.srcPixelBlock));return Promise.resolve(t)}split(r){const t=s(e.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return t&&t.forEach(((r,e)=>{t.set(e,r?.toJSON())})),Promise.resolve(t)}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new e(r):null)),s=o(t,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let a,l=s;return r.coefs&&(l=i(s,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(a=n(r.destDimension,r.gcsGrid),l=S(l,r.isUV?\"vector-uv\":\"vector-magdir\",a)),{pixelBlock:l?.toJSON(),localNorthDirections:a}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await x(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(e){const t=h.fromJSON(e.projectedExtent),s=h.fromJSON(e.srcBufferExtent);let o=null;e.datumTransformationSteps&&(o=new r({steps:e.datumTransformationSteps})),(e.includeGCSGrid||l(t.spatialReference,s.spatialReference,o))&&await m();const i=e.rasterTransform?d(e.rasterTransform):null;return c({...e,projectedExtent:t,srcBufferExtent:s,datumTransformation:o,rasterTransform:i})}}export{N as default};"],"names":["n","t","r","u","o","e","c","a","length","Error","push","i","g","b","map","x","y","z","h","Math","min","max","round","s","l","f","sqrt","atan2","PI","cos","sin","M","m","d","v","k","abs","floor","p","N","convertVectorFieldData","fromJSON","pixelBlock","type","Promise","resolve","toJSON","computeStatisticsHistograms","decode","data","options","symbolize","extent","this","symbolizer","updateSymbolizer","symbolizerJSON","histograms","rendererJSON","updateRasterFunction","rasterFunction","rasterFunctionJSON","process","primaryPixelBlocks","primaryPixelSizes","O","primaryRasterIds","stretch","simpleStretch","srcPixelBlock","stretchParams","estimateStatisticsHistograms","split","tileSize","maximumPyramidLevel","forEach","set","mosaicAndTransform","srcPixelBlocks","srcMosaicSize","blockWidths","alignmentInfo","clipOffset","clipSize","coefs","destDimension","sampleSpacing","interpolation","projectDirections","gcsGrid","S","isUV","localNorthDirections","createFlowMesh","Float32Array","flowData","buffer","mask","Uint8Array","maskBuffer","width","height","vertexData","indexData","meshType","simulationSettings","signal","result","vertexBuffer","indexBuffer","transferList","getProjectionOffsetGrid","projectedExtent","srcBufferExtent","datumTransformationSteps","steps","includeGCSGrid","spatialReference","rasterTransform","datumTransformation"],"sourceRoot":""}