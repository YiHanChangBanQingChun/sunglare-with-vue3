"use strict";(self["webpackChunksun_glare_project"]=self["webpackChunksun_glare_project"]||[]).push([[6017],{32569:function(e,t,i){i.d(t,{Z:function(){return a}});var s=i(6356),r=i(73719);class a extends s.A{constructor(){super(...arguments),this._prevFBO=void 0,this.requiresDedicatedFBO=!1}dispose(){}doRender(e){const t=this.createRenderParams(e),{context:i,painter:s,profiler:a}=t;this._prevFBO=i.getBoundFramebufferObject(),a.recordContainerStart(this.name);const n=this._getFbo(t),l=s.getRenderTarget();i.bindFramebuffer(n),s.setRenderTarget(n),i.setDepthWriteEnabled(!0),i.setColorMask(!0,!0,!0,!0),i.setClearColor(0,0,0,0),i.setClearDepth(1),i.clear(i.gl.COLOR_BUFFER_BIT|i.gl.DEPTH_BUFFER_BIT),i.setDepthWriteEnabled(!1);for(const r of this.children)r.beforeRender(e);for(const r of this.children)r.processRender(t);for(const r of this.children)r.afterRender(e);s.setRenderTarget(l),s.releaseFbo(n),i.bindFramebuffer(this._prevFBO),s.beforeRenderLayer(t,this._clippingInfos?255:0,this.computedOpacity),n.colorTexture&&(i.setStencilTestEnabled(!1),i.setStencilWriteMask(0),s.blitTexture(i,n.colorTexture,r.Cj.NEAREST)),s.compositeLayer(t,this.computedOpacity),a.recordContainerEnd()}createRenderParams(e){return{...super.createRenderParams(e),blendMode:this.blendMode,effects:this.computedEffects,globalOpacity:1}}_getFbo(e){const{context:t,painter:i}=e,{width:s,height:r}=t.getViewport();return i.acquireFbo(s,r)}}},26017:function(e,t,i){i.r(t),i.d(t,{default:function(){return v}});var s=i(71457),r=(i(15114),i(37679),i(69292),i(51020),i(47966),i(29916)),a=i(32569),n=i(15235),l=i(41879),o=i(89921),h=i(87400),p=i(76543),d=i(48278);let c=class extends d.A{constructor(e){super(e),this.type="group",this.layerViews=new l.A}destroy(){this.handles.removeAll(),this.layerViews.length=0}_allLayerViewVisibility(e){this.layerViews.forEach((t=>{t.visible=e}))}initialize(){this.handles.add([this.layerViews.on("change",(e=>this._layerViewsChangeHandler(e))),(0,h.wB)((()=>this.layer?.visibilityMode),(()=>{this.layer&&this._applyVisibility((()=>this._allLayerViewVisibility(this.visible)),(()=>this._applyExclusiveVisibility(null)))}),h.OH),(0,h.wB)((()=>this.visible),(e=>{this._applyVisibility((()=>this._allLayerViewVisibility(e)),(()=>{}))}),h.OH)],"grouplayerview"),this._layerViewsChangeHandler({target:null,added:this.layerViews.toArray(),removed:[],moved:[]})}set layerViews(e){this._set("layerViews",(0,o.V)(e,this._get("layerViews")))}get updatingProgress(){return 0===this.layerViews.length?1:this.layerViews.reduce(((e,t)=>e+t.updatingProgress),0)/this.layerViews.length}isUpdating(){return this.layerViews.some((e=>e.updating))}_hasLayerViewVisibleOverrides(){return this.layerViews.some((e=>e._isOverridden("visible")))}_findLayerViewForLayer(e){return e&&this.layerViews.find((t=>t.layer===e))}_firstVisibleOnLayerOrder(){const e=this.layer.layers.find((e=>{const t=this._findLayerViewForLayer(e);return!!t?.visible}));return e&&this._findLayerViewForLayer(e)}_applyExclusiveVisibility(e){null==e&&null==(e=this._firstVisibleOnLayerOrder())&&this.layerViews.length>0&&(e=this._findLayerViewForLayer(this.layer.layers.at(0))),this.layerViews.forEach((t=>{t.visible=t===e}))}_layerViewsChangeHandler(e){this.handles.remove("grouplayerview:visible"),this.handles.add(this.layerViews.map((e=>(0,h.wB)((()=>e.visible),(t=>this._applyVisibility((()=>{t!==this.visible&&(e.visible=this.visible)}),(()=>this._applyExclusiveVisibility(t?e:null)))),h.OH))).toArray(),"grouplayerview:visible");const t=e.added[e.added.length-1];this._applyVisibility((()=>this._allLayerViewVisibility(this.visible)),(()=>this._applyExclusiveVisibility(t?.visible?t:null)))}_applyVisibility(e,t){this._hasLayerViewVisibleOverrides()&&("inherited"===this.layer?.visibilityMode?e():"exclusive"===this.layer?.visibilityMode&&t())}};(0,s._)([(0,p.MZ)({cast:o.H})],c.prototype,"layerViews",null),(0,s._)([(0,p.MZ)({readOnly:!0})],c.prototype,"updatingProgress",null),(0,s._)([(0,p.MZ)()],c.prototype,"view",void 0),c=(0,s._)([(0,r.$)("geoscene.views.layers.GroupLayerView")],c);const u=c;let y=class extends((0,n.e)(u)){constructor(){super(...arguments),this.container=new a.Z}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",(()=>this._updateStageChildren())))}detach(){this.container.removeAllChildren()}update(e){}moveStart(){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach(((e,t)=>this.container.addChildAt(e.container,t)))}};y=(0,s._)([(0,r.$)("geoscene.views.2d.layers.GroupLayerView2D")],y);const v=y},15235:function(e,t,i){i.d(t,{e:function(){return C}});var s=i(71457),r=i(41879),a=i(89921),n=i(47966),l=i(87400),o=i(76543),h=(i(37679),i(69292),i(51020),i(29916)),p=i(57138),d=i(1110),c=i(28920);let u=class extends c.oY{get version(){return this.commitVersionProperties(),(this._get("version")||0)+1}};(0,s._)([(0,o.MZ)({readOnly:!0})],u.prototype,"version",null),u=(0,s._)([(0,h.$)("geoscene.views.layers.support.ClipArea")],u);const y=u;var v;let g=v=class extends y{constructor(e){super(e),this.type="rect",this.left=null,this.right=null,this.top=null,this.bottom=null}clone(){return new v({left:this.left,right:this.right,top:this.top,bottom:this.bottom})}commitVersionProperties(){this.commitProperty("left"),this.commitProperty("right"),this.commitProperty("top"),this.commitProperty("bottom")}};(0,s._)([(0,o.MZ)({type:[Number,String],json:{write:!0}})],g.prototype,"left",void 0),(0,s._)([(0,o.MZ)({type:[Number,String],json:{write:!0}})],g.prototype,"right",void 0),(0,s._)([(0,o.MZ)({type:[Number,String],json:{write:!0}})],g.prototype,"top",void 0),(0,s._)([(0,o.MZ)({type:[Number,String],json:{write:!0}})],g.prototype,"bottom",void 0),g=v=(0,s._)([(0,h.$)("geoscene.views.layers.support.ClipRect")],g);const w=g;i(2516);var f,b=i(88679),_=i(55772),m=i(41759),V=i(9737);const R={base:b.A,key:"type",typeMap:{extent:m.A,polygon:V.A}};let M=f=class extends y{constructor(e){super(e),this.type="geometry",this.geometry=null}clone(){return new f({geometry:this.geometry?.clone()??null})}commitVersionProperties(){this.commitProperty("geometry")}};(0,s._)([(0,o.MZ)({types:R,json:{read:_.rS,write:!0}})],M.prototype,"geometry",void 0),M=f=(0,s._)([(0,h.$)("geoscene.views.layers.support.Geometry")],M);const S=M;let O=class extends y{constructor(e){super(e),this.type="path",this.path=[]}commitVersionProperties(){this.commitProperty("path")}};(0,s._)([(0,o.MZ)({type:[[[Number]]],json:{write:!0}})],O.prototype,"path",void 0),O=(0,s._)([(0,h.$)("geoscene.views.layers.support.Path")],O);const A=O,Z=r.A.ofType({key:"type",base:null,typeMap:{rect:w,path:A,geometry:S}}),C=e=>{let t=class extends e{constructor(){super(...arguments),this.attached=!1,this.clips=new Z,this.lastUpdateId=-1,this.moving=!1,this.updateRequested=!1,this.visibleAtCurrentScale=!1,this.highlightOptions=null}initialize(){const e=this.view?.spatialReferenceLocked??!0,t=this.view?.spatialReference;t&&e&&!this.spatialReferenceSupported?this.addResolvingPromise(Promise.reject(new n.A("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer}))):(this.container||(this.container=new p.m),this.container.fadeTransitionEnabled=!0,this.container.visible=!1,this.container.endTransitions(),this.addHandles([(0,l.wB)((()=>this.suspended),(e=>{this.container&&(this.container.visible=!e),this.view&&!e&&this.updateRequested&&this.view.requestUpdate()}),l.pc),(0,l.wB)((()=>this.layer?.opacity??1),(e=>{this.container&&(this.container.opacity=e)}),l.pc),(0,l.wB)((()=>this.layer&&"blendMode"in this.layer?this.layer.blendMode:"normal"),(e=>{this.container&&(this.container.blendMode=e)}),l.pc),(0,l.wB)((()=>this.layer&&"effect"in this.layer?this.layer.effect:null),(e=>{this.container&&(this.container.effect=e)}),l.pc),(0,l.wB)((()=>this.highlightOptions),(e=>this.container.highlightOptions=e),l.pc),(0,l.on)((()=>this.clips),"change",(()=>{this.container&&(this.container.clips=this.clips)}),l.pc),(0,l.wB)((()=>({scale:this.view?.scale,scaleRange:this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null})),(({scale:e})=>{const t=null!=e&&this.isVisibleAtScale(e);t!==this.visibleAtCurrentScale&&this._set("visibleAtCurrentScale",t)}),l.pc)],"constructor"),this.view?.whenLayerView?this.view.whenLayerView(this.layer).then((e=>{e===this&&this.processAttach()}),(()=>{})):this.when().then((()=>{this.processAttach()}),(()=>{})))}destroy(){this.processDetach(),this.updateRequested=!1}get spatialReferenceSupported(){const e=this.view?.spatialReference;return null==e||this.supportsSpatialReference(e)}get updating(){return this.spatialReferenceSupported&&(!this.attached||!this.suspended&&(this.updateRequested||this.isUpdating())||!!this.updatingHandles?.updating)}processAttach(){this.isResolved()&&!this.attached&&!this.destroyed&&this.spatialReferenceSupported&&(this.attach(),this.attached=!0,this.requestUpdate())}processDetach(){this.attached&&(this.attached=!1,this.removeHandles("attach"),this.detach(),this.updateRequested=!1)}isVisibleAtScale(e){const t=this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null;if(!t)return!0;const{minScale:i,maxScale:s}=t;return(0===i||e<=i)&&(0===s||e>=s)}requestUpdate(){this.destroyed||this.updateRequested||(this.updateRequested=!0,this.suspended||this.view.requestUpdate())}processUpdate(e){!this.isFulfilled()||this.isResolved()?(this._set("updateParameters",e),this.updateRequested&&!this.suspended&&(this.updateRequested=!1,this.update(e))):this.updateRequested=!1}hitTest(e,t){return Promise.resolve(null)}supportsSpatialReference(e){return!0}canResume(){return!!this.spatialReferenceSupported&&!!super.canResume()&&this.visibleAtCurrentScale}getSuspendInfo(){const e=super.getSuspendInfo(),t=!this.spatialReferenceSupported,i=this.visibleAtCurrentScale;return t&&(e.spatialReferenceNotSupported=t),i&&(e.outsideScaleRange=i),e}addAttachHandles(e){this.addHandles(e,"attach")}};return(0,s._)([(0,o.MZ)()],t.prototype,"attached",void 0),(0,s._)([(0,o.MZ)({type:Z,set(e){const t=(0,a.V)(e,this._get("clips"),Z);this._set("clips",t)}})],t.prototype,"clips",void 0),(0,s._)([(0,o.MZ)()],t.prototype,"container",void 0),(0,s._)([(0,o.MZ)()],t.prototype,"moving",void 0),(0,s._)([(0,o.MZ)({readOnly:!0})],t.prototype,"spatialReferenceSupported",null),(0,s._)([(0,o.MZ)({readOnly:!0})],t.prototype,"updateParameters",void 0),(0,s._)([(0,o.MZ)()],t.prototype,"updateRequested",void 0),(0,s._)([(0,o.MZ)()],t.prototype,"updating",null),(0,s._)([(0,o.MZ)()],t.prototype,"view",void 0),(0,s._)([(0,o.MZ)({readOnly:!0})],t.prototype,"visibleAtCurrentScale",void 0),(0,s._)([(0,o.MZ)({type:d.A})],t.prototype,"highlightOptions",void 0),t=(0,s._)([(0,h.$)("geoscene.views.2d.layers.LayerView2D")],t),t}},48278:function(e,t,i){i.d(t,{A:function(){return u}});var s=i(71457),r=i(3734),a=i(20573),n=i(45477),l=i(49778),o=i(15114),h=i(80473),p=i(76543),d=(i(37679),i(69292),i(51020),i(29916));let c=class extends((0,n.$)((0,l.sA)((0,h.g)(a.A.EventedMixin(r.A))))){constructor(e){super(e),this.layer=null,this.parent=null}initialize(){this.when().catch((e=>{if("layerview:create-error"!==e.name){const t=this.layer&&this.layer.id||"no id",i=this.layer&&this.layer.title||"no title";o.A.getLogger(this).error("#resolve()",`Failed to resolve layer view (layer title: '${i}', id: '${t}')`,e)}}))}get fullOpacity(){return(this.layer?.opacity??1)*(this.parent?.fullOpacity??1)}get suspended(){return!this.canResume()}get suspendInfo(){return this.getSuspendInfo()}get legendEnabled(){return!this.suspended&&!0===this.layer?.legendEnabled}get updating(){return!(!this.updatingHandles?.updating&&!this.isUpdating())}get updatingProgress(){return this.updating?0:1}get visible(){return!0===this.layer?.visible}set visible(e){this._overrideIfSome("visible",e)}canResume(){return this.visible&&this.layer?.loaded&&!this.parent?.suspended&&this.view?.ready||!1}getSuspendInfo(){const e=this.parent&&this.parent.suspended?this.parent.suspendInfo:{},t=this;return t.view&&t.view.ready||(e.viewNotReady=!0),this.layer&&this.layer.loaded||(e.layerNotLoaded=!0),this.visible||(e.layerInvisible=!0),e}isUpdating(){return!1}};(0,s._)([(0,p.MZ)()],c.prototype,"fullOpacity",null),(0,s._)([(0,p.MZ)()],c.prototype,"layer",void 0),(0,s._)([(0,p.MZ)()],c.prototype,"parent",void 0),(0,s._)([(0,p.MZ)({readOnly:!0})],c.prototype,"suspended",null),(0,s._)([(0,p.MZ)({readOnly:!0})],c.prototype,"suspendInfo",null),(0,s._)([(0,p.MZ)({readOnly:!0})],c.prototype,"legendEnabled",null),(0,s._)([(0,p.MZ)({type:Boolean,readOnly:!0})],c.prototype,"updating",null),(0,s._)([(0,p.MZ)({readOnly:!0})],c.prototype,"updatingProgress",null),(0,s._)([(0,p.MZ)()],c.prototype,"visible",null),(0,s._)([(0,p.MZ)()],c.prototype,"view",void 0),c=(0,s._)([(0,d.$)("geoscene.views.layers.LayerView")],c);const u=c}}]);
//# sourceMappingURL=6017.4b299ec2.js.map