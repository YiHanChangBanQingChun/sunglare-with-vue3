"use strict";(self["webpackChunksun_glare_project"]=self["webpackChunksun_glare_project"]||[]).push([[7922],{73241:function(e,t,i){i.d(t,{Dk:function(){return s},U:function(){return a},oU:function(){return l},uG:function(){return n},wf:function(){return d},wg:function(){return u}});i(44114),i(14603),i(47566),i(98721);function s(e){const t=new URLSearchParams(window.location.search),i=t.get("start"),s=t.get("end"),a=t.get("date"),l=t.get("time"),n=t.get("default_id"),o=t.get("time_based_id");if(i)try{const t=JSON.parse(decodeURIComponent(i));t&&t.address&&(e.searchQueryStart=t.name)}catch(r){console.error("Error parsing start parameter:",r)}if(s)try{const t=JSON.parse(decodeURIComponent(s));t&&t.address&&(e.searchQueryEnd=t.name)}catch(r){console.error("Error parsing end parameter:",r)}a&&(e.selectedDate=a),l&&(e.selectedTime=l,e.isTimeFromUrl=!0),n&&(e.defaultRouteId=n),o&&(e.timeBasedRouteId=o),e.created()}function a(e){e.isRouteListVisible=!e.isRouteListVisible}function l(e){return 0===e?"rgb(25, 202, 173)":1===e?"rgb(244, 96, 108)":"black"}function n(e,t){t="defaultRouteId"===t?"noGlareRouteId":"defaultRouteId",e.highlightedRouteId&&e.highlightedRouteId!==t&&r(e,e.highlightedRouteId),e.blinkingTimers[t]&&(clearInterval(e.blinkingTimers[t]),delete e.blinkingTimers[t],r(e,t));const i=e.routeLayers[t];if(i){const t=e.highlightedColor,s={type:"simple",title:"路径",symbol:{type:"simple-line",color:t,width:5}};i.renderer=s}e.highlightedRouteId=t,o(e,t)}function o(e,t){const i=e.routeLayers[t];if(!i)return;let s=!1;const a=t===e.noGlareRouteId?e.noGlareColor:e.defaultColor,l=setInterval((()=>{s=!s;const t=s?e.highlightedColor:e.highlightedBlinkColor,a={type:"simple",title:"路径",symbol:{type:"simple-line",color:t,width:4.5}};i.renderer=a}),300);e.blinkingTimers[t]=l,setTimeout((()=>{clearInterval(e.blinkingTimers[t]),delete e.blinkingTimers[t];const s={type:"simple",title:"路径",symbol:{type:"simple-line",color:e.highlightedColor,width:4.5}};i.renderer=s,setTimeout((()=>{r(e,t,a)}),3e3)}),3e3)}function r(e,t,i=null){e.blinkingTimers[t]&&(clearInterval(e.blinkingTimers[t]),delete e.blinkingTimers[t]);const s=e.routeLayers[t];if(s){const i=t===e.noGlareRouteId,a=i?e.defaultColor:e.noGlareColor,l={type:"simple",title:"路径",symbol:{type:"simple-line",color:a,width:i?4.5:3}};s.renderer=l}}function d(e,t,i=!0){console.log("用户选择了搜索结果:",t);const s={name:t.name,address:t.address,wgs84_latitude:t.wgs84_latitude,wgs84_longitude:t.wgs84_longitude,location:[t.wgs84_longitude,t.wgs84_latitude],baidu_index:t.baidu_index,baidu_latitude:t.baidu_latitude,baidu_longitude:t.baidu_longitude,id:t.id,label:t.label};let a=e.selectedResultStart?JSON.stringify(e.selectedResultStart):null,l=e.selectedResultEnd?JSON.stringify(e.selectedResultEnd):null;i?(e.selectedResultStart=s,e.searchQueryStart=s.name,e.searchResults=[],a=JSON.stringify(s)):(e.selectedResultEnd=s,e.searchQueryEnd=s.name,e.searchResultsEnd=[],l=JSON.stringify(s)),e.$router.push({path:"/lu-jing-gui-hua/Intermediate-page",query:{start:a,end:l,date:e.selectedDate,time:e.selectedTime,BasemapLayer:e.BasemapName}})}function u(e){e.isSwapping=!0;const t=e.searchQueryStart;e.searchQueryStart=e.searchQueryEnd,e.searchQueryEnd=t;const i=e.selectedResultStart;e.selectedResultStart=e.selectedResultEnd,e.selectedResultEnd=i,e.onSearch().then((()=>{s(e),e.initMap(),e.searchQueryStart=e.selectedResultStart.name,e.searchQueryEnd=e.selectedResultEnd.name,e.isSwapping=!1})).catch((()=>{e.isSwapping=!1}))}},79344:function(e,t,i){i.r(t),i.d(t,{default:function(){return ie}});var s=i(56768),a=i(45130),l=i(24232),n=i(34739),o=i(1592),r=i(9239),d=i(74963);const u={class:"lu-jing-gui-hua"},c={class:"search-containers"},h={class:"revert-containers"},m={class:"swap-action"},p=["src"],g={class:"search-container start"},y={class:"search-box-img"},f={key:0,class:"search-results",ref:"searchResultsStart"},w=["onClick"],b={class:"search-container end"},k={class:"search-box-img"},R={key:0,class:"search-results",ref:"searchResultsEnd"},v=["onClick"],L=["src"],S={key:0,class:"loader-overlay"},C={key:0,class:"maploader-overlay"},_={class:"main-container"},E={class:"choose-time"},T={class:"form-group"},I=["min","max"],x={class:"routelist"},N={class:"cardlist"},D={class:"intro"},G={class:"intro"},B={class:"intro"},Q={class:"intro"};function $(e,t,$,A,M,j){return(0,s.uX)(),(0,s.CE)(s.FK,null,[(0,s.Lk)("div",u,[(0,s.Lk)("div",c,[(0,s.Lk)("div",h,[t[16]||(t[16]=(0,s.Lk)("div",{class:"car"},[(0,s.Lk)("img",{src:n})],-1)),(0,s.Lk)("div",m,[(0,s.Lk)("button",{onClick:t[0]||(t[0]=(...e)=>j.swap&&j.swap(...e)),title:"切换起终点"},[(0,s.Lk)("img",{src:i(23497),alt:"",class:"revert"},null,8,p)])])]),(0,s.Lk)("div",g,[t[18]||(t[18]=(0,s.Lk)("div",{class:"search-icon-wrapper"},[(0,s.Lk)("img",{src:o,alt:"pink"})],-1)),(0,s.bo)((0,s.Lk)("input",{type:"text","onUpdate:modelValue":t[1]||(t[1]=e=>M.searchQueryStart=e),onInput:t[2]||(t[2]=e=>j.onSearchInputChange(e,!0)),placeholder:"请输入起点",class:"search-box search-box-start"},null,544),[[a.Jo,M.searchQueryStart]]),(0,s.Lk)("span",y,[(0,s.Lk)("div",{class:"delete",title:"清空",onClick:t[3]||(t[3]=(...e)=>j.clc1&&j.clc1(...e))},t[17]||(t[17]=[(0,s.Lk)("img",{src:r,alt:"delete1"},null,-1)]))]),M.searchResults.length&&M.searchQueryStart?((0,s.uX)(),(0,s.CE)("div",f,[(0,s.Lk)("ul",null,[((0,s.uX)(!0),(0,s.CE)(s.FK,null,(0,s.pI)(M.searchResults,((e,t)=>((0,s.uX)(),(0,s.CE)("li",{key:t,class:(0,l.C4)({highlighted:t===M.highlightedIndex}),onClick:t=>j.selectResult(e,!0)},(0,l.v_)(e.name),11,w)))),128))])],512)):(0,s.Q3)("",!0)]),(0,s.Lk)("div",b,[t[20]||(t[20]=(0,s.Lk)("div",{class:"search-icon-wrapper"},[(0,s.Lk)("img",{src:d,alt:"green"})],-1)),(0,s.bo)((0,s.Lk)("input",{type:"text","onUpdate:modelValue":t[4]||(t[4]=e=>M.searchQueryEnd=e),onInput:t[5]||(t[5]=e=>j.onSearchInputChange(e,!1)),placeholder:"请输入终点",class:"search-box search-box-end"},null,544),[[a.Jo,M.searchQueryEnd]]),(0,s.Lk)("span",k,[(0,s.Lk)("div",{class:"delete",title:"清空",onClick:t[6]||(t[6]=(...e)=>j.clc2&&j.clc2(...e))},t[19]||(t[19]=[(0,s.Lk)("img",{src:r,alt:"delete1"},null,-1)]))]),M.searchResultsEnd.length&&M.searchQueryEnd?((0,s.uX)(),(0,s.CE)("div",R,[(0,s.Lk)("ul",null,[((0,s.uX)(!0),(0,s.CE)(s.FK,null,(0,s.pI)(M.searchResultsEnd,((e,t)=>((0,s.uX)(),(0,s.CE)("li",{key:t,class:(0,l.C4)({highlighted:t===M.highlightedIndex}),onClick:t=>j.selectResult(e,!1)},(0,l.v_)(e.name),11,v)))),128))])],512)):(0,s.Q3)("",!0)]),(0,s.Lk)("div",{class:"search-action",onClick:t[7]||(t[7]=(...e)=>j.onSearch&&j.onSearch(...e)),title:"搜索"},[(0,s.Lk)("img",{src:i(8105),alt:"",class:"search"},null,8,L)]),M.isLoading?((0,s.uX)(),(0,s.CE)("div",S,t[21]||(t[21]=[(0,s.Lk)("div",{class:"loader"},null,-1)]))):(0,s.Q3)("",!0)])]),t[28]||(t[28]=(0,s.Lk)("div",{id:"viewDiv"},null,-1)),M.ismaploading?((0,s.uX)(),(0,s.CE)("div",C,t[22]||(t[22]=[(0,s.Lk)("div",{class:"maploader"},null,-1)]))):(0,s.Q3)("",!0),(0,s.Lk)("div",_,[(0,s.Lk)("div",E,[(0,s.Lk)("div",T,[t[23]||(t[23]=(0,s.Lk)("label",{for:"date-input"},"选择日期：",-1)),(0,s.bo)((0,s.Lk)("input",{id:"date-input",type:"date","onUpdate:modelValue":t[8]||(t[8]=e=>M.selectedDate=e),min:j.minDate,max:j.maxDate,class:(0,l.C4)({"invalid-date":j.isDateDisabled(M.selectedDate)}),onChange:t[9]||(t[9]=(...e)=>j.handleDateChange&&j.handleDateChange(...e))},null,42,I),[[a.Jo,M.selectedDate]]),t[24]||(t[24]=(0,s.Lk)("label",{for:"time-input"},"选择时间：",-1)),(0,s.bo)((0,s.Lk)("input",{id:"time-input",type:"time","onUpdate:modelValue":t[10]||(t[10]=e=>j.formattedTime=e),onInput:t[11]||(t[11]=(...e)=>j.onTimeInputChange&&j.onTimeInputChange(...e)),step:"600"},null,544),[[a.Jo,j.formattedTime]])])]),(0,s.Lk)("div",null,[(0,s.bF)(a.eB,{name:"fade"},{default:(0,s.k6)((()=>[(0,s.bo)((0,s.Lk)("div",x,[(0,s.Lk)("ul",N,[(0,s.Lk)("div",{class:"route","data-index":"1",onClick:t[12]||(t[12]=e=>j.highlightRoute("noGlareRouteId"))},[(0,s.Lk)("div",{class:"introduction",style:(0,l.Tr)({color:j.getColor(1)})},"无眩光路径",4),(0,s.Lk)("p",D,[(0,s.Lk)("span",null,"用时："+(0,l.v_)(M.totalHours)+"小时"+(0,l.v_)(M.totalMinutes)+"分钟",1),t[25]||(t[25]=(0,s.eW)(" | ")),(0,s.Lk)("span",null,"路长："+(0,l.v_)(M.totalDistance),1)]),(0,s.Lk)("p",G,[(0,s.Lk)("span",null,"途径："+(0,l.v_)(M.totalPass),1)])]),(0,s.Lk)("div",{class:"route","data-index":"0",onClick:t[13]||(t[13]=e=>j.highlightRoute("defaultRouteId"))},[(0,s.Lk)("div",{class:"introduction",style:(0,l.Tr)({color:j.getColor(0)})},"常规路径",4),(0,s.Lk)("p",B,[(0,s.Lk)("span",null,"用时："+(0,l.v_)(M.noGlareTotalHours)+"小时"+(0,l.v_)(M.noGlareTotalMinutes)+"分钟",1),t[26]||(t[26]=(0,s.eW)(" | ")),(0,s.Lk)("span",null,"路长："+(0,l.v_)(M.noGlareTotalDistance),1)]),(0,s.Lk)("p",Q,[(0,s.Lk)("span",null,"途径："+(0,l.v_)(M.noGlareTotalPass),1)])])]),(0,s.Lk)("span",{class:"toggle-button",onClick:t[14]||(t[14]=(...e)=>j.toggleRouteList&&j.toggleRouteList(...e)),title:"隐藏"},t[27]||(t[27]=[(0,s.Lk)("img",{src:r,alt:"delete1"},null,-1)]))],512),[[a.aG,M.isRouteListVisible]])])),_:1}),M.isRouteListVisible?(0,s.Q3)("",!0):((0,s.uX)(),(0,s.CE)("button",{key:0,onClick:t[15]||(t[15]=(...e)=>j.toggleRouteList&&j.toggleRouteList(...e)),class:"open-button"},"展开路线结果"))])])],64)}i(44114),i(14603),i(47566),i(98721);var A=i(7382),M=i(43487),j=i(11134),J=i(74036),q=i(58423),O=i(3949),U=i(41759),V=i(94373),F=i(90144),P=i(57829),X=i(95587),z=i(87923),H=i(44432),K=i(50346),W=i(73241),Y=i(51197),Z={name:"RouteView",data(){return{searchQueryStart:"",searchQueryEnd:"",selectedResultStart:null,selectedResultEnd:null,searchResults:[],searchResultsEnd:[],isLoading:!1,ismaploading:!1,totalHours:0,totalMinutes:0,totalDistance:"0千米",selectedDate:"",selectedTime:"",noGlareTotalHours:0,noGlareTotalMinutes:0,highlightedIndex:-1,noGlareTotalDistance:"0千米",highlightedRouteId:null,routeLayers:{},blinkingTimers:{},highlightedColor:[0,123,255,1],highlightedBlinkColor:[0,123,255,.2],noGlareColor:[244,96,108],defaultColor:[25,202,173],noGlareRouteId:"noGlareRouteId",defaultRouteId:"defaultRouteId",isRouteListVisible:!0,totalPass:"",noGlareTotalPass:"",BasemapName:null}},mounted(){this.created(),this.initMap(),this.$route.query.start&&this.$route.query.end&&(this.selectedResultStart=JSON.parse(this.$route.query.start),this.selectedResultEnd=JSON.parse(this.$route.query.end)),(0,W.Dk)(this),window.addEventListener("keydown",this.handleKeydown)},beforeUnmount(){window.removeEventListener("keydown",this.handleKeydown)},computed:{minDate(){return"2024-01-01"},maxDate(){return"2024-12-31"},formattedTime(){if(!this.selectedTime)return"";const[e,t]=this.selectedTime.split(":").map(Number),i=10*Math.floor(t/10);return`${String(e).padStart(2,"0")}:${String(i).padStart(2,"0")}`}},methods:{toggleRouteList(){(0,W.U)(this)},getColor(e){return(0,W.oU)(e)},highlightRoute(e){(0,W.uG)(this,e)},onTimeInputChange(e){(0,Y.Lk)(this,e)},isDateDisabled(e){return(0,Y.zJ)(this,e)},handleDateChange(e){(0,Y.d5)(this,e)},handleKeydown(e){(0,Y.y9)(this,e)},updateTime(){(0,Y.JA)(this)},clc1(){(0,Y.YK)(this)},clc2(){(0,Y.dn)(this)},swap(){(0,W.wg)(this)},onSearchInputChange(e,t){(0,Y.eE)(this,e,t)},selectResult(e,t=!0){(0,W.wf)(this,e,t)},onSearch(){return new Promise(((e,t)=>{if(this.selectedResultStart&&this.selectedResultEnd){this.isLoading=!0;const i={...this.selectedResultStart,location:[this.selectedResultStart.wgs84_longitude,this.selectedResultStart.wgs84_latitude]},s={...this.selectedResultEnd,location:[this.selectedResultEnd.wgs84_longitude,this.selectedResultEnd.wgs84_latitude]},a=5===this.selectedTime.length?`${this.selectedTime}:00`:this.selectedTime;console.log("Formatted Time:",a),V.A.post("http://172.30.114.151/sun-glare-project/api/route/plan",{start:i,end:s,date:this.selectedDate,time:a}).then((t=>{const l=t.data.default_id,n=t.data.time_based_id;console.log("默认路径规划结果ID:",l),console.log("基于时间的路径规划结果ID:",n),console.log("路径规划成功，时间日期是:",this.selectedDate,this.selectedTime),this.isLoading=!1,this.$router.push({path:"/lu-jing-gui-hua/routesw",query:{start:JSON.stringify(i),end:JSON.stringify(s),default_id:l,time_based_id:n,date:this.selectedDate,time:a,BasemapLayer:this.BasemapName}}),this.searchQueryStart=i.name,this.searchQueryEnd=s.name,e()})).catch((e=>{console.error(e),this.isLoading=!1,alert("路径规划失败，请稍后再试。"),t(e)}))}else alert("请确保起点和终点都已选择。"),t(new Error("请确保起点和终点都已选择。"))}))},initMap(e){const t=new A.A({basemap:e||this.BasemapName||"tianditu-vector"});this.map=t,this.view=new M.A({container:"viewDiv",map:t,center:[114.3,30.7],zoom:4,constraints:{geometry:{type:"extent",xmin:113.6,ymin:29.9,xmax:115,ymax:31.3},minScale:500,maxScale:2e6,rotationEnabled:!1,snapToZoom:!1}});const i=new P.A({view:this.view,source:{query:{title:'"Basemaps for Developers" AND owner:geoscenedev'}}});i.watch("activeBasemap",(e=>{this.handleBasemapChange(e)}));const s=new X.A({view:this.view}),a=new z.A({view:this.view,unit:"metric",style:"ruler"}),l=new H.A({view:this.view,unit:"metric",unitOptions:{metric:["kilometers","meters"],nonMetric:["miles","feet"]},iconClass:"esri-icon-measure-line"}),n=new K.A({view:this.view});this.view.ui.add(l,{position:"bottom-leading",index:0}),this.view.ui.add(i,{position:"bottom-right",index:0}),this.view.ui.add(n,{position:"bottom-right",index:1}),this.view.ui.move("zoom",{position:"bottom-left",index:1}),this.view.ui.add(s,{position:"bottom-left",index:2}),this.view.ui.add(a,{position:"bottom-left",index:3});const o=new q.A({title:"起点与终点"});t.add(o);const r=new O["default"]({url:"https://www.geosceneonline.cn/server/rest/services/Hosted/wuhan_village/FeatureServer",title:"武汉县区面",renderer:{type:"simple",title:"县区边界",symbol:{type:"simple-fill",color:[0,0,0,0],outline:{color:[0,0,0,1],width:1}}},popupTemplate:{content:[{type:"fields",fieldInfos:[{fieldName:"县区name",label:"县区名称"}]}]}});t.add(r),t.add(o),this.view.when((()=>{this.drawPoints(o),this.adjustView(),this.drawRoutes(t)})).catch((e=>{console.error("MapView initialization error:",e)}))},handleBasemapChange(e){const t={"天地图-矢量（球面墨卡托投影）":"tianditu-vector","天地图-影像（球面墨卡托投影）":"tianditu-image","天地图-地形（球面墨卡托投影）":"tianditu-topography"};t[e.title]?this.BasemapName=t[e.title]:this.BasemapName=e.title,console.log("Basemap changed:",this.BasemapName);const i=new URLSearchParams(window.location.search);i.set("BasemapLayer",this.BasemapName),window.history.replaceState({},"",`${window.location.pathname}?${i}`)},created(){const e=this.$route.query.BasemapLayer,t={"天地图-矢量（球面墨卡托投影）":"tianditu-vector","天地图-影像（球面墨卡托投影）":"tianditu-image","天地图-地形（球面墨卡托投影）":"tianditu-topography","天地图-矢量（含注记）（球面墨卡托投影）":"tianditu-vector"};e&&(t[e]?this.BasemapName=t[e]:this.BasemapName=e),console.log("BasemapLayer is update",this.BasemapName)},adjustView(){if(this.selectedResultStart&&this.selectedResultEnd){const e=.01,t=new U.A({xmin:Math.min(this.selectedResultStart.location[0],this.selectedResultEnd.location[0])-10*e,ymin:Math.min(this.selectedResultStart.location[1],this.selectedResultEnd.location[1])-10*e,xmax:Math.max(this.selectedResultStart.location[0],this.selectedResultEnd.location[0])+10*e,ymax:Math.max(this.selectedResultStart.location[1],this.selectedResultEnd.location[1])+10*e});this.view.goTo(t).catch((e=>{console.error("Error adjusting view:",e)}))}else this.selectedResultStart?this.view.goTo({center:[this.selectedResultStart.location[0],this.selectedResultStart.location[1]],zoom:10}).catch((e=>{console.error("Error adjusting view:",e)})):this.selectedResultEnd&&this.view.goTo({center:[this.selectedResultEnd.location[0],this.selectedResultEnd.location[1]],zoom:10}).catch((e=>{console.error("Error adjusting view:",e)}))},drawPoints(e){if(!this.$route.query.start||!this.$route.query.end)return void console.error("Start or end point is undefined.");const t=JSON.parse(this.$route.query.start),i=JSON.parse(this.$route.query.end);if(!t.location||!i.location)return void console.error("Start or end point does not have a location.");const s=new J.A({longitude:t.location[0],latitude:t.location[1]}),a=new J.A({longitude:i.location[0],latitude:i.location[1]}),l=new j.A({geometry:s,title:"起点",symbol:{type:"simple-marker",color:"red",size:"20px"},popupTemplate:{title:"起点信息",content:[{type:"fields",fieldInfos:[{fieldName:"address",label:"地址"},{fieldName:"name",label:"名称"},{fieldName:"wgs84_latitude",label:"WGS84纬度"},{fieldName:"wgs84_longitude",label:"WGS84经度"},{fieldName:"baidu_index",label:"百度索引"},{fieldName:"baidu_latitude",label:"百度纬度"},{fieldName:"baidu_longitude",label:"百度经度"},{fieldName:"id",label:"ID"},{fieldName:"label",label:"标签"}]}]},attributes:t}),n=new j.A({geometry:a,title:"终点",symbol:{type:"simple-marker",color:"green",size:"20px"},popupTemplate:{title:"终点信息",content:[{type:"fields",fieldInfos:[{fieldName:"address",label:"地址"},{fieldName:"name",label:"名称"},{fieldName:"wgs84_latitude",label:"WGS84纬度"},{fieldName:"wgs84_longitude",label:"WGS84经度"},{fieldName:"baidu_index",label:"百度索引"},{fieldName:"baidu_latitude",label:"百度纬度"},{fieldName:"baidu_longitude",label:"百度经度"},{fieldName:"id",label:"ID"},{fieldName:"label",label:"标签"}]}]},attributes:i});e.addMany([l,n])},drawRoutes(e){const t=this.$route.query.default_id,i=this.$route.query.time_based_id;t||i?(t&&this.fetchAndDrawRoute(e,t,[25,202,173],!0),i&&this.fetchAndDrawRoute(e,i,[244,96,108])):console.error("Route IDs are undefined.")},fetchAndDrawRoute(e,t,i,s=!1){const a=`http://172.30.114.151/sun-glare-project/api/get_geojson/${t}`;fetch(a).then((e=>e.json())).then((t=>{let a=0,l=0;const n={},o=t.features.map(((e,t)=>(99999!==e.properties.cost&&(a+=e.properties.length,l+=e.properties.cost),e.properties.name.includes("未知")||(n[e.properties.name]||(n[e.properties.name]={length:0,order:t}),n[e.properties.name].length+=e.properties.length),{geometry:{type:"polyline",paths:e.geometry.coordinates},attributes:{...e.properties,id:t,routeType:s?"耗时少路径":"无眩光路径"}}))),r=Object.entries(n).sort(((e,t)=>t[1].length-e[1].length||e[1].order-t[1].order)),d=r.slice(0,3).map((e=>e[0])).join("->"),u=new O["default"]({title:s?"耗时少路径":"无眩光路径",source:o,renderer:{type:"simple",title:s?"耗时少路径":"无眩光路径",symbol:{type:"simple-line",color:i,width:s?4.5:3}},objectIdField:"id",fields:[{name:"id",type:"oid"},{name:"seq",type:"integer"},{name:"path_seq",type:"integer"},{name:"node",type:"integer"},{name:"edge",type:"integer"},{name:"cost",type:"double"},{name:"agg_cost",type:"double"},{name:"length",type:"double"},{name:"name",type:"string"},{name:"maxspeed",type:"integer"},{name:"routeType",type:"string"}],popupTemplate:{title:"{routeType} - {name}",content:[{type:"text",text:`总距离: ${(a/1e3).toFixed(2)} km<br>总耗时: ${(l/3600).toFixed(2)} 小时`},{type:"fields",fieldInfos:[{fieldName:"length",label:"长度（米）"},{fieldName:"cost",label:"耗时（秒）"},{fieldName:"maxspeed",label:"最大速度"},{fieldName:"name",label:"名称"}]}]}}),c=(0,F.IG)(u);e.layers.add(c),l<3600&&(l+=60);const h=Math.floor(l/3600),m=Math.floor(l%3600/60);let p;p=a<1e3?`${a.toFixed(2)}米`:`${(a/1e3).toFixed(2)}千米`,s?(this.noGlareTotalHours=h,console.log("Hours:",h),this.noGlareTotalMinutes=m,this.noGlareTotalDistance=p,this.noGlareTotalPass=d,this.routeLayers.noGlareRouteId=u):(this.totalHours=h,this.totalMinutes=m,this.totalDistance=p,this.totalPass=d,this.routeLayers.defaultRouteId=u)})).catch((e=>console.error("Error loading the geojson file:",e)))}}},ee=i(71241);const te=(0,ee.A)(Z,[["render",$]]);var ie=te}}]);
//# sourceMappingURL=lu-jing-gui-hua-route.4673570e.js.map