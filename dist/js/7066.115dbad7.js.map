{"version":3,"file":"js/7066.115dbad7.js","mappings":"iYAIu9B,MAAMA,EAAEC,sBAAAA,CAAuBC,GAAG,MAAMC,EAAEC,EAAAA,EAAEC,SAASH,EAAEI,YAAYC,GAAEC,EAAAA,EAAAA,IAAEL,EAAED,EAAEO,MAAM,OAAOC,QAAQC,QAAQ,MAAMJ,EAAEA,EAAEK,SAAS,KAAK,CAACC,2BAAAA,CAA4BX,GAAG,MAAMC,EAAEC,EAAAA,EAAEC,SAASH,EAAEI,YAAYC,GAAEO,EAAAA,EAAAA,IAAEX,GAAG,OAAOO,QAAQC,QAAQJ,EAAE,CAAC,YAAMQ,CAAOb,GAAG,MAAME,QAAQD,EAAAA,EAAAA,GAAED,EAAEc,KAAKd,EAAEe,SAAS,OAAOb,GAAGA,EAAEQ,QAAQ,CAACM,SAAAA,CAAUhB,GAAGA,EAAEI,WAAWF,EAAAA,EAAEC,SAASH,EAAEI,YAAYJ,EAAEiB,OAAOjB,EAAEiB,OAAOC,EAAAA,EAAEf,SAASH,EAAEiB,QAAQ,KAAK,MAAMhB,EAAEkB,KAAKC,WAAWJ,UAAUhB,GAAG,OAAOQ,QAAQC,QAAQ,MAAMR,EAAEA,EAAES,SAAS,KAAK,CAAC,sBAAMW,CAAiBrB,GAAGmB,KAAKC,WAAWE,EAAAA,EAAEnB,SAASH,EAAEuB,gBAAgBvB,EAAEwB,YAAY,kBAAkBL,KAAKC,YAAYK,aAAalB,OAAOY,KAAKC,WAAWK,aAAaD,WAAWxB,EAAEwB,WAAW,CAAC,0BAAME,CAAqB1B,GAAGmB,KAAKQ,gBAAeC,EAAAA,EAAAA,IAAE5B,EAAE6B,mBAAmB,CAAC,aAAMC,CAAQ9B,GAAG,MAAMC,EAAEkB,KAAKQ,eAAeG,QAAQ,CAACb,OAAOC,EAAAA,EAAEf,SAASH,EAAEiB,QAAQc,mBAAmB/B,EAAE+B,mBAAmBC,KAAKhC,GAAG,MAAMA,EAAEE,EAAAA,EAAEC,SAASH,GAAG,OAAOiC,kBAAkBjC,EAAEiC,mBAAmBD,KAAKhC,GAAG,MAAMA,EAAEkC,EAAAA,EAAE/B,SAASH,GAAG,OAAOmC,iBAAiBnC,EAAEmC,mBAAmB,OAAO,MAAMlC,EAAEA,EAAES,SAAS,IAAI,CAAC0B,OAAAA,CAAQpC,GAAG,MAAMC,EAAEkB,KAAKC,WAAWiB,cAAcnC,EAAAA,EAAEC,SAASH,EAAEsC,eAAetC,EAAEuC,eAAe,OAAO/B,QAAQC,QAAQ,MAAMR,GAAGA,EAAES,SAAS,CAAC8B,4BAAAA,CAA6BxC,GAAG,MAAMC,GAAEwC,EAAAA,EAAAA,IAAEvC,EAAAA,EAAEC,SAASH,EAAEsC,gBAAgB,OAAO9B,QAAQC,QAAQR,EAAE,CAACyC,KAAAA,CAAM1C,GAAG,MAAMC,GAAEI,EAAAA,EAAAA,IAAEH,EAAAA,EAAEC,SAASH,EAAEsC,eAAetC,EAAE2C,SAAS3C,EAAE4C,qBAAqB,OAAO3C,GAAGA,EAAE4C,SAAS,CAAC7C,EAAEE,KAAKD,EAAE6C,IAAI5C,EAAEF,GAAGU,SAAS,IAAIF,QAAQC,QAAQR,EAAE,CAAC,wBAAM8C,CAAmB/C,GAAG,MAAMC,EAAED,EAAEgD,eAAehB,KAAKhC,GAAGA,EAAE,IAAIE,EAAAA,EAAEF,GAAG,OAAOK,GAAE4C,EAAAA,EAAAA,IAAEhD,EAAED,EAAEkD,cAAc,CAACC,YAAYnD,EAAEmD,YAAYC,cAAcpD,EAAEoD,cAAcC,WAAWrD,EAAEqD,WAAWC,SAAStD,EAAEsD,WAAW,IAAI1B,EAAE2B,EAAElD,EAAE,OAAOL,EAAEwD,QAAQD,GAAEE,EAAAA,EAAAA,IAAEpD,EAAEL,EAAE0D,cAAc1D,EAAEwD,MAAMxD,EAAE2D,cAAc3D,EAAE4D,gBAAgB5D,EAAE6D,mBAAmB7D,EAAE8D,UAAUlC,GAAEmC,EAAAA,EAAAA,IAAE/D,EAAE0D,cAAc1D,EAAE8D,SAASP,GAAES,EAAAA,EAAAA,IAAET,EAAEvD,EAAEiE,KAAK,YAAY,gBAAgBrC,IAAI,CAACxB,WAAWmD,GAAG7C,SAASwD,qBAAqBtC,EAAE,CAAC,oBAAMuC,CAAenE,EAAEE,GAAG,MAAMD,EAAE,CAACa,KAAK,IAAIsD,aAAapE,EAAEqE,SAASC,QAAQC,KAAK,IAAIC,WAAWxE,EAAEqE,SAASI,YAAYC,MAAM1E,EAAEqE,SAASK,MAAMC,OAAO3E,EAAEqE,SAASM,SAASC,WAAWvE,EAAEwE,UAAU5B,SAAS6B,EAAAA,EAAAA,IAAE9E,EAAE+E,SAAS/E,EAAEgF,mBAAmB/E,EAAEC,EAAE+E,QAAQ,MAAM,CAACC,OAAO,CAACC,aAAa9E,EAAEiE,OAAOc,YAAYnC,EAAEqB,QAAQe,aAAa,CAAChF,EAAEiE,OAAOrB,EAAEqB,QAAQ,CAAC,6BAAMgB,CAAwBpF,GAAG,MAAMD,EAAEiB,EAAAA,EAAEf,SAASD,EAAEqF,iBAAiBlF,EAAEa,EAAAA,EAAEf,SAASD,EAAEsF,iBAAiB,IAAIvC,EAAE,KAAK/C,EAAEuF,2BAA2BxC,EAAE,IAAIjD,EAAAA,EAAE,CAAC0F,MAAMxF,EAAEuF,6BAA6BvF,EAAEyF,iBAAgBpC,EAAAA,EAAAA,IAAEtD,EAAE2F,iBAAiBvF,EAAEuF,iBAAiB3C,WAAW4C,EAAAA,EAAAA,MAAI,MAAMpC,EAAEvD,EAAE4F,iBAAgBC,EAAAA,EAAAA,GAAE7F,EAAE4F,iBAAiB,KAAK,OAAOE,EAAAA,EAAAA,IAAE,IAAI9F,EAAEqF,gBAAgBtF,EAAEuF,gBAAgBnF,EAAE4F,oBAAoBhD,EAAE6C,gBAAgBrC,GAAG,E","sources":["webpack://sun-glare-project/./node_modules/@geoscene/core/layers/support/RasterWorker.js"],"sourcesContent":["/*\r\nAll material copyright GeoScene, All Rights Reserved, unless otherwise specified.\r\nSee https://js.geoscene.cn/4.27/geoscene/copyright.txt for details.\r\n*/\r\nimport\"../../geometry.js\";import r from\"../../geometry/support/GeographicTransformation.js\";import e from\"./PixelBlock.js\";import{decode as t}from\"./rasterFormats/RasterCodec.js\";import{split as s,mosaic as o,approximateTransform as i,getLocalArithmeticNorthRotations as n}from\"./rasterFunctions/pixelUtils.js\";import{create as a}from\"./rasterFunctions/rasterFunctionHelper.js\";import{requirePE as l,load as m,getProjectionOffsetGrid as c}from\"./rasterFunctions/rasterProjectionHelper.js\";import{computeStatisticsHistograms as f,estimateStatisticsHistograms as p}from\"./rasterFunctions/stretchUtils.js\";import{convertVectorFieldData as u,convertToLocalDirections as S}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as d}from\"./rasterTransforms/utils.js\";import y from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as x}from\"../../views/2d/engine/flow/dataUtils.js\";import h from\"../../geometry/Extent.js\";import O from\"../../geometry/Point.js\";class N{convertVectorFieldData(r){const t=e.fromJSON(r.pixelBlock),s=u(t,r.type);return Promise.resolve(null!=s?s.toJSON():null)}computeStatisticsHistograms(r){const t=e.fromJSON(r.pixelBlock),s=f(t);return Promise.resolve(s)}async decode(r){const e=await t(r.data,r.options);return e&&e.toJSON()}symbolize(r){r.pixelBlock=e.fromJSON(r.pixelBlock),r.extent=r.extent?h.fromJSON(r.extent):null;const t=this.symbolizer.symbolize(r);return Promise.resolve(null!=t?t.toJSON():null)}async updateSymbolizer(r){this.symbolizer=y.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}async updateRasterFunction(r){this.rasterFunction=a(r.rasterFunctionJSON)}async process(r){const t=this.rasterFunction.process({extent:h.fromJSON(r.extent),primaryPixelBlocks:r.primaryPixelBlocks.map((r=>null!=r?e.fromJSON(r):null)),primaryPixelSizes:r.primaryPixelSizes?.map((r=>null!=r?O.fromJSON(r):null)),primaryRasterIds:r.primaryRasterIds});return null!=t?t.toJSON():null}stretch(r){const t=this.symbolizer.simpleStretch(e.fromJSON(r.srcPixelBlock),r.stretchParams);return Promise.resolve(null!=t&&t.toJSON())}estimateStatisticsHistograms(r){const t=p(e.fromJSON(r.srcPixelBlock));return Promise.resolve(t)}split(r){const t=s(e.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return t&&t.forEach(((r,e)=>{t.set(e,r?.toJSON())})),Promise.resolve(t)}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new e(r):null)),s=o(t,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let a,l=s;return r.coefs&&(l=i(s,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(a=n(r.destDimension,r.gcsGrid),l=S(l,r.isUV?\"vector-uv\":\"vector-magdir\",a)),{pixelBlock:l?.toJSON(),localNorthDirections:a}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await x(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(e){const t=h.fromJSON(e.projectedExtent),s=h.fromJSON(e.srcBufferExtent);let o=null;e.datumTransformationSteps&&(o=new r({steps:e.datumTransformationSteps})),(e.includeGCSGrid||l(t.spatialReference,s.spatialReference,o))&&await m();const i=e.rasterTransform?d(e.rasterTransform):null;return c({...e,projectedExtent:t,srcBufferExtent:s,datumTransformation:o,rasterTransform:i})}}export{N as default};"],"names":["N","convertVectorFieldData","r","t","e","fromJSON","pixelBlock","s","u","type","Promise","resolve","toJSON","computeStatisticsHistograms","f","decode","data","options","symbolize","extent","h","this","symbolizer","updateSymbolizer","y","symbolizerJSON","histograms","rendererJSON","updateRasterFunction","rasterFunction","a","rasterFunctionJSON","process","primaryPixelBlocks","map","primaryPixelSizes","O","primaryRasterIds","stretch","simpleStretch","srcPixelBlock","stretchParams","estimateStatisticsHistograms","p","split","tileSize","maximumPyramidLevel","forEach","set","mosaicAndTransform","srcPixelBlocks","o","srcMosaicSize","blockWidths","alignmentInfo","clipOffset","clipSize","l","coefs","i","destDimension","sampleSpacing","interpolation","projectDirections","gcsGrid","n","S","isUV","localNorthDirections","createFlowMesh","Float32Array","flowData","buffer","mask","Uint8Array","maskBuffer","width","height","vertexData","indexData","x","meshType","simulationSettings","signal","result","vertexBuffer","indexBuffer","transferList","getProjectionOffsetGrid","projectedExtent","srcBufferExtent","datumTransformationSteps","steps","includeGCSGrid","spatialReference","m","rasterTransform","d","c","datumTransformation"],"sourceRoot":""}