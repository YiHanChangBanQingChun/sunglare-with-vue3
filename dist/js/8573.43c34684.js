"use strict";(self["webpackChunksun_glare_project"]=self["webpackChunksun_glare_project"]||[]).push([[8573],{68573:function(e,t,s){s.r(t),s.d(t,{execute:function(){return n}});s(16573),s(78100),s(77936);var a=s(47966);let r;function n(e,t){let s=t.responseType;s?"array-buffer"!==s&&"blob"!==s&&"json"!==s&&"native"!==s&&"native-request-init"!==s&&"text"!==s&&(s="text"):s="json",t.responseType=s;const n=t.signal;return delete t.signal,globalThis.invokeStaticMessage("request",{url:e,options:t},{signal:n}).then((async o=>{let u,l,i,c,p;if(o.data)if(o.data instanceof ArrayBuffer){if(!("json"!==s&&"text"!==s&&"blob"!==s||(u=new Blob([o.data]),"json"!==s&&"text"!==s||(r||(r=new FileReaderSync),c=r.readAsText(u),"json"!==s)))){try{l=JSON.parse(c||null)}catch(f){const s={...f,url:e,requestOptions:t};throw new a.A("request:server",f.message,s)}if(l.error){const s={...l.error,url:e,requestOptions:t};throw new a.A("request:server",l.error.message,s)}}}else"native"===s&&(o.data.signal=n,i=await fetch(o.data.url,o.data),o.httpStatus=i.status);switch(s){case"blob":p=u;break;case"json":p=l;break;case"native":p=i;break;case"text":p=c;break;default:p=o.data}return{data:p,httpStatus:o.httpStatus,requestOptions:t,ssl:o.ssl,url:e}}))}}}]);
//# sourceMappingURL=8573.43c34684.js.map