{"version":3,"file":"js/lu-jing-gui-hua-routesw.f366bc5d.js","mappings":"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","sources":["webpack://sun-glare-project/./src/assets/share_js/routeview_public.js","webpack://sun-glare-project/./src/views/RouteViewsw.vue","webpack://sun-glare-project/./src/views/RouteViewsw.vue?1fc5"],"sourcesContent":["// routeview_public.js\r\nexport function parseUrlParams (context) {\r\n  const urlParams = new URLSearchParams(window.location.search)\r\n  const startParam = urlParams.get('start')\r\n  const endParam = urlParams.get('end')\r\n  const dateParam = urlParams.get('date')\r\n  const timeParam = urlParams.get('time')\r\n  const defaultRouteIdParam = urlParams.get('default_id')\r\n  const timeBasedRouteIdParam = urlParams.get('time_based_id')\r\n  if (startParam) {\r\n    try {\r\n      const startObj = JSON.parse(decodeURIComponent(startParam))\r\n      if (startObj && startObj.address) {\r\n        context.searchQueryStart = startObj.name\r\n      }\r\n    } catch (e) {\r\n      console.error('Error parsing start parameter:', e)\r\n    }\r\n  }\r\n  if (endParam) { // 如果有终点参数，进行解析\r\n    try {\r\n      const endObj = JSON.parse(decodeURIComponent(endParam))\r\n      if (endObj && endObj.address) {\r\n        context.searchQueryEnd = endObj.name // 绑定终点查询字符串\r\n      }\r\n    } catch (e) {\r\n      console.error('Error parsing end parameter:', e)\r\n    }\r\n  }\r\n  // 如果有日期参数，进行解析\r\n  if (dateParam) {\r\n    context.selectedDate = dateParam\r\n  }\r\n  // 如果有时间参数，进行解析\r\n  if (timeParam) {\r\n    context.selectedTime = timeParam\r\n    context.isTimeFromUrl = true // 设置标志位\r\n  }\r\n  // 如果有默认路径ID参数，进行解析\r\n  if (defaultRouteIdParam) {\r\n    context.defaultRouteId = defaultRouteIdParam\r\n  }\r\n  // 如果有基于时间的路径ID参数，进行解析\r\n  if (timeBasedRouteIdParam) {\r\n    context.timeBasedRouteId = timeBasedRouteIdParam\r\n  }\r\n\r\n  // 如果有底图参数，进行解析\r\n  context.created()\r\n}\r\n\r\nexport function toggleRouteList (context) {\r\n  context.isRouteListVisible = !context.isRouteListVisible\r\n}\r\n\r\nexport function getColor (index) {\r\n  if (index === 0) {\r\n    return 'rgb(25, 202, 173)' // 绿色，耗时少路径\r\n  } else if (index === 1) {\r\n    return 'rgb(244, 96, 108)' // 红色，无眩光路径\r\n  }\r\n  return 'black' // 默认颜色\r\n}\r\n\r\nexport function highlightRoute (context, routeId) {\r\n  routeId = routeId === 'defaultRouteId' ? 'noGlareRouteId' : 'defaultRouteId'\r\n  if (context.highlightedRouteId && context.highlightedRouteId !== routeId) {\r\n    resetRouteStyle(context, context.highlightedRouteId)\r\n  }\r\n  if (context.blinkingTimers[routeId]) {\r\n    clearInterval(context.blinkingTimers[routeId])\r\n    delete context.blinkingTimers[routeId]\r\n    resetRouteStyle(context, routeId)\r\n  }\r\n  const layer = context.routeLayers[routeId]\r\n  if (layer) {\r\n    const color = context.highlightedColor\r\n    const newRenderer = {\r\n      type: 'simple',\r\n      title: '路径',\r\n      symbol: {\r\n        type: 'simple-line',\r\n        color: color,\r\n        width: 5\r\n      }\r\n    }\r\n    layer.renderer = newRenderer\r\n  }\r\n  context.highlightedRouteId = routeId\r\n  startBlinking(context, routeId)\r\n}\r\n\r\nexport function startBlinking (context, routeId) {\r\n  const layer = context.routeLayers[routeId]\r\n  if (!layer) return\r\n\r\n  let isBlinkOn = false\r\n  const originalColor = routeId === context.noGlareRouteId ? context.noGlareColor : context.defaultColor\r\n\r\n  const intervalId = setInterval(() => {\r\n    isBlinkOn = !isBlinkOn\r\n    const color = isBlinkOn ? context.highlightedColor : context.highlightedBlinkColor\r\n    const newRenderer = {\r\n      type: 'simple',\r\n      title: '路径',\r\n      symbol: {\r\n        type: 'simple-line',\r\n        color: color,\r\n        width: 4.5\r\n      }\r\n    }\r\n    layer.renderer = newRenderer\r\n  }, 300)\r\n\r\n  context.blinkingTimers[routeId] = intervalId\r\n\r\n  setTimeout(() => {\r\n    clearInterval(context.blinkingTimers[routeId])\r\n    delete context.blinkingTimers[routeId]\r\n    const finalRenderer = {\r\n      type: 'simple',\r\n      title: '路径',\r\n      symbol: {\r\n        type: 'simple-line',\r\n        color: context.highlightedColor,\r\n        width: 4.5\r\n      }\r\n    }\r\n    layer.renderer = finalRenderer\r\n    setTimeout(() => {\r\n      resetRouteStyle(context, routeId, originalColor)\r\n    }, 3000)\r\n  }, 3000)\r\n}\r\n\r\nexport function resetRouteStyle (context, routeId, originalColor = null) {\r\n  if (context.blinkingTimers[routeId]) {\r\n    clearInterval(context.blinkingTimers[routeId])\r\n    delete context.blinkingTimers[routeId]\r\n  }\r\n  const layer = context.routeLayers[routeId]\r\n  if (layer) {\r\n    const isNoGlare = routeId === context.noGlareRouteId\r\n    const color = (isNoGlare ? context.defaultColor : context.noGlareColor)\r\n    const newRenderer = {\r\n      type: 'simple',\r\n      title: '路径',\r\n      symbol: {\r\n        type: 'simple-line',\r\n        color: color,\r\n        width: isNoGlare ? 4.5 : 3\r\n      }\r\n    }\r\n    layer.renderer = newRenderer\r\n  }\r\n}\r\n\r\nexport function selectResult (context, result, isStart = true) {\r\n  console.log('用户选择了搜索结果:', result)\r\n  const simplifiedResult = {\r\n    name: result.name,\r\n    address: result.address,\r\n    wgs84_latitude: result.wgs84_latitude,\r\n    wgs84_longitude: result.wgs84_longitude,\r\n    location: [result.wgs84_longitude, result.wgs84_latitude],\r\n    baidu_index: result.baidu_index,\r\n    baidu_latitude: result.baidu_latitude,\r\n    baidu_longitude: result.baidu_longitude,\r\n    id: result.id,\r\n    label: result.label\r\n  }\r\n  let currentStart = context.selectedResultStart ? JSON.stringify(context.selectedResultStart) : null\r\n  let currentEnd = context.selectedResultEnd ? JSON.stringify(context.selectedResultEnd) : null\r\n  if (isStart) {\r\n    context.selectedResultStart = simplifiedResult\r\n    context.searchQueryStart = simplifiedResult.name\r\n    context.searchResults = []\r\n    currentStart = JSON.stringify(simplifiedResult)\r\n  } else {\r\n    context.selectedResultEnd = simplifiedResult\r\n    context.searchQueryEnd = simplifiedResult.name\r\n    context.searchResultsEnd = []\r\n    currentEnd = JSON.stringify(simplifiedResult)\r\n  }\r\n  context.$router.push({\r\n    path: '/lu-jing-gui-hua/Intermediate-page',\r\n    query: {\r\n      start: currentStart,\r\n      end: currentEnd,\r\n      date: context.selectedDate,\r\n      time: context.selectedTime,\r\n      BasemapLayer: context.BasemapName\r\n    }\r\n  })\r\n}\r\n\r\nexport function swap (context) {\r\n  context.isSwapping = true // 设置标志位\r\n  // 交换 searchQueryStart 和 searchQueryEnd\r\n  const tempQuery = context.searchQueryStart\r\n  context.searchQueryStart = context.searchQueryEnd\r\n  context.searchQueryEnd = tempQuery\r\n  // 交换 selectedResultStart 和 selectedResultEnd\r\n  const tempResult = context.selectedResultStart\r\n  context.selectedResultStart = context.selectedResultEnd\r\n  context.selectedResultEnd = tempResult\r\n  // 调用 onSearch 方法重新查询路径\r\n  context.onSearch().then(() => {\r\n    parseUrlParams(context)\r\n    context.initMap()\r\n    // 确保在交换操作完成后，更新搜索框的值\r\n    context.searchQueryStart = context.selectedResultStart.name\r\n    context.searchQueryEnd = context.selectedResultEnd.name\r\n    context.isSwapping = false // 重置标志位\r\n  }).catch(() => {\r\n    context.isSwapping = false // 确保在错误情况下也重置标志位\r\n  })\r\n}\r\n","<template>\r\n  <!-- 输入了起点和终点之后,还没有摁查询路径的画面 -->\r\n  <div class=\"lu-jing-gui-hua\">\r\n    <!-- 搜索框 -->\r\n    <!-- 外层容器 -->\r\n    <div class=\"search-containers\">\r\n      <!-- 交换的侧边栏 -->\r\n      <div class=\"revert-containers\">\r\n        <div class=\"car\"><img src='@/assets/image/map_icon/car.png'></div>\r\n        <div class=\"swap-action\">\r\n          <!-- 绑定 swap 方法到点击事件 -->\r\n          <button @click=\"swap\" title=\"切换起终点\">\r\n            <img :src=\"require('@/assets/image/map_icon/revert_new_dark.png')\" alt=\"\" class=\"revert\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <!-- 搜索起点的容器 -->\r\n      <div class=\"search-container start\">\r\n        <!-- 图片 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src='@/assets/image/map_icon/pink-circle.png' alt=\"pink\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryStart\" @input=\"onSearchInputChange($event, true)\" placeholder=\"请输入起点\" class=\"search-box search-box-start\"/>\r\n        <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete\" title=\"清空\" @click=\"clc1\">\r\n            <img src='@/assets/image/map_icon/cancel.png' alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 起点搜索结果展示 -->\r\n        <div class=\"search-results\" v-if=\"searchResults.length && searchQueryStart\" ref=\"searchResultsStart\">\r\n    <ul>\r\n      <li v-for=\"(result, index) in searchResults\" :key=\"index\" :class=\"{ 'highlighted': index === highlightedIndex }\" @click=\"selectResult(result, true)\">\r\n        {{ result.name }}\r\n      </li>\r\n        </ul>\r\n        </div>\r\n    </div>\r\n      <!-- 搜索终点的容器 -->\r\n      <div class=\"search-container end\">\r\n        <!-- 图片容器 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src='@/assets/image/map_icon/green-circle.png' alt=\"green\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryEnd\" @input=\"onSearchInputChange($event, false)\" placeholder=\"请输入终点\" class=\"search-box search-box-end\"/>\r\n         <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete\" title=\"清空\" @click=\"clc2\">\r\n            <img src='@/assets/image/map_icon/cancel.png' alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 终点搜索结果展示 -->\r\n        <div class=\"search-results\" v-if=\"searchResultsEnd.length && searchQueryEnd\" ref=\"searchResultsEnd\">\r\n    <ul>\r\n      <li v-for=\"(result, index) in searchResultsEnd\" :key=\"index\" :class=\"{ 'highlighted': index === highlightedIndex }\" @click=\"selectResult(result, false)\">\r\n        {{ result.name }}\r\n      </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"search-action\" @click=\"onSearch\" title=\"搜索\">\r\n        <img :src=\"require('@/assets/image/map_icon/search.png')\" alt=\"\" class=\"search\">\r\n      </div>\r\n    <!-- 新的覆盖层容器 -->\r\n    <div v-if=\"isLoading\" class=\"loader-overlay\">\r\n      <div class=\"loader\">\r\n      </div>\r\n    </div>\r\n    </div>\r\n  </div>\r\n  <!-- 地图展示 -->\r\n  <div id=\"viewDiv\"></div>\r\n  <div v-if=\"ismaploading\" class=\"maploader-overlay\">\r\n    <div class=\"maploader\">\r\n    </div>\r\n  </div>\r\n  <!-- 时间选择框和路径展示框 -->\r\n  <div class=\"main-container\">\r\n    <!-- 时间选择框 -->\r\n    <div class=\"choose-time\">\r\n      <div class=\"form-group\">\r\n        <label for=\"date-input\">选择日期：</label>\r\n        <input id=\"date-input\" type=\"date\" v-model=\"selectedDate\" :min=\"minDate\" :max=\"maxDate\" :class=\"{ 'invalid-date': isDateDisabled(selectedDate) }\" @change=\"handleDateChange\">\r\n        <label for=\"time-input\">选择时间：</label>\r\n        <input id=\"time-input\" type=\"time\" v-model=\"formattedTime\" @input=\"onTimeInputChange\" step=\"600\"> <!-- 600秒 = 10分钟 -->\r\n      </div>\r\n    </div>\r\n    <div>\r\n   <!-- 路线展示 -->\r\n   <transition name=\"fade\">\r\n      <div class=\"routelist\" v-show=\"isRouteListVisible\">\r\n        <ul class=\"cardlist\">\r\n          <div class=\"route\" data-index=\"1\" @click=\"highlightRoute('noGlareRouteId')\">\r\n            <div class=\"introduction\" :style=\"{ color: getColor(1) }\">无眩光路径</div>\r\n            <p class=\"intro\">\r\n              <span>用时：{{totalHours}}小时{{totalMinutes}}分钟</span> |\r\n              <!-- <span></span> -->\r\n              <span>路长：{{totalDistance}}</span>\r\n              <!-- <span></span> -->\r\n            </p>\r\n            <p class=\"intro\">\r\n              <span>途径：{{totalPass }}</span>\r\n              <!-- <span></span> -->\r\n            </p>\r\n          </div>\r\n          <div class=\"route\" data-index=\"0\" @click=\"highlightRoute('defaultRouteId')\">\r\n            <div class=\"introduction\" :style=\"{ color: getColor(0) }\">常规路径</div>\r\n            <p class=\"intro\">\r\n              <span>用时：{{noGlareTotalHours}}小时{{noGlareTotalMinutes}}分钟</span> |\r\n              <!-- <span></span> -->\r\n              <span>路长：{{noGlareTotalDistance}}</span>\r\n              <!-- <span></span> -->\r\n            </p>\r\n            <p class=\"intro\">\r\n              <span>途径：{{noGlareTotalPass}}</span>\r\n              <!-- <span></span> -->\r\n            </p>\r\n          </div>\r\n        </ul>\r\n        <span class=\"toggle-button\" @click=\"toggleRouteList\" title=\"隐藏\">\r\n          <img src='@/assets/image/map_icon/cancel.png' alt=\"delete1\">\r\n        </span>\r\n      </div>\r\n    </transition>\r\n    <button v-if=\"!isRouteListVisible\" @click=\"toggleRouteList\" class=\"open-button\">展开路线结果</button>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Map from '@geoscene/core/Map.js'\r\nimport MapView from '@geoscene/core/views/MapView.js'\r\nimport Graphic from '@geoscene/core/Graphic'\r\nimport Point from '@geoscene/core/geometry/Point.js'\r\nimport GraphicsLayer from '@geoscene/core/layers/GraphicsLayer'\r\nimport FeatureLayer from '@geoscene/core/layers/FeatureLayer'\r\nimport Extent from '@geoscene/core/geometry/Extent'\r\nimport axios from 'axios'\r\nimport { markRaw } from 'vue'\r\nimport BasemapGallery from '@geoscene/core/widgets/BasemapGallery.js'\r\nimport Compass from '@geoscene/core/widgets/Compass.js'\r\nimport ScaleBar from '@geoscene/core/widgets/ScaleBar.js'\r\nimport DistanceMeasurement2D from '@geoscene/core/widgets/DistanceMeasurement2D.js'\r\nimport LayerList from '@geoscene/core/widgets/LayerList.js'\r\nimport { parseUrlParams, toggleRouteList, getColor, highlightRoute, selectResult, swap } from '@/assets/share_js/routeview_public'\r\nimport { handleKeydown, updateTime, clc1, clc2, isDateDisabled, handleDateChange, onTimeInputChange, onSearchInputChange } from '@/assets/share_js/routeplanning_all'\r\n\r\nexport default {\r\n  name: 'RouteView',\r\n  data () {\r\n    return {\r\n      searchQueryStart: '',\r\n      searchQueryEnd: '',\r\n      selectedResultStart: null,\r\n      selectedResultEnd: null,\r\n      searchResults: [],\r\n      searchResultsEnd: [],\r\n      isLoading: false,\r\n      ismaploading: false,\r\n      totalHours: 0,\r\n      totalMinutes: 0,\r\n      totalDistance: '0千米',\r\n      selectedDate: '', // 用户选择的日期\r\n      selectedTime: '', // 用户选择的时间\r\n      noGlareTotalHours: 0, // 无眩光路径的总时长（小时）\r\n      noGlareTotalMinutes: 0, // 无眩光路径的总时长（分钟）\r\n      highlightedIndex: -1, // 高亮的搜索结果索引\r\n      noGlareTotalDistance: '0千米', // 无眩光路径的总距离\r\n      highlightedRouteId: null, // 当前高亮显示的路径ID\r\n      routeLayers: {}, // 存储路径的FeatureLayer实例\r\n      // 闪烁路径的相关数据\r\n      blinkingTimers: {}, // 存储每条路径的闪烁定时器 ID\r\n      highlightedColor: [0, 123, 255, 1], // 浅蓝色，完全不透明\r\n      highlightedBlinkColor: [0, 123, 255, 0.2], // 浅蓝色，半透明\r\n      noGlareColor: [244, 96, 108], // 无眩光路径为红色\r\n      defaultColor: [25, 202, 173], // 常规路径为绿色\r\n      noGlareRouteId: 'noGlareRouteId',\r\n      defaultRouteId: 'defaultRouteId',\r\n      isRouteListVisible: true, // 路线列表是否可见\r\n      totalPass: '',\r\n      noGlareTotalPass: '',\r\n      BasemapName: null\r\n    }\r\n  },\r\n  // 在组件挂载时初始化地图\r\n  mounted () {\r\n    // this.parseUrlParams()\r\n    this.created()\r\n    this.initMap()\r\n    if (this.$route.query.start && this.$route.query.end) {\r\n      this.selectedResultStart = JSON.parse(this.$route.query.start)\r\n      this.selectedResultEnd = JSON.parse(this.$route.query.end)\r\n    }\r\n    parseUrlParams(this)\r\n    // 设置定时器，每隔1分钟更新时间\r\n    window.addEventListener('keydown', this.handleKeydown)\r\n  },\r\n  beforeUnmount () {\r\n    window.removeEventListener('keydown', this.handleKeydown)\r\n  },\r\n  computed: {\r\n    minDate () {\r\n      return '2024-01-01'\r\n    },\r\n    maxDate () {\r\n      return '2024-12-31'\r\n    },\r\n    formattedTime () {\r\n      // 格式化时间为10分钟间隔\r\n      if (!this.selectedTime) return ''\r\n      const [hours, minutes] = this.selectedTime.split(':').map(Number)\r\n      const roundedMinutes = Math.floor(minutes / 10) * 10\r\n      return `${String(hours).padStart(2, '0')}:${String(roundedMinutes).padStart(2, '0')}`\r\n    }\r\n  },\r\n  methods: {\r\n    toggleRouteList () {\r\n      toggleRouteList(this)\r\n    },\r\n    getColor (index) {\r\n      return getColor(index)\r\n    },\r\n    highlightRoute (routeId) {\r\n      highlightRoute(this, routeId)\r\n    },\r\n    onTimeInputChange (event) {\r\n      onTimeInputChange(this, event)\r\n    },\r\n    isDateDisabled (date) {\r\n      return isDateDisabled(this, date)\r\n    },\r\n    handleDateChange (event) {\r\n      handleDateChange(this, event)\r\n    },\r\n    handleKeydown (event) {\r\n      handleKeydown(this, event)\r\n    },\r\n    updateTime () {\r\n      updateTime(this)\r\n    },\r\n    clc1 () {\r\n      clc1(this)\r\n    },\r\n    clc2 () {\r\n      clc2(this)\r\n    },\r\n    swap () {\r\n      swap(this)\r\n    },\r\n    onSearchInputChange (event, isStart) {\r\n      onSearchInputChange(this, event, isStart)\r\n    },\r\n    selectResult (result, isStart = true) {\r\n      selectResult(this, result, isStart)\r\n    },\r\n    onSearch () {\r\n      return new Promise((resolve, reject) => {\r\n        // 检查是否两个结果都已选择\r\n        if (this.selectedResultStart && this.selectedResultEnd) {\r\n          // 显示加载动画\r\n          this.isLoading = true\r\n          // 构造包含location属性的起点和终点对象\r\n          const startWithLocation = {\r\n            ...this.selectedResultStart,\r\n            location: [this.selectedResultStart.wgs84_longitude, this.selectedResultStart.wgs84_latitude]\r\n          }\r\n          const endWithLocation = {\r\n            ...this.selectedResultEnd,\r\n            location: [this.selectedResultEnd.wgs84_longitude, this.selectedResultEnd.wgs84_latitude]\r\n          }\r\n          const formattedTime = this.selectedTime.length === 5 ? `${this.selectedTime}:00` : this.selectedTime\r\n          console.log('Formatted Time:', formattedTime) // 打印时间参数\r\n          // 发送请求到后端进行路径规划\r\n          axios.post(`${process.env.VUE_APP_API_URL}/api/route/plan`, { start: startWithLocation, end: endWithLocation, date: this.selectedDate, time: formattedTime })\r\n            .then(response => {\r\n              // 后端返回的路径规划结果ID\r\n              const defaultRoutePlanId = response.data.default_id\r\n              const timeBasedRoutePlanId = response.data.time_based_id\r\n              console.log('默认路径规划结果ID:', defaultRoutePlanId)\r\n              console.log('基于时间的路径规划结果ID:', timeBasedRoutePlanId)\r\n              console.log('路径规划成功，时间日期是:', this.selectedDate, this.selectedTime)\r\n              // 隐藏加载动画\r\n              this.isLoading = false\r\n              // 使用Vue Router跳转到结果页面，并传递路径规划结果ID\r\n              this.$router.push({\r\n                path: '/lu-jing-gui-hua/route',\r\n                query: {\r\n                  start: JSON.stringify(startWithLocation),\r\n                  end: JSON.stringify(endWithLocation),\r\n                  default_id: defaultRoutePlanId,\r\n                  time_based_id: timeBasedRoutePlanId,\r\n                  date: this.selectedDate,\r\n                  time: formattedTime,\r\n                  BasemapLayer: this.BasemapName\r\n                }\r\n              })\r\n              // 更新搜索框的值\r\n              this.searchQueryStart = startWithLocation.name\r\n              this.searchQueryEnd = endWithLocation.name\r\n              resolve()\r\n            })\r\n            .catch(error => {\r\n              console.error(error)\r\n              // 隐藏加载动画\r\n              this.isLoading = false\r\n              // 错误处理，例如显示提示信息\r\n              alert('路径规划失败，请稍后再试。')\r\n              reject(error)\r\n            })\r\n        } else {\r\n          // 如果起点或终点未选择，显示提示信息\r\n          alert('请确保起点和终点都已选择。')\r\n          reject(new Error('请确保起点和终点都已选择。'))\r\n        }\r\n      })\r\n    },\r\n    // 初始化地图\r\n    initMap (basemapName) {\r\n      const map = new Map({\r\n        basemap: basemapName || this.BasemapName || 'tianditu-vector' // 使用适合的底图\r\n      })\r\n      this.map = map\r\n      // console.log('当前底图名称:', this.BasemapName, basemapName)\r\n      this.view = new MapView({\r\n        container: 'viewDiv', // 使用正确的容器ID\r\n        map: map,\r\n        center: [114.3, 30.7], // 默认中心点坐标\r\n        zoom: 4, // 默认缩放级别\r\n        constraints: {\r\n          geometry: {\r\n            type: 'extent',\r\n            xmin: 113.6,\r\n            ymin: 29.9,\r\n            xmax: 115.0,\r\n            ymax: 31.3\r\n          },\r\n          minScale: 500,\r\n          maxScale: 2000000,\r\n          rotationEnabled: false,\r\n          snapToZoom: false\r\n        }\r\n      })\r\n      // 创建 BasemapGallery 实例\r\n      const basemapGallery = new BasemapGallery({\r\n        view: this.view,\r\n        source: {\r\n          query: {\r\n            title: '\"Basemaps for Developers\" AND owner:geoscenedev'\r\n          }\r\n        }\r\n      })\r\n      // 监听底图选择事件\r\n      basemapGallery.watch('activeBasemap', (newBasemap) => {\r\n        this.handleBasemapChange(newBasemap)\r\n      })\r\n      const compass = new Compass({\r\n        view: this.view\r\n      })\r\n      // 创建 ScaleBar 实例\r\n      const scaleBar = new ScaleBar({\r\n        view: this.view,\r\n        unit: 'metric', // 使用公制单位\r\n        style: 'ruler' // 使用标尺样式\r\n      })\r\n      // 创建 DistanceMeasurement2D 实例\r\n      const distanceMeasurement2D = new DistanceMeasurement2D({\r\n        view: this.view,\r\n        unit: 'metric',\r\n        unitOptions: {\r\n          metric: ['kilometers', 'meters'],\r\n          nonMetric: ['miles', 'feet']\r\n        },\r\n        iconClass: 'esri-icon-measure-line' // 设置图标类\r\n      })\r\n      // 创建 LayerList 实例\r\n      const layerList = new LayerList({\r\n        view: this.view\r\n      })\r\n      // 将 DistanceMeasurement2D 添加到地图视图的左下角\r\n      this.view.ui.add(distanceMeasurement2D, {\r\n        position: 'bottom-leading',\r\n        index: 0 // 确保它在最上面\r\n      })\r\n      // 将 BasemapGallery 添加到地图视图的右下角\r\n      this.view.ui.add(basemapGallery, {\r\n        position: 'bottom-right',\r\n        index: 0\r\n      })\r\n      // 将 LayerList 添加到地图视图的右下角\r\n      this.view.ui.add(layerList, {\r\n        position: 'bottom-right',\r\n        index: 1\r\n      })\r\n      // 移动缩放控件到左下角\r\n      this.view.ui.move('zoom', {\r\n        position: 'bottom-left',\r\n        index: 1\r\n      })\r\n      // 将指南针添加到地图视图的左下角\r\n      this.view.ui.add(compass, {\r\n        position: 'bottom-left',\r\n        index: 2\r\n      })\r\n      // 将 ScaleBar 添加到地图视图的左下角\r\n      this.view.ui.add(scaleBar, {\r\n        position: 'bottom-left',\r\n        index: 3\r\n      })\r\n\r\n      // 创建一个新的GraphicsLayer实例，以便在地图上绘制点\r\n      const graphicsLayer = new GraphicsLayer(\r\n        {\r\n          title: '起点与终点'\r\n        }\r\n      )\r\n      map.add(graphicsLayer)\r\n\r\n      // 创建 FeatureLayer 实例\r\n      const featureLayer = new FeatureLayer({\r\n        url: 'https://www.geosceneonline.cn/server/rest/services/Hosted/wuhan_village/FeatureServer',\r\n        title: '武汉县区面', // 设置图层名称\r\n        renderer: {\r\n          type: 'simple', // 使用简单渲染器\r\n          title: '县区边界',\r\n          symbol: {\r\n            type: 'simple-fill', // 使用简单填充符号\r\n            color: [0, 0, 0, 0], // 填充颜色透明\r\n            outline: {\r\n              color: [0, 0, 0, 1], // 轮廓颜色红色\r\n              width: 1\r\n            }\r\n          }\r\n        },\r\n        popupTemplate: {\r\n          content: [{\r\n            type: 'fields',\r\n            fieldInfos: [{\r\n              fieldName: '县区name',\r\n              label: '县区名称'\r\n            }]\r\n          }]\r\n        }\r\n      })\r\n      // 将 FeatureLayer 添加到地图\r\n      map.add(featureLayer)\r\n      map.add(graphicsLayer)\r\n\r\n      this.view.when(() => {\r\n        this.drawPoints(graphicsLayer)\r\n        this.adjustView()\r\n        this.drawRoutes(map)\r\n      }).catch((err) => {\r\n        console.error('MapView initialization error:', err)\r\n      })\r\n    },\r\n    // 处理底图选择\r\n    handleBasemapChange (basemap) {\r\n      const basemapMapping = {\r\n        '天地图-矢量（球面墨卡托投影）': 'tianditu-vector',\r\n        '天地图-影像（球面墨卡托投影）': 'tianditu-image',\r\n        '天地图-地形（球面墨卡托投影）': 'tianditu-topography'\r\n      }\r\n      // 检查 basemap.title 是否是中文\r\n      if (basemapMapping[basemap.title]) {\r\n        this.BasemapName = basemapMapping[basemap.title]\r\n      } else {\r\n        this.BasemapName = basemap.title\r\n      }\r\n      console.log('Basemap changed:', this.BasemapName)\r\n      const urlParams = new URLSearchParams(window.location.search)\r\n      urlParams.set('BasemapLayer', this.BasemapName)\r\n      window.history.replaceState({}, '', `${window.location.pathname}?${urlParams}`)\r\n    },\r\n    created () {\r\n      const BasemapLayer = this.$route.query.BasemapLayer\r\n      const basemapMapping = {\r\n        '天地图-矢量（球面墨卡托投影）': 'tianditu-vector',\r\n        '天地图-影像（球面墨卡托投影）': 'tianditu-image',\r\n        '天地图-地形（球面墨卡托投影）': 'tianditu-topography',\r\n        '天地图-矢量（含注记）（球面墨卡托投影）': 'tianditu-vector'\r\n      }\r\n\r\n      // 如果有底图参数，进行解析\r\n      if (BasemapLayer) {\r\n        // 检查 BasemapLayer 是否是中文\r\n        if (basemapMapping[BasemapLayer]) {\r\n          this.BasemapName = basemapMapping[BasemapLayer]\r\n        } else {\r\n          this.BasemapName = BasemapLayer\r\n        }\r\n      }\r\n      console.log('BasemapLayer is update', this.BasemapName)\r\n    },\r\n    // 调整视图以适应起点和终点\r\n    adjustView () {\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        const padding = 0.01 // 调整这个值以增加或减少边界的放宽程度\r\n        const extent = new Extent({\r\n          xmin: Math.min(this.selectedResultStart.location[0], this.selectedResultEnd.location[0]) - 10 * padding,\r\n          ymin: Math.min(this.selectedResultStart.location[1], this.selectedResultEnd.location[1]) - 10 * padding,\r\n          xmax: Math.max(this.selectedResultStart.location[0], this.selectedResultEnd.location[0]) + 10 * padding,\r\n          ymax: Math.max(this.selectedResultStart.location[1], this.selectedResultEnd.location[1]) + 10 * padding\r\n        })\r\n        this.view.goTo(extent).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      } else if (this.selectedResultStart) {\r\n        this.view.goTo({\r\n          center: [this.selectedResultStart.location[0], this.selectedResultStart.location[1]],\r\n          zoom: 10\r\n        }).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      } else if (this.selectedResultEnd) {\r\n        this.view.goTo({\r\n          center: [this.selectedResultEnd.location[0], this.selectedResultEnd.location[1]],\r\n          zoom: 10\r\n        }).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      }\r\n    },\r\n    drawPoints (graphicsLayer) {\r\n      // 检查this.$route.query.start和this.$route.query.end是否定义\r\n      if (!this.$route.query.start || !this.$route.query.end) {\r\n        console.error('Start or end point is undefined.')\r\n        return // 如果未定义，直接返回\r\n      }\r\n      const start = JSON.parse(this.$route.query.start)\r\n      const end = JSON.parse(this.$route.query.end)\r\n      // 检查start和end是否有location属性\r\n      if (!start.location || !end.location) {\r\n        console.error('Start or end point does not have a location.')\r\n        return // 如果没有location属性，直接返回\r\n      }\r\n      // 创建起点和终点的Point对象\r\n      const startPoint = new Point({\r\n        longitude: start.location[0],\r\n        latitude: start.location[1]\r\n      })\r\n      const endPoint = new Point({\r\n        longitude: end.location[0],\r\n        latitude: end.location[1]\r\n      })\r\n      const startGraphic = new Graphic({\r\n        geometry: startPoint,\r\n        title: '起点',\r\n        symbol: {\r\n          type: 'simple-marker', // autocasts as new SimpleMarkerSymbol()\r\n          color: 'red',\r\n          size: '20px'\r\n        },\r\n        // 添加popupTemplate\r\n        popupTemplate: {\r\n          title: '起点信息',\r\n          content: [\r\n            {\r\n              type: 'fields',\r\n              fieldInfos: [\r\n                {\r\n                  fieldName: 'address',\r\n                  label: '地址'\r\n                },\r\n                {\r\n                  fieldName: 'name',\r\n                  label: '名称'\r\n                },\r\n                // 可以继续添加更多字段\r\n                {\r\n                  fieldName: 'wgs84_latitude',\r\n                  label: 'WGS84纬度'\r\n                },\r\n                {\r\n                  fieldName: 'wgs84_longitude',\r\n                  label: 'WGS84经度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_index',\r\n                  label: '百度索引'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_latitude',\r\n                  label: '百度纬度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_longitude',\r\n                  label: '百度经度'\r\n                },\r\n                {\r\n                  fieldName: 'id',\r\n                  label: 'ID'\r\n                },\r\n                {\r\n                  fieldName: 'label',\r\n                  label: '标签'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        attributes: start\r\n      })\r\n      const endGraphic = new Graphic({\r\n        geometry: endPoint,\r\n        title: '终点',\r\n        symbol: {\r\n          type: 'simple-marker',\r\n          color: 'green',\r\n          size: '20px'\r\n        },\r\n        // 添加popupTemplate\r\n        popupTemplate: {\r\n          title: '终点信息',\r\n          content: [\r\n            {\r\n              type: 'fields',\r\n              fieldInfos: [\r\n                {\r\n                  fieldName: 'address',\r\n                  label: '地址'\r\n                },\r\n                {\r\n                  fieldName: 'name',\r\n                  label: '名称'\r\n                },\r\n                // 可以继续添加更多字段\r\n                {\r\n                  fieldName: 'wgs84_latitude',\r\n                  label: 'WGS84纬度'\r\n                },\r\n                {\r\n                  fieldName: 'wgs84_longitude',\r\n                  label: 'WGS84经度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_index',\r\n                  label: '百度索引'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_latitude',\r\n                  label: '百度纬度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_longitude',\r\n                  label: '百度经度'\r\n                },\r\n                {\r\n                  fieldName: 'id',\r\n                  label: 'ID'\r\n                },\r\n                {\r\n                  fieldName: 'label',\r\n                  label: '标签'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        attributes: end\r\n      })\r\n      // 将起点和终点添加到图形图层\r\n      graphicsLayer.addMany([startGraphic, endGraphic])\r\n    },\r\n    drawRoutes (map) {\r\n      const defaultRouteId = this.$route.query.default_id // 从URL获取默认路线ID\r\n      const timeBasedRouteId = this.$route.query.time_based_id // 从URL获取基于时间的路线ID\r\n\r\n      if (!defaultRouteId && !timeBasedRouteId) {\r\n        console.error('Route IDs are undefined.')\r\n        return\r\n      }\r\n      if (defaultRouteId) {\r\n        this.fetchAndDrawRoute(map, defaultRouteId, [25, 202, 173], true) // 绿色，耗时少路径\r\n      }\r\n      if (timeBasedRouteId) {\r\n        this.fetchAndDrawRoute(map, timeBasedRouteId, [244, 96, 108]) // 红色，无眩光路径\r\n      }\r\n    },\r\n    fetchAndDrawRoute (map, routeId, color, isNoGlareRoute = false) {\r\n      const geojsonUrl = `${process.env.VUE_APP_API_URL}/api/get_geojson/${routeId}`\r\n      fetch(geojsonUrl) // 使用fetch API获取GeoJSON文件\r\n        .then(response => response.json()) // 将响应转换为JSON\r\n        .then(data => {\r\n          let totalLength = 0\r\n          let totalCost = 0\r\n          const roadLengths = {}\r\n\r\n          const features = data.features.map((feature, index) => {\r\n            if (feature.properties.cost !== 99999) {\r\n              totalLength += feature.properties.length\r\n              totalCost += feature.properties.cost\r\n            }\r\n            if (!feature.properties.name.includes('未知')) {\r\n              if (!roadLengths[feature.properties.name]) {\r\n                roadLengths[feature.properties.name] = { length: 0, order: index }\r\n              }\r\n              roadLengths[feature.properties.name].length += feature.properties.length\r\n            }\r\n            return {\r\n              geometry: {\r\n                type: 'polyline',\r\n                paths: feature.geometry.coordinates\r\n              },\r\n              attributes: {\r\n                ...feature.properties,\r\n                id: index, // 为每个要素生成唯一的ID\r\n                routeType: isNoGlareRoute ? '耗时少路径' : '无眩光路径' // 添加路线类型\r\n              }\r\n            }\r\n          })\r\n          const sortedRoads = Object.entries(roadLengths)\r\n            .sort((a, b) => b[1].length - a[1].length || a[1].order - b[1].order)\r\n          const topPassRoads = sortedRoads.slice(0, 3).map(road => road[0]).join('->')\r\n\r\n          const geojsonLayer = new FeatureLayer({ // 创建FeatureLayer图层\r\n            title: isNoGlareRoute ? '耗时少路径' : '无眩光路径',\r\n            source: features,\r\n            renderer: {\r\n              type: 'simple', // 使用简单渲染器\r\n              title: isNoGlareRoute ? '耗时少路径' : '无眩光路径',\r\n              symbol: {\r\n                type: 'simple-line', // 使用简单线符号\r\n                color: color, // 使用传入的颜色\r\n                width: isNoGlareRoute ? 4.5 : 3 // 根据是否为无眩光路径设置宽度\r\n              }\r\n            },\r\n            objectIdField: 'id', // 必须指定一个唯一的字段作为ObjectId\r\n            fields: [\r\n              { name: 'id', type: 'oid' },\r\n              { name: 'seq', type: 'integer' },\r\n              { name: 'path_seq', type: 'integer' },\r\n              { name: 'node', type: 'integer' },\r\n              { name: 'edge', type: 'integer' },\r\n              { name: 'cost', type: 'double' },\r\n              { name: 'agg_cost', type: 'double' },\r\n              { name: 'length', type: 'double' },\r\n              { name: 'name', type: 'string' },\r\n              { name: 'maxspeed', type: 'integer' },\r\n              { name: 'routeType', type: 'string' } // 添加routeType字段\r\n            ],\r\n            popupTemplate: {\r\n              title: '{routeType} - {name}', // 显示路线类型和路名\r\n              content: [\r\n                {\r\n                  type: 'text',\r\n                  text: `总距离: ${(totalLength / 1000).toFixed(2)} km<br>总耗时: ${(totalCost / 3600).toFixed(2)} 小时`\r\n                },\r\n                {\r\n                  type: 'fields',\r\n                  fieldInfos: [\r\n                    {\r\n                      fieldName: 'length',\r\n                      label: '长度（米）'\r\n                    },\r\n                    {\r\n                      fieldName: 'cost',\r\n                      label: '耗时（秒）'\r\n                    },\r\n                    {\r\n                      fieldName: 'maxspeed',\r\n                      label: '最大速度'\r\n                    },\r\n                    {\r\n                      fieldName: 'name',\r\n                      label: '名称'\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          })\r\n          const rawGeojsonLayer = markRaw(geojsonLayer)\r\n          map.layers.add(rawGeojsonLayer)\r\n          if (totalCost < 3600) {\r\n            totalCost += 60\r\n          }\r\n          const hours = Math.floor(totalCost / 3600)\r\n          const minutes = Math.floor((totalCost % 3600) / 60)\r\n          let distance\r\n          if (totalLength < 1000) {\r\n            distance = `${totalLength.toFixed(2)}米`\r\n          } else {\r\n            distance = `${(totalLength / 1000).toFixed(2)}千米`\r\n          }\r\n          // 根据是否为无眩光路径来存储结果\r\n          if (isNoGlareRoute) {\r\n            this.noGlareTotalHours = hours\r\n            console.log('Hours:', hours)\r\n            this.noGlareTotalMinutes = minutes\r\n            this.noGlareTotalDistance = distance\r\n            this.noGlareTotalPass = topPassRoads\r\n            this.routeLayers.noGlareRouteId = geojsonLayer\r\n          } else {\r\n            this.totalHours = hours\r\n            this.totalMinutes = minutes\r\n            this.totalDistance = distance\r\n            this.totalPass = topPassRoads\r\n            this.routeLayers.defaultRouteId = geojsonLayer\r\n          }\r\n        })\r\n        .catch(error => console.error('Error loading the geojson file:', error))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style src=\"@/assets/share_css/routeplanning.css\">\r\n\r\n</style>\r\n","import { render } from \"./RouteViewsw.vue?vue&type=template&id=490fad7c\"\nimport script from \"./RouteViewsw.vue?vue&type=script&lang=js\"\nexport * from \"./RouteViewsw.vue?vue&type=script&lang=js\"\n\nimport \"@/assets/share_css/routeplanning.css?vue&type=style&index=0&lang=css&external\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["parseUrlParams","context","urlParams","URLSearchParams","window","location","search","startParam","get","endParam","dateParam","timeParam","defaultRouteIdParam","timeBasedRouteIdParam","startObj","JSON","parse","decodeURIComponent","address","searchQueryStart","name","e","console","error","endObj","searchQueryEnd","selectedDate","selectedTime","isTimeFromUrl","defaultRouteId","timeBasedRouteId","created","toggleRouteList","isRouteListVisible","getColor","index","highlightRoute","routeId","highlightedRouteId","resetRouteStyle","blinkingTimers","clearInterval","layer","routeLayers","color","highlightedColor","newRenderer","type","title","symbol","width","renderer","startBlinking","isBlinkOn","originalColor","noGlareRouteId","noGlareColor","defaultColor","intervalId","setInterval","highlightedBlinkColor","setTimeout","finalRenderer","isNoGlare","selectResult","result","isStart","log","simplifiedResult","wgs84_latitude","wgs84_longitude","baidu_index","baidu_latitude","baidu_longitude","id","label","currentStart","selectedResultStart","stringify","currentEnd","selectedResultEnd","searchResults","searchResultsEnd","$router","push","path","query","start","end","date","time","BasemapLayer","BasemapName","swap","isSwapping","tempQuery","tempResult","onSearch","then","initMap","catch","class","key","ref","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","src","_imports_0","_hoisted_4","onClick","_cache","args","$options","require","alt","_hoisted_5","_hoisted_6","_imports_1","$event","$data","onInput","onSearchInputChange","placeholder","_hoisted_7","clc1","_imports_2","length","_hoisted_8","_renderList","_normalizeClass","highlightedIndex","_hoisted_9","_createCommentVNode","_hoisted_10","_imports_3","_hoisted_11","clc2","_hoisted_12","_hoisted_13","_hoisted_14","isLoading","_hoisted_15","ismaploading","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","for","min","minDate","max","maxDate","isDateDisabled","onChange","handleDateChange","_hoisted_20","formattedTime","onTimeInputChange","step","_createVNode","_Transition","default","_withCtx","_hoisted_21","_hoisted_22","style","_normalizeStyle","_hoisted_23","_toDisplayString","totalHours","totalMinutes","_createTextVNode","totalDistance","_hoisted_24","totalPass","_hoisted_25","noGlareTotalHours","noGlareTotalMinutes","noGlareTotalDistance","_hoisted_26","noGlareTotalPass","_","data","mounted","this","$route","addEventListener","handleKeydown","beforeUnmount","removeEventListener","computed","hours","minutes","split","map","Number","roundedMinutes","Math","floor","String","padStart","methods","event","updateTime","Promise","resolve","reject","startWithLocation","endWithLocation","axios","post","response","defaultRoutePlanId","default_id","timeBasedRoutePlanId","time_based_id","alert","Error","basemapName","Map","basemap","view","MapView","container","center","zoom","constraints","geometry","xmin","ymin","xmax","ymax","minScale","maxScale","rotationEnabled","snapToZoom","basemapGallery","BasemapGallery","source","watch","newBasemap","handleBasemapChange","compass","Compass","scaleBar","ScaleBar","unit","distanceMeasurement2D","DistanceMeasurement2D","unitOptions","metric","nonMetric","iconClass","layerList","LayerList","ui","add","position","move","graphicsLayer","GraphicsLayer","featureLayer","FeatureLayer","url","outline","popupTemplate","content","fieldInfos","fieldName","when","drawPoints","adjustView","drawRoutes","err","basemapMapping","set","history","replaceState","pathname","padding","extent","Extent","goTo","startPoint","Point","longitude","latitude","endPoint","startGraphic","Graphic","size","attributes","endGraphic","addMany","fetchAndDrawRoute","isNoGlareRoute","geojsonUrl","fetch","json","totalLength","totalCost","roadLengths","features","feature","properties","cost","includes","order","paths","coordinates","routeType","sortedRoads","Object","entries","sort","a","b","topPassRoads","slice","road","join","geojsonLayer","objectIdField","fields","text","toFixed","rawGeojsonLayer","markRaw","layers","distance","__exports__","render"],"sourceRoot":""}