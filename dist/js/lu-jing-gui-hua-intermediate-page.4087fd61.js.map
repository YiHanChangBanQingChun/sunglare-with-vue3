{"version":3,"file":"js/lu-jing-gui-hua-intermediate-page.4087fd61.js","mappings":"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","sources":["webpack://sun-glare-project/./src/views/IntermediatepageView.vue","webpack://sun-glare-project/./src/views/IntermediatepageView.vue?2cfd","webpack://sun-glare-project/./node_modules/@geoscene/core/layers/GraphicsLayer.js"],"sourcesContent":["<template>\r\n<div class=\"lu-jing-gui-hua\">\r\n  <div class=\"text\">\r\n    <h1>这个页面是放单选情况的</h1>\r\n  </div>\r\n    <!-- 搜索框 -->\r\n    <!-- 外层容器 -->\r\n    <div class=\"search-containers\">\r\n     <div class=\"search-container start\">\r\n        <input type=\"text\" v-model=\"searchQueryStart\" @input=\"onSearchInputChange($event, true)\" placeholder=\"搜索起点...\" class=\"search-box search-box-start\"/>\r\n        <div class=\"search-results\" v-if=\"searchResults.length && searchQueryStart\">\r\n        <ul>\r\n            <li v-for=\"(result, index) in searchResults\" :key=\"index\" @click=\"selectResult(result, true)\">\r\n            {{ result.name }}\r\n            </li>\r\n        </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"search-container end\">\r\n        <input type=\"text\" v-model=\"searchQueryEnd\" @input=\"onSearchInputChange($event, false)\" placeholder=\"搜索终点...\" class=\"search-box search-box-end\"/>\r\n        <div class=\"search-results\" v-if=\"searchResultsEnd.length && searchQueryEnd\">\r\n        <ul>\r\n            <li v-for=\"(result, index) in searchResultsEnd\" :key=\"index\" @click=\"selectResult(result, false)\">\r\n            {{ result.name }}\r\n            </li>\r\n        </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"search-action\">\r\n        <button @click=\"clcSearch\">重新选择</button>\r\n        <button @click=\"onSearch\">查询路径</button>\r\n    </div>\r\n    </div>\r\n    <!-- 地图容器 -->\r\n    <div id=\"mapViewDiv\" style=\"height: 560px;\"></div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport Map from '@geoscene/core/Map.js'\r\nimport MapView from '@geoscene/core/views/MapView.js'\r\nimport Graphic from '@geoscene/core/Graphic'\r\nimport Point from '@geoscene/core/geometry/Point.js'\r\nimport GraphicsLayer from '@geoscene/core/layers/GraphicsLayer'\r\n\r\nexport default {\r\n  name: 'IntermediatePageView',\r\n  data () {\r\n    return {\r\n      selectedResultStart: null, // 选择的起点\r\n      selectedResultEnd: null, // 选择的终点\r\n      searchQueryStart: '', // 起点搜索查询字符串\r\n      searchQueryEnd: '', // 终点搜索查询字符串\r\n      searchResults: [], // 起点搜索结果\r\n      searchResultsEnd: [] // 终点搜索结果\r\n    }\r\n  },\r\n  // 在组件挂载时初始化地图\r\n  mounted () {\r\n    // 初始化地图\r\n    this.initMap()\r\n    if (this.$route.query.start) {\r\n      // 如果URL中有起点参数，解析并设置为选中结果\r\n      this.selectedResultStart = JSON.parse(this.$route.query.start)\r\n    }\r\n    if (this.$route.query.end) {\r\n      // 如果URL中有终点参数，解析并设置为选中结果\r\n      this.selectedResultEnd = JSON.parse(this.$route.query.end)\r\n    }\r\n    // 解析URL参数\r\n    this.parseUrlParams()\r\n  },\r\n  methods: {\r\n    // 点击重新选择按钮时的处理函数\r\n    clcSearch () {\r\n      // 使用Vue Router进行页面跳转\r\n      this.$router.push('/lu-jing-gui-hua')\r\n    },\r\n    // 解析URL参数\r\n    parseUrlParams () {\r\n      // 获取URL中的查询参数\r\n      const urlParams = new URLSearchParams(window.location.search)\r\n      const startParam = urlParams.get('start')\r\n      const endParam = urlParams.get('end')\r\n      // 如果有起点参数，进行解析\r\n      if (startParam) {\r\n        try {\r\n          const startObj = JSON.parse(decodeURIComponent(startParam))\r\n          if (startObj && startObj.address) {\r\n            this.searchQueryStart = startObj.name\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing start parameter:', e)\r\n        }\r\n      }\r\n      // 如果有终点参数，进行解析\r\n      if (endParam) {\r\n        try {\r\n          const endObj = JSON.parse(decodeURIComponent(endParam))\r\n          if (endObj && endObj.address) {\r\n            this.searchQueryEnd = endObj.name // 绑定终点查询字符串\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing end parameter:', e)\r\n        }\r\n      }\r\n    },\r\n    // 处理搜索框输入变化\r\n    onSearchInputChange (event, isStart) {\r\n      // 获取搜索框的值\r\n      const query = event.target.value\r\n      const searchResultsField = isStart ? 'searchResults' : 'searchResultsEnd'\r\n      // 检查是否是输入法临时输入\r\n      if (query.includes(\"'\")) {\r\n        console.log('输入法临时输入，不发送请求')\r\n        return\r\n      }\r\n      // 发送请求获取搜索结果\r\n      if (query.length >= 2) {\r\n        // 使用的是本地的Flask后端，需要根据实际情况修改URL，结合后端接口的标识使用不同的URL\r\n        fetch('http://127.0.0.1:5000/search', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ searchQueryStart: query })\r\n        })\r\n        // 解析JSON响应\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            this[searchResultsField] = data\r\n          })\r\n          .catch((error) => {\r\n            console.error('错误:', error)\r\n          })\r\n      } else {\r\n        // 清空搜索结果\r\n        this[searchResultsField] = []\r\n      }\r\n    },\r\n    // 选择搜索结果\r\n    selectResult (result, isStart = true) {\r\n      // poi所含的信息\r\n      const simplifiedResult = {\r\n        name: result.name,\r\n        address: result.address,\r\n        wgs84_latitude: result.wgs84_latitude,\r\n        wgs84_longitude: result.wgs84_longitude,\r\n        location: [result.wgs84_longitude, result.wgs84_latitude],\r\n        baidu_index: result.baidu_index,\r\n        baidu_latitude: result.baidu_latitude,\r\n        baidu_longitude: result.baidu_longitude,\r\n        id: result.id,\r\n        label: result.label\r\n      }\r\n      // 检查是否是更新操作，具体逻辑是检查是否已经有选择的结果，\r\n      // 如果有则更新url，否则添加，但目前有点问题，更新好像不行，\r\n      // 另外搞了个clcSearch函数，直接跳转回routeplanning页面\r\n      let isUpdate = false\r\n      if (isStart && this.selectedResultStart) {\r\n        isUpdate = true\r\n        this.selectedResultStart = simplifiedResult\r\n        this.searchQueryStart = simplifiedResult.name\r\n        this.searchResults = []\r\n      } else if (!isStart && this.selectedResultEnd) {\r\n        isUpdate = true\r\n        this.selectedResultEnd = simplifiedResult\r\n        this.searchQueryEnd = simplifiedResult.name\r\n        this.searchResultsEnd = []\r\n      } else {\r\n        // 设置选中结果并清空搜索结果\r\n        if (isStart) {\r\n          this.selectedResultStart = simplifiedResult\r\n          this.searchQueryStart = simplifiedResult.name\r\n          this.searchResults = []\r\n        } else {\r\n          this.selectedResultEnd = simplifiedResult\r\n          this.searchQueryEnd = simplifiedResult.name\r\n          this.searchResultsEnd = []\r\n        }\r\n      }\r\n      // 检查是否需要导航\r\n      const shouldNavigate = this.selectedResultStart || this.selectedResultEnd\r\n      // 导航逻辑\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        this.navigateToResultPage()\r\n      } else if (shouldNavigate) {\r\n        this.navigateToIntermediatePage(isStart ? 'start' : 'end', simplifiedResult, isUpdate)\r\n      }\r\n    },\r\n    // 导航到结果页面\r\n    navigateToResultPage () {\r\n      this.$router.push({\r\n        path: '/lu-jing-gui-hua/result',\r\n        // 带着参数跳转，将经纬度绑定传递给result页面\r\n        query: {\r\n          start: JSON.stringify({\r\n            ...this.selectedResultStart,\r\n            location: [this.selectedResultStart.wgs84_longitude, this.selectedResultStart.wgs84_latitude]\r\n          }),\r\n          end: JSON.stringify({\r\n            ...this.selectedResultEnd,\r\n            location: [this.selectedResultEnd.wgs84_longitude, this.selectedResultEnd.wgs84_latitude]\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // 导航到中间页面，就是想着重选就刷新搜索框顺便刷新页面，因为geoscene的api不能直接动态更新底图，\r\n    // 现在这个函数似乎还是运行不了。what can I say？ mamba out\r\n    navigateToIntermediatePage (type, result, isUpdate = false) {\r\n      const path = '/lu-jing-gui-hua/intermediate-page'\r\n      const query = {\r\n        [type]: JSON.stringify(result)\r\n      }\r\n\r\n      if (isUpdate) {\r\n        // 更新URL并刷新页面\r\n        this.$router.replace({ path, query }).then(() => {\r\n          window.location.reload()\r\n        })\r\n      } else {\r\n        // 正常导航\r\n        this.$router.push({ path, query })\r\n      }\r\n    },\r\n    // 查询路径按钮\r\n    onSearch () {\r\n      // 检查是否两个结果都已选择\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        // 构造包含location属性的起点和终点对象\r\n        const startWithLocation = {\r\n          ...this.selectedResultStart,\r\n          location: [this.selectedResultStart.wgs84_longitude, this.selectedResultStart.wgs84_latitude]\r\n        }\r\n        const endWithLocation = {\r\n          ...this.selectedResultEnd,\r\n          location: [this.selectedResultEnd.wgs84_longitude, this.selectedResultEnd.wgs84_latitude]\r\n        }\r\n        // 使用Vue Router跳转到结果页面，并传递起点和终点信息\r\n        this.$router.push({\r\n          path: '/lu-jing-gui-hua/route',\r\n          query: {\r\n            start: JSON.stringify(startWithLocation),\r\n            end: JSON.stringify(endWithLocation)\r\n          }\r\n        })\r\n      } else {\r\n        // 如果起点或终点未选择，可以在这里显示提示信息\r\n        alert('请确保起点和终点都已选择。')\r\n      }\r\n    },\r\n    // 初始化地图\r\n    initMap () {\r\n      const map = new Map({\r\n        basemap: 'tianditu-vector' // 使用适合的底图\r\n      })\r\n      this.map = map\r\n      this.view = new MapView({\r\n        container: 'mapViewDiv', // 使用正确的容器ID\r\n        map: map,\r\n        center: [114.3, 30.7], // 使用中心点坐标\r\n        zoom: 4,\r\n        constraints: {\r\n          geometry: {\r\n            type: 'extent',\r\n            xmin: 113.6,\r\n            ymin: 29.9,\r\n            xmax: 115.0,\r\n            ymax: 31.3\r\n          },\r\n          minScale: 500,\r\n          maxScale: 2000000,\r\n          rotationEnabled: false,\r\n          // 假设tileInfo.lods已经在某处定义，否则这里需要调整\r\n          // lods: tileInfo.lods,\r\n          snapToZoom: false\r\n        }\r\n      })\r\n      // 创建一个新的GraphicsLayer实例，以便在地图上绘制点\r\n      const graphicsLayer = new GraphicsLayer()\r\n      map.add(graphicsLayer)\r\n      this.view.when(() => {\r\n        this.drawPoints(graphicsLayer)\r\n      }).catch((err) => {\r\n        console.error('MapView initialization error:', err)\r\n      })\r\n    },\r\n    // 绘制起点和终点\r\n    drawPoints (graphicsLayer) {\r\n      // 绘制起点\r\n      if (this.selectedResultStart) {\r\n        const start = this.selectedResultStart\r\n        const startPoint = new Point({\r\n          longitude: start.location[0],\r\n          latitude: start.location[1]\r\n        })\r\n\r\n        const startGraphic = new Graphic({\r\n          // 点参数设置\r\n          geometry: startPoint,\r\n          symbol: {\r\n            type: 'simple-marker', // 自动转换为 SimpleMarkerSymbol\r\n            color: 'green',\r\n            size: '20px'\r\n          },\r\n          popupTemplate: {\r\n            title: '起点信息',\r\n            content: [\r\n              {\r\n                type: 'fields',\r\n                fieldInfos: [\r\n                  {\r\n                    fieldName: 'address',\r\n                    label: '地址'\r\n                  },\r\n                  {\r\n                    fieldName: 'name',\r\n                    label: '名称'\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          attributes: start\r\n        })\r\n\r\n        graphicsLayer.add(startGraphic)\r\n      }\r\n      // 绘制终点\r\n      if (this.selectedResultEnd) {\r\n        const end = this.selectedResultEnd\r\n        const endPoint = new Point({\r\n          longitude: end.location[0],\r\n          latitude: end.location[1]\r\n        })\r\n\r\n        const endGraphic = new Graphic({\r\n          geometry: endPoint,\r\n          symbol: {\r\n            type: 'simple-marker',\r\n            color: 'red',\r\n            size: '20px'\r\n          },\r\n          popupTemplate: {\r\n            title: '终点信息',\r\n            content: [\r\n              {\r\n                type: 'fields',\r\n                fieldInfos: [\r\n                  {\r\n                    fieldName: 'address',\r\n                    label: '地址'\r\n                  },\r\n                  {\r\n                    fieldName: 'name',\r\n                    label: '名称'\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          attributes: end\r\n        })\r\n\r\n        graphicsLayer.add(endGraphic)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/*之后要自己调样式的大小，这个仅作参考*/\r\n#viewDiv {\r\n  height: 100vh; /* 将高度设置为视口高度的80% */\r\n  width: 98vw; /* 将宽度设置为视口宽度的80% */\r\n  /*margin: auto;*/\r\n}\r\n\r\n.lu-jing-gui-hua {\r\n  display: flex;\r\n  flex-direction: column; /* 使子元素垂直排列 */\r\n  align-items: flex; /* 水平居中对齐子元素 */\r\n}\r\n\r\n.text > h1 {\r\n  text-align: center; /* 文本居中 */\r\n  background: -webkit-linear-gradient(rgba(238,174,202,1), rgba(148,187,233,1));\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n  color: transparent; /* 对于非WebKit浏览器的兼容 */\r\n}\r\n\r\n.text {\r\n  margin-top: 5px; /* 顶部外边距 */\r\n  margin-bottom: 5px; /* 底部外边距 */\r\n  background: rgba(109, 72, 72, 0.45);\r\n  -webkit-backdrop-filter: blur(25px);\r\n  backdrop-filter: blur(25px);\r\n  border: 1px solid rgba(255,255,255,0.45);\r\n  border-radius: 15px; /* 添加圆角 */\r\n  padding: 20px; /* 内边距 */\r\n  text-align: left /* 文本居中 */\r\n}\r\n\r\n.search-containers {\r\n  display: flex;\r\n  flex-direction: column; /* 保持垂直排列 */\r\n  justify-content: flex-start; /* 从顶部开始排列 */\r\n  align-items: flex-start; /* 子元素沿交叉轴的开始边缘对齐，即顶部对齐 */\r\n  width: 50%; /* 设置一个固定宽度 */\r\n  padding: 10px; /* 根据需要调整，确保搜索框周围有足够空间 */\r\n  background-color: #f0f0f0; /* 背景颜色稍微深于白色 */\r\n  border-radius: 10px; /* 添加圆角边框 */\r\n  border: 1px solid #ccc; /* 添加边框 */\r\n  margin-bottom: 10px;\r\n  position: relative; /* 添加相对定位 */\r\n}\r\n\r\n/* 移除左右外边距 */\r\n.search-container.start,\r\n.search-container.end {\r\n  position: relative; /* 设置相对定位 */\r\n  margin: 0; /* 移除左右外边距 */\r\n  margin-top: 10px;\r\n}\r\n\r\n.search-box {\r\n  padding: 8px 15px; /* 初始内边距 */\r\n  border: 2px solid #ccc;\r\n  border-radius: 20px;\r\n  outline: none;\r\n  flex-grow: 1;\r\n  box-sizing: border-box;\r\n  text-indent: 0px; /* 初始文本缩进，保持文本在左侧 */\r\n  width: 180%; /* 使搜索框填充容器 */\r\n}\r\n\r\n/* 鼠标悬停时只改变边框颜色，不改变宽度 */\r\n.search-box:hover {\r\n  border-color: blue; /* 改变边框颜色而不是宽度 */\r\n}\r\n\r\n.search-box:focus {\r\n  padding-right: 60px; /* 聚焦时增加右侧内边距，使框向右变长 */\r\n  border-width: 2px;\r\n  border-color: blue;\r\n  transition: padding-right 0.3s ease, border-color 0.3s ease; /* 平滑过渡效果 */\r\n  text-indent: 0px; /* 聚焦时减少文本缩进 */\r\n}\r\n\r\n.search-results {\r\n  position: absolute;\r\n  top: 100%; /* 确保列表紧贴搜索框的底部 */\r\n  left: 0;\r\n  width: 180%; /* 使列表宽度与搜索框相同 */\r\n  background-color: white; /* 或其他背景色，确保列表可见 */\r\n  z-index: 1000; /* 确保搜索结果列表在其他元素之上 */\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1); /* 可选：添加一些阴影以提升视觉效果 */\r\n  max-height: 160px; /* 限制最大高度，5行大约160px，根据实际行高调整 */\r\n  overflow-y: auto; /* 超出部分显示滚动条 */\r\n}\r\n\r\n.search-results li:hover {\r\n  text-decoration: underline; /* 添加下划线 */\r\n  background-color: #f0f0f0; /* 更改背景颜色以提高对比度 */\r\n  cursor: pointer; /* 更改鼠标指针为手形，更明显地指示可点击 */\r\n}\r\n\r\n/* 查询按钮的容器样式 */\r\n.search-action {\r\n  display: flex;\r\n  flex-direction: column; /* 修改为列布局 */\r\n  justify-content: flex-end; /* 使按钮靠右对齐 */\r\n  flex-grow: 1; /* 允许容器扩展填满剩余空间 */\r\n  align-self: flex-end; /* 使自己靠父容器的右边 */\r\n  margin-top: auto; /* 推到底部 */\r\n  position: absolute; /* 绝对定位 */\r\n  right: 10px; /* 与右边界保持一定距离 */\r\n  bottom: 10px; /* 与底部保持一定距离 */\r\n}\r\n\r\n/* 查询按钮样式 */\r\n.search-action button {\r\n  padding: 10px 20px; /* 按钮内边距 */\r\n  background-color: #007bff; /* 按钮背景颜色 */\r\n  color: white; /* 文字颜色 */\r\n  border: none; /* 去除边框 */\r\n  border-radius: 5px; /* 圆角边框 */\r\n  cursor: pointer; /* 鼠标悬停时显示指针 */\r\n  transition: background-color 0.3s; /* 背景颜色过渡效果 */\r\n  margin-top: 10px; /* 在按钮之间添加一些间距 */\r\n}\r\n\r\n/* 鼠标悬停在按钮上时的样式 */\r\n.search-action button:hover {\r\n  background-color: #0056b3; /* 按钮背景颜色变深 */\r\n}\r\n\r\n/* 第一个按钮（重新选择）不需要顶部间距 */\r\n.search-action button:first-child {\r\n  margin-top: 0;\r\n}\r\n\r\n/* 将CSS链接转换为@import语句 */\r\n@import url(\"https://js.geoscene.cn/4.27/@geoscene/core/assets/geoscene/themes/light/main.css\");\r\n</style>\r\n","import { render } from \"./IntermediatepageView.vue?vue&type=template&id=36de9fe9\"\nimport script from \"./IntermediatepageView.vue?vue&type=script&lang=js\"\nexport * from \"./IntermediatepageView.vue?vue&type=script&lang=js\"\n\nimport \"./IntermediatepageView.vue?vue&type=style&index=0&id=36de9fe9&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/*\r\nAll material copyright GeoScene, All Rights Reserved, unless otherwise specified.\r\nSee https://js.geoscene.cn/4.27/geoscene/copyright.txt for details.\r\n*/\r\nimport{_ as r}from\"../chunks/tslib.es6.js\";import{property as e}from\"../core/accessorSupport/decorators/property.js\";import\"../core/accessorSupport/ensureType.js\";import\"../core/arrayUtils.js\";import\"../core/has.js\";import{subclass as o}from\"../core/accessorSupport/decorators/subclass.js\";import{owningCollectionProperty as s}from\"../core/support/OwningCollection.js\";import t from\"./Layer.js\";import{BlendLayer as i}from\"./mixins/BlendLayer.js\";import{ScaleRangeLayer as p}from\"./mixins/ScaleRangeLayer.js\";import{GraphicsCollection as a}from\"../support/GraphicsCollection.js\";import c from\"../symbols/support/ElevationInfo.js\";let n=class extends(i(p(t))){constructor(r){super(r),this.elevationInfo=null,this.graphics=new a,this.screenSizePerspectiveEnabled=!0,this.type=\"graphics\",this.internal=!1}destroy(){this.removeAll(),this.graphics.destroy()}add(r){return this.graphics.add(r),this}addMany(r){return this.graphics.addMany(r),this}removeAll(){return this.graphics.removeAll(),this}remove(r){this.graphics.remove(r)}removeMany(r){this.graphics.removeMany(r)}on(r,e){return super.on(r,e)}graphicChanged(r){this.emit(\"graphic-update\",r)}};r([e({type:c})],n.prototype,\"elevationInfo\",void 0),r([e(s(a,\"graphics\"))],n.prototype,\"graphics\",void 0),r([e({type:[\"show\",\"hide\"]})],n.prototype,\"listMode\",void 0),r([e()],n.prototype,\"screenSizePerspectiveEnabled\",void 0),r([e({readOnly:!0})],n.prototype,\"type\",void 0),r([e({constructOnly:!0})],n.prototype,\"internal\",void 0),n=r([o(\"geoscene.layers.GraphicsLayer\")],n);const h=n;export{h as default};"],"names":["class","_createElementVNode","key","id","style","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","type","_cache","$event","$data","searchQueryStart","onInput","$options","onSearchInputChange","placeholder","searchResults","length","_hoisted_5","_Fragment","_renderList","result","index","onClick","selectResult","name","_hoisted_6","_createCommentVNode","_hoisted_7","searchQueryEnd","searchResultsEnd","_hoisted_8","_hoisted_9","_hoisted_10","args","clcSearch","onSearch","_hoisted_11","data","selectedResultStart","selectedResultEnd","mounted","this","initMap","$route","query","start","JSON","parse","end","parseUrlParams","methods","$router","push","urlParams","URLSearchParams","window","location","search","startParam","get","endParam","startObj","decodeURIComponent","address","e","console","error","endObj","event","isStart","target","value","searchResultsField","includes","log","fetch","method","headers","body","stringify","then","response","json","catch","simplifiedResult","wgs84_latitude","wgs84_longitude","baidu_index","baidu_latitude","baidu_longitude","label","isUpdate","shouldNavigate","navigateToResultPage","navigateToIntermediatePage","path","replace","reload","startWithLocation","endWithLocation","alert","map","Map","basemap","view","MapView","container","center","zoom","constraints","geometry","xmin","ymin","xmax","ymax","minScale","maxScale","rotationEnabled","snapToZoom","graphicsLayer","GraphicsLayer","add","when","drawPoints","err","startPoint","Point","longitude","latitude","startGraphic","Graphic","symbol","color","size","popupTemplate","title","content","fieldInfos","fieldName","attributes","endPoint","endGraphic","__exports__","render","n","i","p","t","constructor","r","super","elevationInfo","graphics","a","screenSizePerspectiveEnabled","internal","destroy","removeAll","addMany","remove","removeMany","on","graphicChanged","emit","c","prototype","s","readOnly","constructOnly","o","h"],"sourceRoot":""}