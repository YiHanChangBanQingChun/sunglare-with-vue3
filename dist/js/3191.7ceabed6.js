"use strict";(self["webpackChunksun_glare_project"]=self["webpackChunksun_glare_project"]||[]).push([[3191],{89226:function(t,r,e){e.d(r,{$:function(){return k},N2:function(){return J},RH:function(){return w},ZD:function(){return z}});e(44114);function n(t){return"r"in t&&"g"in t&&"b"in t}function o(t){return"h"in t&&"s"in t&&"v"in t}function s(t){return"l"in t&&"a"in t&&"b"in t}function i(t){return"l"in t&&"c"in t&&"h"in t}function a(t){return"x"in t&&"y"in t&&"z"in t}const c=[[.4124,.3576,.1805],[.2126,.7152,.0722],[.0193,.1192,.9505]],l=[[3.2406,-1.5372,-.4986],[-.9689,1.8758,.0415],[.0557,-.204,1.057]];function u(t,r){const e=[];let n,o;if(t[0].length!==r.length)throw new Error("dimensions do not match");const s=t.length,i=t[0].length;let a=0;for(n=0;n<s;n++){for(a=0,o=0;o<i;o++)a+=t[n][o]*r[o];e.push(a)}return e}function f(t){const r=[t.r/255,t.g/255,t.b/255].map((t=>t<=.04045?t/12.92:((t+.055)/1.055)**2.4)),e=u(c,r);return{x:100*e[0],y:100*e[1],z:100*e[2]}}function m(t){const r=u(l,[t.x/100,t.y/100,t.z/100]).map((t=>{const r=t<=.0031308?12.92*t:1.055*t**(1/2.4)-.055;return Math.min(1,Math.max(r,0))}));return{r:Math.round(255*r[0]),g:Math.round(255*r[1]),b:Math.round(255*r[2])}}function h(t){const r=[t.x/95.047,t.y/100,t.z/108.883].map((t=>t>(6/29)**3?t**(1/3):1/3*(29/6)**2*t+4/29));return{l:116*r[1]-16,a:500*(r[0]-r[1]),b:200*(r[1]-r[2])}}function p(t){const r=t.l,e=[(r+16)/116+t.a/500,(r+16)/116,(r+16)/116-t.b/200].map((t=>t>6/29?t**3:3*(6/29)**2*(t-4/29)));return{x:95.047*e[0],y:100*e[1],z:108.883*e[2]}}function d(t){const r=t.l,e=t.a,n=t.b,o=Math.sqrt(e*e+n*n);let s=Math.atan2(n,e);return s=s>0?s:s+2*Math.PI,{l:r,c:o,h:s}}function b(t){const r=t.l,e=t.c,n=t.h;return{l:r,a:e*Math.cos(n),b:e*Math.sin(n)}}function S(t){return h(f(t))}function g(t){return m(p(t))}function x(t){return d(h(f(t)))}function y(t){return m(p(b(t)))}function O(t){const r=t.r,e=t.g,n=t.b,o=Math.max(r,e,n),s=o-Math.min(r,e,n);let i=o,a=0===s?0:o===r?(e-n)/s%6:o===e?(n-r)/s+2:(r-e)/s+4,c=0===s?0:s/i;return a<0&&(a+=6),a*=60,c*=100,i*=100/255,{h:a,s:c,v:i}}function N(t){const r=(t.h+360)%360/60,e=t.s/100,n=t.v/100*255,o=n*e,s=o*(1-Math.abs(r%2-1));let i;switch(Math.floor(r)){case 0:i={r:o,g:s,b:0};break;case 1:i={r:s,g:o,b:0};break;case 2:i={r:0,g:o,b:s};break;case 3:i={r:0,g:s,b:o};break;case 4:i={r:s,g:0,b:o};break;case 5:case 6:i={r:o,g:0,b:s};break;default:i={r:0,g:0,b:0}}return i.r=Math.round(i.r+n-o),i.g=Math.round(i.g+n-o),i.b=Math.round(i.b+n-o),i}function k(t){return n(t)?t:i(t)?y(t):s(t)?g(t):a(t)?m(t):o(t)?N(t):t}function J(t){return o(t)?t:O(k(t))}function z(t){return s(t)?t:S(k(t))}function w(t){return i(t)?t:x(k(t))}},87066:function(t,r,e){e.r(r),e.d(r,{default:function(){return b}});e(16573),e(78100),e(77936),e(37467),e(44732),e(79577),e(2516);var n=e(26257),o=e(74138),s=e(80816),i=e(56631),a=e(77239),c=e(91982),l=e(85220),u=e(79088),f=e(49438),m=e(84512),h=e(46019),p=e(41759),d=e(74036);class b{convertVectorFieldData(t){const r=o.A.fromJSON(t.pixelBlock),e=(0,u.FI)(r,t.type);return Promise.resolve(null!=e?e.toJSON():null)}computeStatisticsHistograms(t){const r=o.A.fromJSON(t.pixelBlock),e=(0,l.eH)(r);return Promise.resolve(e)}async decode(t){const r=await(0,s.D)(t.data,t.options);return r&&r.toJSON()}symbolize(t){t.pixelBlock=o.A.fromJSON(t.pixelBlock),t.extent=t.extent?p.A.fromJSON(t.extent):null;const r=this.symbolizer.symbolize(t);return Promise.resolve(null!=r?r.toJSON():null)}async updateSymbolizer(t){this.symbolizer=m.A.fromJSON(t.symbolizerJSON),t.histograms&&"rasterStretch"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=t.histograms)}async updateRasterFunction(t){this.rasterFunction=(0,a.vt)(t.rasterFunctionJSON)}async process(t){const r=this.rasterFunction.process({extent:p.A.fromJSON(t.extent),primaryPixelBlocks:t.primaryPixelBlocks.map((t=>null!=t?o.A.fromJSON(t):null)),primaryPixelSizes:t.primaryPixelSizes?.map((t=>null!=t?d.A.fromJSON(t):null)),primaryRasterIds:t.primaryRasterIds});return null!=r?r.toJSON():null}stretch(t){const r=this.symbolizer.simpleStretch(o.A.fromJSON(t.srcPixelBlock),t.stretchParams);return Promise.resolve(null!=r&&r.toJSON())}estimateStatisticsHistograms(t){const r=(0,l.f4)(o.A.fromJSON(t.srcPixelBlock));return Promise.resolve(r)}split(t){const r=(0,i.lD)(o.A.fromJSON(t.srcPixelBlock),t.tileSize,t.maximumPyramidLevel);return r&&r.forEach(((t,e)=>{r.set(e,t?.toJSON())})),Promise.resolve(r)}async mosaicAndTransform(t){const r=t.srcPixelBlocks.map((t=>t?new o.A(t):null)),e=(0,i.z7)(r,t.srcMosaicSize,{blockWidths:t.blockWidths,alignmentInfo:t.alignmentInfo,clipOffset:t.clipOffset,clipSize:t.clipSize});let n,s=e;return t.coefs&&(s=(0,i.$i)(e,t.destDimension,t.coefs,t.sampleSpacing,t.interpolation)),t.projectDirections&&t.gcsGrid&&(n=(0,i.QF)(t.destDimension,t.gcsGrid),s=(0,u.Y2)(s,t.isUV?"vector-uv":"vector-magdir",n)),{pixelBlock:s?.toJSON(),localNorthDirections:n}}async createFlowMesh(t,r){const e={data:new Float32Array(t.flowData.buffer),mask:new Uint8Array(t.flowData.maskBuffer),width:t.flowData.width,height:t.flowData.height},{vertexData:n,indexData:o}=await(0,h.CW)(t.meshType,t.simulationSettings,e,r.signal);return{result:{vertexBuffer:n.buffer,indexBuffer:o.buffer},transferList:[n.buffer,o.buffer]}}async getProjectionOffsetGrid(t){const r=p.A.fromJSON(t.projectedExtent),e=p.A.fromJSON(t.srcBufferExtent);let o=null;t.datumTransformationSteps&&(o=new n.A({steps:t.datumTransformationSteps})),(t.includeGCSGrid||(0,c.xh)(r.spatialReference,e.spatialReference,o))&&await(0,c.Hh)();const s=t.rasterTransform?(0,f.l)(t.rasterTransform):null;return(0,c.l0)({...t,projectedExtent:r,srcBufferExtent:e,datumTransformation:o,rasterTransform:s})}}}}]);
//# sourceMappingURL=3191.7ceabed6.js.map