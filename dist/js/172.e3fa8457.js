"use strict";(self["webpackChunksun_glare_project"]=self["webpackChunksun_glare_project"]||[]).push([[172],{80172:function(t,e,i){i.r(e),i.d(e,{CalciteIcon:function(){return s},defineCustomElement:function(){return c}});var n=i(91798);
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */const s=n.I,c=n.d},91798:function(t,e,i){i.d(e,{I:function(){return d},d:function(){return b}});var n=i(3882),s=i(80863),c=i(64156);
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */
const r={icon:"icon",flipRtl:"flip-rtl"},o={},a={},l={s:16,m:24,l:32};async function h({icon:t,scale:e}){const i=l[e],s=u(t),c="F"===s.charAt(s.length-1),r=c?s.substring(0,s.length-1):s,h=`${r}${i}${c?"F":""}`;if(o[h])return o[h];a[h]||(a[h]=fetch((0,n.OX)(`./assets/icon/${h}.json`)).then((t=>t.json())).catch((()=>(console.error(`"${h}" is not a valid calcite-ui-icon name`),""))));const p=await a[h];return o[h]=p,p}function u(t){const e=!isNaN(Number(t.charAt(0))),i=t.split("-"),n=i.length>0;if(n){const e=/[a-z]/i;t=i.map(((t,i)=>t.replace(e,(function(t,e){const n=0===i&&0===e;return n?t:t.toUpperCase()})))).join("")}return e?`i${t}`:t}const p=":host{display:inline-flex;color:var(--calcite-ui-icon-color)}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}",d=(0,n.w$)(class extends n.wt{constructor(){super(),this.__registerHost(),this.__attachShadow(),this.icon=null,this.flipRtl=!1,this.scale="m",this.textLabel=void 0,this.pathData=void 0,this.visible=!1}connectedCallback(){this.waitUntilVisible((()=>{this.visible=!0,this.loadIconPathData()}))}disconnectedCallback(){this.intersectionObserver?.disconnect(),this.intersectionObserver=null}async componentWillLoad(){this.loadIconPathData()}render(){const{el:t,flipRtl:e,pathData:i,scale:c,textLabel:o}=this,a=(0,s.b)(t),h=l[c],u=!!o,p=[].concat(i||"");return(0,n.h)(n.xr,{"aria-hidden":(0,s.t)(!u),"aria-label":u?o:null,role:u?"img":null},(0,n.h)("svg",{"aria-hidden":"true",class:{[r.flipRtl]:"rtl"===a&&e,svg:!0},fill:"currentColor",height:"100%",viewBox:`0 0 ${h} ${h}`,width:"100%",xmlns:"http://www.w3.org/2000/svg"},p.map((t=>"string"===typeof t?(0,n.h)("path",{d:t}):(0,n.h)("path",{d:t.d,opacity:"opacity"in t?t.opacity:1})))))}async loadIconPathData(){const{icon:t,scale:e,visible:i}=this;if(!n.L2.isBrowser||!t||!i)return;const s=await h({icon:t,scale:e});t===this.icon&&(this.pathData=s)}waitUntilVisible(t){this.intersectionObserver=(0,c.c)("intersection",(e=>{e.forEach((e=>{e.isIntersecting&&(this.intersectionObserver.disconnect(),this.intersectionObserver=null,t())}))}),{rootMargin:"50px"}),this.intersectionObserver?this.intersectionObserver.observe(this.el):t()}static get assetsDirs(){return["assets"]}get el(){return this}static get watchers(){return{icon:["loadIconPathData"],scale:["loadIconPathData"]}}static get style(){return p}},[1,"calcite-icon",{icon:[513],flipRtl:[516,"flip-rtl"],scale:[513],textLabel:[1,"text-label"],pathData:[32],visible:[32]}]);function b(){if("undefined"===typeof customElements)return;const t=["calcite-icon"];t.forEach((t=>{switch(t){case"calcite-icon":customElements.get(t)||customElements.define(t,d);break}}))}b()},64156:function(t,e,i){i.d(e,{c:function(){return s}});i(44114);var n=i(3882);
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */
function s(t,e,i){if(!n.L2.isBrowser)return;const s=c(t);return new s(e,i)}function c(t){class e extends window.MutationObserver{constructor(t){super(t),this.observedEntry=[],this.callback=t}observe(t,e){return this.observedEntry.push({target:t,options:e}),super.observe(t,e)}unobserve(t){const e=this.observedEntry.filter((e=>e.target!==t));this.observedEntry=[],this.callback(super.takeRecords(),this),this.disconnect(),e.forEach((t=>this.observe(t.target,t.options)))}}return function(){return"intersection"===t?window.IntersectionObserver:"mutation"===t?e:window.ResizeObserver}()}}}]);
//# sourceMappingURL=172.e3fa8457.js.map