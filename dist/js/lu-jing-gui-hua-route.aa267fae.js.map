{"version":3,"file":"js/lu-jing-gui-hua-route.aa267fae.js","mappings":"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","sources":["webpack://sun-glare-project/./src/views/RouteView.vue","webpack://sun-glare-project/./src/views/RouteView.vue?75e7","webpack://sun-glare-project/./node_modules/@geoscene/core/layers/GraphicsLayer.js"],"sourcesContent":["<template>\r\n  <!-- 输入了起点和终点之后,还没有摁查询路径的画面 -->\r\n  <div class=\"lu-jing-gui-hua\">\r\n    <!-- 搜索框 -->\r\n    <!-- 外层容器 -->\r\n    <div class=\"search-containers\">\r\n      <!-- 交换的侧边栏 -->\r\n      <div class=\"revert-containers\">\r\n        <div class=\"car\"><img src=\"https://wx3.sinaimg.cn/orj360/008tIcISgy1hsgyr8gzsjj300o00odfl.jpg\"></div>\r\n        <div class=\"swap-action\">\r\n          <!-- 绑定 swap 方法到点击事件 -->\r\n          <button @click=\"swap\" title=\"切换起终点\">\r\n            <img src=\"https://wx1.sinaimg.cn/orj360/008tIcISgy1hsiz7qtw48j301s01sq2p.jpg\" alt=\"revert\" style=\"width: 22px; height: 25px;\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <!-- 搜索起点的容器 -->\r\n      <div class=\"search-container start\">\r\n        <!-- 图片 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src=\"https://wx1.sinaimg.cn/orj360/008tIcISgy1hsgyr8gv8dj300f00f0oh.jpg\" alt=\"pink\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryStart\" @input=\"onSearchInputChange($event, true)\" placeholder=\"请输入起点\" class=\"search-box search-box-start\"/>\r\n        <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete\" title=\"清空\" @click=\"clc1\">\r\n            <img src=\"https://wx2.sinaimg.cn/orj360/008tIcISgy1hsnss2ckv4j300k00k0m1.jpg\" alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 修正后的起点搜索结果展示 -->\r\n        <div class=\"search-results\" v-if=\"searchResults.length && searchQueryStart\" ref=\"searchResultsStart\">\r\n    <ul>\r\n      <li v-for=\"(result, index) in searchResults\" :key=\"index\" :class=\"{ 'highlighted': index === highlightedIndex }\" @click=\"selectResult(result, true)\">\r\n        {{ result.name }}\r\n      </li>\r\n        </ul>\r\n        </div>\r\n    </div>\r\n      <!-- 搜索终点的容器 -->\r\n      <div class=\"search-container end\">\r\n        <!-- 图片容器 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src=\"https://wx4.sinaimg.cn/orj360/008tIcISgy1hsgyr8got8j300f00f0o9.jpg\" alt=\"green\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryEnd\" @input=\"onSearchInputChange($event, false)\" placeholder=\"请输入终点\" class=\"search-box search-box-end\"/>\r\n         <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete\" title=\"清空\" @click=\"clc2\">\r\n            <img src=\"https://wx2.sinaimg.cn/orj360/008tIcISgy1hsnss2ckv4j300k00k0m1.jpg\" alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 修正后的终点搜索结果展示 -->\r\n        <div class=\"search-results\" v-if=\"searchResultsEnd.length && searchQueryEnd\" ref=\"searchResultsEnd\">\r\n    <ul>\r\n      <li v-for=\"(result, index) in searchResultsEnd\" :key=\"index\" :class=\"{ 'highlighted': index === highlightedIndex }\" @click=\"selectResult(result, false)\">\r\n        {{ result.name }}\r\n      </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"search-action\" @click=\"onSearch\" title=\"搜索\">\r\n          <img src=\"https://wx4.sinaimg.cn/mw2000/008tIcISgy1hsq1fw9ob9j300w00w3ya.jpg\" alt=\"search\">\r\n      </div>\r\n                <!-- 新的覆盖层容器 -->\r\n                <div v-if=\"isLoading\" class=\"loader-overlay\">\r\n      <div class=\"loader\">\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- 地图展示 -->\r\n  <div id=\"viewDiv\"></div>\r\n  <!-- 时间选择框和路径展示框 -->\r\n  <div class=\"main-container\">\r\n    <!-- 时间选择框 -->\r\n    <div class=\"choose-time\">\r\n      <div class=\"form-group\">\r\n        <label for=\"date-input\">选择日期：</label>\r\n        <input id=\"date-input\" type=\"date\" v-model=\"selectedDate\" :min=\"minDate\" :max=\"maxDate\" :class=\"{ 'invalid-date': isDateDisabled(selectedDate) }\" @change=\"handleDateChange\">\r\n        <label for=\"time-input\">选择时间：</label>\r\n        <input id=\"time-input\" type=\"time\" v-model=\"formattedTime\" @input=\"onTimeInputChange\" step=\"600\"> <!-- 600秒 = 10分钟 -->\r\n      </div>\r\n    </div>\r\n    <!-- 路线展示 -->\r\n    <div class=\"routelist\">\r\n      <ul class=\"cardlist\">\r\n        <div class=\"route\" data-index=\"1\">\r\n          <div class=\"introduction\" :style=\"{ color: getColor(1) }\">无眩光路径</div>\r\n          <p class=\"intro\">\r\n            <span>总时长：</span>\r\n            <span>{{ totalHours }}小时{{ totalMinutes }}分钟</span>\r\n            <span>总距离：</span>\r\n            <span>{{ totalDistance }}</span>\r\n          </p>\r\n        </div>\r\n        <div class=\"route\" data-index=\"0\">\r\n          <div class=\"introduction\" :style=\"{ color: getColor(0) }\">常规路径</div>\r\n          <p class=\"intro\">\r\n            <span>总时长：</span>\r\n            <span>{{ noGlareTotalHours }}小时{{ noGlareTotalMinutes }}分钟</span>\r\n            <span>总距离：</span>\r\n            <span>{{ noGlareTotalDistance }}</span>\r\n          </p>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Map from '@geoscene/core/Map.js'\r\nimport MapView from '@geoscene/core/views/MapView.js'\r\nimport Graphic from '@geoscene/core/Graphic'\r\nimport Point from '@geoscene/core/geometry/Point.js'\r\nimport GraphicsLayer from '@geoscene/core/layers/GraphicsLayer'\r\nimport FeatureLayer from '@geoscene/core/layers/FeatureLayer'\r\nimport Extent from '@geoscene/core/geometry/Extent'\r\nimport axios from 'axios'\r\nimport { nextTick } from 'vue'\r\nimport BasemapGallery from '@geoscene/core/widgets/BasemapGallery.js'\r\nimport Compass from '@geoscene/core/widgets/Compass.js'\r\n\r\nexport default {\r\n  name: 'RouteView',\r\n  data () {\r\n    return {\r\n      searchQueryStart: '',\r\n      searchQueryEnd: '',\r\n      selectedResultStart: null,\r\n      selectedResultEnd: null,\r\n      searchResults: [],\r\n      searchResultsEnd: [],\r\n      isLoading: false,\r\n      totalHours: 0,\r\n      totalMinutes: 0,\r\n      totalDistance: '0千米',\r\n      selectedDate: '', // 用户选择的日期\r\n      selectedTime: '', // 用户选择的时间\r\n      noGlareTotalHours: 0, // 无眩光路径的总时长（小时）\r\n      noGlareTotalMinutes: 0, // 无眩光路径的总时长（分钟）\r\n      highlightedIndex: -1, // 高亮的搜索结果索引\r\n      noGlareTotalDistance: '0千米' // 无眩光路径的总距离\r\n    }\r\n  },\r\n  // 在组件挂载时初始化地图\r\n  mounted () {\r\n    this.initMap()\r\n    if (this.$route.query.start && this.$route.query.end) {\r\n      this.selectedResultStart = JSON.parse(this.$route.query.start)\r\n      this.selectedResultEnd = JSON.parse(this.$route.query.end)\r\n    }\r\n    this.parseUrlParams()\r\n    // 设置定时器，每隔1分钟更新时间\r\n    window.addEventListener('keydown', this.handleKeydown)\r\n  },\r\n  beforeUnmount () {\r\n    window.removeEventListener('keydown', this.handleKeydown)\r\n  },\r\n  computed: {\r\n    minDate () {\r\n      return '2024-01-01'\r\n    },\r\n    maxDate () {\r\n      return '2024-12-31'\r\n    },\r\n    formattedTime () {\r\n      // 格式化时间为10分钟间隔\r\n      if (!this.selectedTime) return ''\r\n      const [hours, minutes] = this.selectedTime.split(':').map(Number)\r\n      const roundedMinutes = Math.floor(minutes / 10) * 10\r\n      return `${String(hours).padStart(2, '0')}:${String(roundedMinutes).padStart(2, '0')}`\r\n    }\r\n  },\r\n  methods: {\r\n    getColor (index) {\r\n      if (index === 0) {\r\n        return 'rgb(25, 202, 173)' // 绿色，无眩光路径\r\n      } else if (index === 1) {\r\n        return 'rgb(244, 96, 108)' // 红色，耗时少路径\r\n      }\r\n      return 'black' // 默认颜色\r\n    },\r\n    onTimeInputChange (event) {\r\n      const value = event.target.value\r\n      const [hours, minutes] = value.split(':').map(Number)\r\n      const roundedMinutes = Math.floor(minutes / 10) * 10\r\n      this.selectedTime = `${String(hours).padStart(2, '0')}:${String(roundedMinutes).padStart(2, '0')}`\r\n    },\r\n    isDateDisabled (date) {\r\n      if (!date) return false\r\n      const selected = new Date(date)\r\n      const month = selected.getMonth() + 1 // 月份从0开始\r\n      const day = selected.getDate()\r\n\r\n      if (month >= 1 && month <= 7 && day !== 15) {\r\n        return true\r\n      }\r\n      if (month === 8 && day <= 20) {\r\n        return true\r\n      }\r\n      if (month >= 10 && month <= 12 && day !== 15) {\r\n        return true\r\n      }\r\n      return false\r\n    },\r\n    handleDateChange (event) {\r\n      const date = event.target.value\r\n      if (this.isDateDisabled(date)) {\r\n        alert('选择的日期未进行模拟，请选择其他日期。可选日期为，1-7月的15日，8月20日-9月30日，10-12月的15日。')\r\n        this.selectedDate = ''\r\n      }\r\n    },\r\n    handleKeydown (event) {\r\n      if (this.searchResults.length && this.searchQueryStart) {\r\n        switch (event.key) {\r\n          case 'Escape':\r\n            this.searchResults = []\r\n            break\r\n          case 'Tab':\r\n            event.preventDefault()\r\n            this.highlightedIndex = (this.highlightedIndex + 1) % this.searchResults.length\r\n            nextTick(() => {\r\n              const highlightedElement = this.$refs.searchResultsStart.querySelector('li.highlighted')\r\n              if (highlightedElement) {\r\n                highlightedElement.scrollIntoView({ block: 'nearest', behavior: 'smooth' })\r\n              }\r\n            })\r\n            break\r\n          case 'Enter':\r\n            if (this.highlightedIndex >= 0 && this.highlightedIndex < this.searchResults.length) {\r\n              this.selectResult(this.searchResults[this.highlightedIndex], true)\r\n            }\r\n            break\r\n        }\r\n      } else if (this.searchResultsEnd.length && this.searchQueryEnd) {\r\n        switch (event.key) {\r\n          case 'Escape':\r\n            this.searchResultsEnd = []\r\n            break\r\n          case 'Tab':\r\n            event.preventDefault()\r\n            this.highlightedIndex = (this.highlightedIndex + 1) % this.searchResultsEnd.length\r\n            nextTick(() => {\r\n              const highlightedElement = this.$refs.searchResultsEnd.querySelector('li.highlighted')\r\n              if (highlightedElement) {\r\n                highlightedElement.scrollIntoView({ block: 'nearest', behavior: 'smooth' })\r\n              }\r\n            })\r\n            break\r\n          case 'Enter':\r\n            if (this.highlightedIndex >= 0 && this.highlightedIndex < this.searchResultsEnd.length) {\r\n              this.selectResult(this.searchResultsEnd[this.highlightedIndex], false)\r\n            }\r\n            break\r\n        }\r\n      }\r\n    },\r\n    // 更新时间，日期\r\n    updateTime () {\r\n      const now = new Date()\r\n      const currentTime = `${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`\r\n      // 只有当 selectedTime 是当前时间时，才更新\r\n      if (!this.isTimeFromUrl || this.selectedTime === currentTime) {\r\n        this.selectedTime = currentTime\r\n        this.isTimeFromUrl = false // 重置标志位\r\n      }\r\n    },\r\n    // 清空搜索框\r\n    clc1 () {\r\n      // 清空搜索框1\r\n      this.searchQueryStart = ''\r\n    },\r\n    // 清空搜索框2\r\n    clc2 () {\r\n      this.searchQueryEnd = ''\r\n    },\r\n    swap () {\r\n      this.isSwapping = true // 设置标志位\r\n      const tempQuery = this.searchQueryStart\r\n      this.searchQueryStart = this.searchQueryEnd\r\n      this.searchQueryEnd = tempQuery\r\n      const tempResult = this.selectedResultStart\r\n      this.selectedResultStart = this.selectedResultEnd\r\n      this.selectedResultEnd = tempResult\r\n      this.onSearch().then(() => {\r\n        this.parseUrlParams()\r\n        this.initMap()\r\n        this.isSwapping = false // 设置标志位\r\n      })\r\n    },\r\n    // 解析URL参数\r\n    parseUrlParams () {\r\n      const urlParams = new URLSearchParams(window.location.search)\r\n      const startParam = urlParams.get('start')\r\n      const endParam = urlParams.get('end')\r\n      const dateParam = urlParams.get('date')\r\n      const timeParam = urlParams.get('time')\r\n      const defaultRouteIdParam = urlParams.get('default_id')\r\n      const timeBasedRouteIdParam = urlParams.get('time_based_id')\r\n      if (startParam) {\r\n        try {\r\n          const startObj = JSON.parse(decodeURIComponent(startParam))\r\n          if (startObj && startObj.address) {\r\n            this.searchQueryStart = startObj.name\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing start parameter:', e)\r\n        }\r\n      }\r\n      if (endParam) { // 如果有终点参数，进行解析\r\n        try {\r\n          const endObj = JSON.parse(decodeURIComponent(endParam))\r\n          if (endObj && endObj.address) {\r\n            this.searchQueryEnd = endObj.name // 绑定终点查询字符串\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing end parameter:', e)\r\n        }\r\n      }\r\n      // 如果有日期参数，进行解析\r\n      if (dateParam) {\r\n        this.selectedDate = dateParam\r\n      }\r\n      // 如果有时间参数，进行解析\r\n      if (timeParam) {\r\n        this.selectedTime = timeParam\r\n        this.isTimeFromUrl = true // 设置标志位\r\n      }\r\n      // 如果有默认路径ID参数，进行解析\r\n      if (defaultRouteIdParam) {\r\n        this.defaultRouteId = defaultRouteIdParam\r\n      }\r\n      // 如果有基于时间的路径ID参数，进行解析\r\n      if (timeBasedRouteIdParam) {\r\n        this.timeBasedRouteId = timeBasedRouteIdParam\r\n      }\r\n    },\r\n    // 处理搜索框输入变化事件\r\n    onSearchInputChange (event, isStart) {\r\n      const query = event.target.value\r\n      const searchResultsField = isStart ? 'searchResults' : 'searchResultsEnd'\r\n      if (query.includes(\"'\")) {\r\n        console.log('输入法临时输入，不发送请求')\r\n        return\r\n      }\r\n      if (query.length >= 2) {\r\n        fetch(`${process.env.VUE_APP_API_URL}/api/search`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ searchQueryStart: query })\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            this[searchResultsField] = data\r\n          })\r\n          .catch((error) => {\r\n            console.error('错误:', error)\r\n          })\r\n      } else {\r\n        this[searchResultsField] = []\r\n      }\r\n    },\r\n    // 处理选择搜索结果事件\r\n    selectResult (result, isStart = true) {\r\n      console.log('用户选择了搜索结果:', result)\r\n      const simplifiedResult = {\r\n        name: result.name,\r\n        address: result.address,\r\n        wgs84_latitude: result.wgs84_latitude,\r\n        wgs84_longitude: result.wgs84_longitude,\r\n        location: [result.wgs84_longitude, result.wgs84_latitude],\r\n        baidu_index: result.baidu_index,\r\n        baidu_latitude: result.baidu_latitude,\r\n        baidu_longitude: result.baidu_longitude,\r\n        id: result.id,\r\n        label: result.label\r\n      }\r\n      // 获取当前的起点和终点信息\r\n      let currentStart = this.selectedResultStart ? JSON.stringify(this.selectedResultStart) : null\r\n      let currentEnd = this.selectedResultEnd ? JSON.stringify(this.selectedResultEnd) : null\r\n      // 根据isStart参数选择起点或终点\r\n      if (isStart) {\r\n        this.selectedResultStart = simplifiedResult\r\n        this.searchQueryStart = simplifiedResult.name\r\n        this.searchResults = []\r\n        currentStart = JSON.stringify(simplifiedResult)\r\n      } else {\r\n        this.selectedResultEnd = simplifiedResult\r\n        this.searchQueryEnd = simplifiedResult.name\r\n        this.searchResultsEnd = []\r\n        currentEnd = JSON.stringify(simplifiedResult)\r\n      }\r\n      // 跳转到结果页面，带上起点和终点信息，并添加一个时间戳作为唯一查询参数\r\n      this.$router.push({\r\n        path: '/lu-jing-gui-hua/Intermediate-page',\r\n        query: {\r\n          start: currentStart,\r\n          end: currentEnd,\r\n          date: this.selectedDate,\r\n          time: this.selectedTime\r\n        }\r\n      })\r\n    },\r\n    onSearch () {\r\n      return new Promise((resolve, reject) => {\r\n        // 检查是否两个结果都已选择\r\n        if (this.selectedResultStart && this.selectedResultEnd) {\r\n          // 显示加载动画\r\n          this.isLoading = true\r\n          // 构造包含location属性的起点和终点对象\r\n          const startWithLocation = {\r\n            ...this.selectedResultStart,\r\n            location: [this.selectedResultStart.wgs84_longitude, this.selectedResultStart.wgs84_latitude]\r\n          }\r\n          const endWithLocation = {\r\n            ...this.selectedResultEnd,\r\n            location: [this.selectedResultEnd.wgs84_longitude, this.selectedResultEnd.wgs84_latitude]\r\n          }\r\n          const formattedTime = this.selectedTime.length === 5 ? `${this.selectedTime}:00` : this.selectedTime\r\n          console.log('Formatted Time:', formattedTime) // 打印时间参数\r\n          // 发送请求到后端进行路径规划\r\n          axios.post(`${process.env.VUE_APP_API_URL}/api/route/plan`, { start: startWithLocation, end: endWithLocation, date: this.selectedDate, time: formattedTime })\r\n            .then(response => {\r\n              // 后端返回的路径规划结果ID\r\n              const defaultRoutePlanId = response.data.default_id\r\n              const timeBasedRoutePlanId = response.data.time_based_id\r\n              console.log('默认路径规划结果ID:', defaultRoutePlanId)\r\n              console.log('基于时间的路径规划结果ID:', timeBasedRoutePlanId)\r\n              console.log('路径规划成功，时间日期是:', this.selectedDate, this.selectedTime)\r\n              // 隐藏加载动画\r\n              this.isLoading = false\r\n              // 使用Vue Router跳转到结果页面，并传递路径规划结果ID\r\n              this.$router.push({\r\n                path: '/lu-jing-gui-hua/route',\r\n                query: {\r\n                  start: JSON.stringify(startWithLocation),\r\n                  end: JSON.stringify(endWithLocation),\r\n                  default_id: defaultRoutePlanId,\r\n                  time_based_id: timeBasedRoutePlanId,\r\n                  date: this.selectedDate,\r\n                  time: formattedTime\r\n                }\r\n              })\r\n              if (!this.isSwapping) { // 如果不是交换操作，更新搜索框的值\r\n                this.searchQueryStart = startWithLocation.name\r\n                this.searchQueryEnd = endWithLocation.name\r\n              }\r\n              resolve()\r\n            })\r\n            .catch(error => {\r\n              console.error(error)\r\n              // 隐藏加载动画\r\n              this.isLoading = false\r\n              // 错误处理，例如显示提示信息\r\n              alert('路径规划失败，请稍后再试。')\r\n              reject(error)\r\n            })\r\n        } else {\r\n          // 如果起点或终点未选择，显示提示信息\r\n          alert('请确保起点和终点都已选择。')\r\n          reject(new Error('请确保起点和终点都已选择。'))\r\n        }\r\n      })\r\n    },\r\n    // 初始化地图\r\n    initMap () {\r\n      const map = new Map({\r\n        basemap: 'tianditu-vector' // 使用适合的底图\r\n      })\r\n      this.map = map\r\n\r\n      this.view = new MapView({\r\n        container: 'viewDiv', // 使用正确的容器ID\r\n        map: map,\r\n        center: [114.3, 30.7], // 默认中心点坐标\r\n        zoom: 4, // 默认缩放级别\r\n        constraints: {\r\n          geometry: {\r\n            type: 'extent',\r\n            xmin: 113.6,\r\n            ymin: 29.9,\r\n            xmax: 115.0,\r\n            ymax: 31.3\r\n          },\r\n          minScale: 500,\r\n          maxScale: 2000000,\r\n          rotationEnabled: false,\r\n          // 假设tileInfo.lods已经在某处定义，否则这里需要调整\r\n          // lods: tileInfo.lods,\r\n          snapToZoom: false\r\n        }\r\n      })\r\n      // 创建 BasemapGallery 实例\r\n      const basemapGallery = new BasemapGallery({\r\n        view: this.view,\r\n        source: {\r\n          query: {\r\n            title: '\"Basemaps for Developers\" AND owner:geoscenedev'\r\n          }\r\n        }\r\n      })\r\n      const compass = new Compass({\r\n        view: this.view\r\n      })\r\n      // 将 BasemapGallery 添加到地图视图的右上角\r\n      this.view.ui.add(basemapGallery, 'bottom-right')\r\n      // 移动缩放控件到左下角\r\n      this.view.ui.move('zoom', 'bottom-left')\r\n      // 将指南针添加到地图视图的左下角\r\n      this.view.ui.add(compass, 'bottom-left')\r\n      // 创建一个新的GraphicsLayer实例，以便在地图上绘制点\r\n      const graphicsLayer = new GraphicsLayer()\r\n      map.add(graphicsLayer)\r\n      // 创建 FeatureLayer 实例\r\n      const featureLayer = new FeatureLayer({\r\n        url: 'https://www.geosceneonline.cn/server/rest/services/Hosted/wuhan_village/FeatureServer',\r\n        renderer: {\r\n          type: 'simple', // 使用简单渲染器\r\n          symbol: {\r\n            type: 'simple-fill', // 使用简单填充符号\r\n            color: [0, 0, 0, 0], // 填充颜色透明\r\n            outline: {\r\n              color: [0, 0, 0, 1], // 轮廓颜色红色\r\n              width: 1\r\n            }\r\n          }\r\n        },\r\n        popupTemplate: {\r\n          content: [{\r\n            type: 'fields',\r\n            fieldInfos: [{\r\n              fieldName: '县区name',\r\n              label: '县区名称'\r\n            }]\r\n          }]\r\n        }\r\n      })\r\n      // 将 FeatureLayer 添加到地图\r\n      map.add(featureLayer)\r\n      map.add(graphicsLayer)\r\n      this.view.when(() => {\r\n        this.drawPoints(graphicsLayer)\r\n        this.adjustView()\r\n        this.drawRoutes(map)\r\n      }).catch((err) => {\r\n        console.error('MapView initialization error:', err)\r\n      })\r\n    },\r\n    // 调整视图以适应起点和终点\r\n    adjustView () {\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        const padding = 0.01 // 调整这个值以增加或减少边界的放宽程度\r\n        const extent = new Extent({\r\n          xmin: Math.min(this.selectedResultStart.location[0], this.selectedResultEnd.location[0]) - 10 * padding,\r\n          ymin: Math.min(this.selectedResultStart.location[1], this.selectedResultEnd.location[1]) - 10 * padding,\r\n          xmax: Math.max(this.selectedResultStart.location[0], this.selectedResultEnd.location[0]) + 10 * padding,\r\n          ymax: Math.max(this.selectedResultStart.location[1], this.selectedResultEnd.location[1]) + 10 * padding\r\n        })\r\n        this.view.goTo(extent).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      } else if (this.selectedResultStart) {\r\n        this.view.goTo({\r\n          center: [this.selectedResultStart.location[0], this.selectedResultStart.location[1]],\r\n          zoom: 10\r\n        }).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      } else if (this.selectedResultEnd) {\r\n        this.view.goTo({\r\n          center: [this.selectedResultEnd.location[0], this.selectedResultEnd.location[1]],\r\n          zoom: 10\r\n        }).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      }\r\n    },\r\n    // 绘制起点和终点\r\n    drawPoints (graphicsLayer) {\r\n      // 检查this.$route.query.start和this.$route.query.end是否定义\r\n      if (!this.$route.query.start || !this.$route.query.end) {\r\n        console.error('Start or end point is undefined.')\r\n        return // 如果未定义，直接返回\r\n      }\r\n      const start = JSON.parse(this.$route.query.start)\r\n      const end = JSON.parse(this.$route.query.end)\r\n      // 检查start和end是否有location属性\r\n      if (!start.location || !end.location) {\r\n        console.error('Start or end point does not have a location.')\r\n        return // 如果没有location属性，直接返回\r\n      }\r\n      // 创建起点和终点的Point对象\r\n      const startPoint = new Point({\r\n        longitude: start.location[0],\r\n        latitude: start.location[1]\r\n      })\r\n      const endPoint = new Point({\r\n        longitude: end.location[0],\r\n        latitude: end.location[1]\r\n      })\r\n      const startGraphic = new Graphic({\r\n        geometry: startPoint,\r\n        symbol: {\r\n          type: 'simple-marker', // autocasts as new SimpleMarkerSymbol()\r\n          color: 'red',\r\n          size: '20px'\r\n        },\r\n        // 添加popupTemplate\r\n        popupTemplate: {\r\n          title: '起点信息',\r\n          content: [\r\n            {\r\n              type: 'fields',\r\n              fieldInfos: [\r\n                {\r\n                  fieldName: 'address',\r\n                  label: '地址'\r\n                },\r\n                {\r\n                  fieldName: 'name',\r\n                  label: '名称'\r\n                },\r\n                // 可以继续添加更多字段\r\n                {\r\n                  fieldName: 'wgs84_latitude',\r\n                  label: 'WGS84纬度'\r\n                },\r\n                {\r\n                  fieldName: 'wgs84_longitude',\r\n                  label: 'WGS84经度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_index',\r\n                  label: '百度索引'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_latitude',\r\n                  label: '百度纬度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_longitude',\r\n                  label: '百度经度'\r\n                },\r\n                {\r\n                  fieldName: 'id',\r\n                  label: 'ID'\r\n                },\r\n                {\r\n                  fieldName: 'label',\r\n                  label: '标签'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        attributes: start\r\n      })\r\n      const endGraphic = new Graphic({\r\n        geometry: endPoint,\r\n        symbol: {\r\n          type: 'simple-marker',\r\n          color: 'green',\r\n          size: '20px'\r\n        },\r\n        // 添加popupTemplate\r\n        popupTemplate: {\r\n          title: '终点信息',\r\n          content: [\r\n            {\r\n              type: 'fields',\r\n              fieldInfos: [\r\n                {\r\n                  fieldName: 'address',\r\n                  label: '地址'\r\n                },\r\n                {\r\n                  fieldName: 'name',\r\n                  label: '名称'\r\n                },\r\n                // 可以继续添加更多字段\r\n                {\r\n                  fieldName: 'wgs84_latitude',\r\n                  label: 'WGS84纬度'\r\n                },\r\n                {\r\n                  fieldName: 'wgs84_longitude',\r\n                  label: 'WGS84经度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_index',\r\n                  label: '百度索引'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_latitude',\r\n                  label: '百度纬度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_longitude',\r\n                  label: '百度经度'\r\n                },\r\n                {\r\n                  fieldName: 'id',\r\n                  label: 'ID'\r\n                },\r\n                {\r\n                  fieldName: 'label',\r\n                  label: '标签'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        attributes: end\r\n      })\r\n      // 将起点和终点添加到图形图层\r\n      graphicsLayer.addMany([startGraphic, endGraphic])\r\n    },\r\n    drawRoutes (map) {\r\n      const defaultRouteId = this.$route.query.default_id // 从URL获取默认路线ID\r\n      const timeBasedRouteId = this.$route.query.time_based_id // 从URL获取基于时间的路线ID\r\n\r\n      if (!defaultRouteId && !timeBasedRouteId) {\r\n        console.error('Route IDs are undefined.')\r\n        return\r\n      }\r\n\r\n      // 获取并绘制默认路径\r\n      if (defaultRouteId) {\r\n        this.fetchAndDrawRoute(map, defaultRouteId, [25, 202, 173], true) // 绿色，耗时少路径\r\n      }\r\n\r\n      // 获取并绘制基于时间的路径\r\n      if (timeBasedRouteId) {\r\n        this.fetchAndDrawRoute(map, timeBasedRouteId, [244, 96, 108]) // 红色，无眩光路径\r\n      }\r\n    },\r\n    fetchAndDrawRoute (map, routeId, color, isNoGlareRoute = false) {\r\n      const geojsonUrl = `${process.env.VUE_APP_API_URL}/api/get_geojson/${routeId}`\r\n      fetch(geojsonUrl) // 使用fetch API获取GeoJSON文件\r\n        .then(response => response.json()) // 将响应转换为JSON\r\n        .then(data => {\r\n          let totalLength = 0\r\n          let totalCost = 0\r\n          const geojsonLayer = new FeatureLayer({ // 创建FeatureLayer图层\r\n            source: data.features.map((feature, index) => {\r\n              totalLength += feature.properties.length\r\n              totalCost += feature.properties.cost\r\n              return {\r\n                geometry: {\r\n                  type: 'polyline',\r\n                  paths: feature.geometry.coordinates\r\n                },\r\n                attributes: {\r\n                  ...feature.properties,\r\n                  id: index // 为每个要素生成唯一的ID\r\n                }\r\n              }\r\n            }),\r\n            renderer: {\r\n              type: 'simple', // 使用简单渲染器\r\n              symbol: {\r\n                type: 'simple-line', // 使用简单线符号\r\n                color: color, // 使用传入的颜色\r\n                width: isNoGlareRoute ? 4.5 : 3 // 根据是否为无眩光路径设置宽度\r\n              }\r\n            },\r\n            objectIdField: 'id', // 必须指定一个唯一的字段作为ObjectId\r\n            fields: [\r\n              { name: 'id', type: 'oid' },\r\n              { name: 'seq', type: 'integer' },\r\n              { name: 'path_seq', type: 'integer' },\r\n              { name: 'node', type: 'integer' },\r\n              { name: 'edge', type: 'integer' },\r\n              { name: 'cost', type: 'double' },\r\n              { name: 'agg_cost', type: 'double' },\r\n              { name: 'length', type: 'double' } // 添加length字段\r\n            ]\r\n          })\r\n          // 将FeatureLayer图层添加到地图上\r\n          map.layers.add(geojsonLayer)\r\n          // 计算总时长（小时和分钟）\r\n          const hours = Math.floor(totalCost / 3600)\r\n          const minutes = Math.floor((totalCost % 3600) / 60)\r\n          // 计算总距离（米或千米）\r\n          let distance\r\n          if (totalLength < 1000) {\r\n            distance = `${totalLength.toFixed(2)}米`\r\n          } else {\r\n            distance = `${(totalLength / 1000).toFixed(2)}千米`\r\n          }\r\n          // 根据是否为无眩光路径来存储结果\r\n          if (isNoGlareRoute) {\r\n            this.noGlareTotalHours = hours\r\n            this.noGlareTotalMinutes = minutes\r\n            this.noGlareTotalDistance = distance\r\n          } else {\r\n            this.totalHours = hours\r\n            this.totalMinutes = minutes\r\n            this.totalDistance = distance\r\n          }\r\n        })\r\n        .catch(error => console.error('Error loading the geojson file:', error))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/*之后要自己调样式的大小，这个仅作参考*/\r\n#viewDiv {\r\n  position: absolute; /* 固定定位 */\r\n  top: 0; /* 紧贴网页顶部 */\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height:100%; /* 将高度设置为视口高度的100% */\r\n  width: 100%; /* 将宽度设置为视口宽度的100% */\r\n  z-index: -1; /* 设置较低的z-index值，使其在App.vue的下部分 */\r\n  margin: auto;\r\n}\r\n\r\n.lu-jing-gui-hua {\r\n  position: fixed; /* 固定定位 */\r\n  display: flex;\r\n  flex-direction: column; /* 使子元素垂直排列,使大框和revert小框水平分布 */\r\n  z-index: 2;\r\n}\r\n\r\n.search-containers {\r\n  display: flex;\r\n  flex-direction: column; /* 保持垂直排列 */\r\n  justify-content: flex-start; /* 从顶部开始排列 */\r\n  align-items: flex-start; /* 子元素沿交叉轴的开始边缘对齐，即顶部对齐 */\r\n  width: 357px; /* 设置一个固定宽度 */\r\n  height:85px;\r\n  padding-right: 10px; /* 根据需要调整，确保搜索框周围有足够空间 */\r\n  padding-left:32px;/*整个搜索框的左边空间*/\r\n  padding-top: 6px;\r\n  background: #FFFFFF; /* 应用深色毛玻璃效果 */\r\n  -webkit-backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  border-top-left-radius: 10px; /* 设置圆角 */\r\n  border-top-right-radius: 10px;\r\n  border: 1px solid rgba(255, 255, 255, 0.45); /* 添加边框 */\r\n  position: absolute; /* 添加相对定位 */\r\n}\r\n\r\n/* 移除左右外边距 */\r\n.search-container.start,\r\n.search-container.end {\r\n  position: relative; /* 设置相对定位 */\r\n  margin-top: 5px;\r\n  padding-left: 0px; /* 留出图片的空间 */\r\n  margin-left: 24px; /* 根据侧边栏宽度来设置左边距 */\r\n}\r\n/* 更改 输入字体的框 的样式 */\r\n.search-box {\r\n  position: relative; /* 允许绝对定位的子元素 */\r\n  padding: 8px 8px; /* 初始内边距 */\r\n  border: 2px solid #ccc;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  flex-grow: 1;\r\n  box-sizing: border-box;\r\n  text-indent: 0px; /* 初始文本缩进，保持文本在左侧 */\r\n  width: 303px; /* 使搜索框填充容器 */\r\n  display: flex;\r\n  align-items: center; /* 垂直居中对齐 */\r\n}\r\n\r\n/* 鼠标悬停时只改变边框颜色，不改变宽度 */\r\n.search-box:hover {\r\n  border-color: blue; /* 改变边框颜色而不是宽度 */\r\n}\r\n\r\n.search-box:focus {\r\n  border-width: 2px;\r\n  border-color: blue;\r\n  text-indent: 0px; /* 聚焦时减少文本缩进 */\r\n}\r\n\r\n.search-results {\r\n  position: absolute;\r\n  z-index: 9999 !important; /* !important可以使这个css代码优先执行，让这个框显示为最高层级 */\r\n  top: 105%; /* 确保列表紧贴搜索框的底部 */\r\n  left: 0;\r\n  width: 100%; /* 使列表宽度与搜索框相同 */\r\n  background-color: white; /* 或其他背景色，确保列表可见 */\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1); /* 可选：添加一些阴影以提升视觉效果 */\r\n  max-height: 200px; /* 限制最大高度，5行大约160px，根据实际行高调整 */\r\n  overflow-y: auto; /* 超出部分显示滚动条 */\r\n  display: flex;\r\n  border-radius: 10px; /* 添加圆角 */\r\n}\r\n\r\n.search-results li:hover {\r\n  text-decoration: underline; /* 添加下划线 */\r\n  background-color: #f0f0f0; /* 更改背景颜色以提高对比度 */\r\n  cursor: pointer; /* 更改鼠标指针为手形，更明显地指示可点击 */\r\n}\r\n\r\n/* 查询按钮的容器样式 */\r\n.search-action {\r\n  display: flex;\r\n  position: absolute; /* 绝对定位 */\r\n  margin-left: 328px; /* 与左边界保持一定距离 */\r\n  top: 13px; /* 与底部保持一定距离 */\r\n  border: 2px solid  #ccc;\r\n  justify-content: flex-start;\r\n  border-radius: 10px;\r\n  cursor: pointer; /* 鼠标悬停时显示指针 */\r\n}\r\n\r\n/* 将CSS链接转换为@import语句 */\r\n@import url(\"https://js.geoscene.cn/4.27/@geoscene/core/assets/geoscene/themes/light/main.css\");\r\n\r\n.car{\r\n  padding-top:3px;\r\n  left:1px;\r\n}\r\n\r\n/* 交换的容器样式 */\r\n.revert-containers{\r\n  position: absolute; /* 或使用 fixed，根据需要 */\r\n  left: 0; /* 侧边栏靠在最左边 */\r\n  top: 0; /* 根据需要调整垂直位置 */\r\n  width: 20px;\r\n  height:85px;\r\n  padding-left:5px;\r\n  background-color: #FFFFFF;\r\n  border-radius: 10px; /* 设置圆角 */\r\n  -webkit-backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n}\r\n.swap-action button {\r\n  display:flex;\r\n  flex-direction: row; /* 保持水平排列 */\r\n  justify-content: flex-start; /* 水平排列的子元素靠左对齐 */\r\n  position: absolute;\r\n  left: 5px; /* 图标距离父容器左边的距离 */\r\n  top: 50%; /* 垂直居中对齐 */\r\n  transform: translateY(-50%); /* 使用transform属性垂直居中 */\r\n  border:white;/* 边框颜色设置为白色 */\r\n  padding:0px;\r\n  background-color: #FFFFFF;\r\n  cursor: pointer; /* 鼠标悬停时显示指针 */\r\n}\r\n\r\n/* 搜索框框前面的圆圈的样式 */\r\n.search-icon-wrapper {\r\n  display: inline-block; /* 或者使用 flex 布局 */\r\n  position: absolute; /* 绝对定位 */\r\n  left: -20px; /* 根据需要调整 */\r\n  top: 50%;\r\n  transform: translateY(-50%); /* 垂直居中对齐 */\r\n}\r\n\r\n/* 删除logo的样式 */\r\n.search-box-img {/* 作用：使得 删除logo 在搜索框内 */\r\n  display: flex;\r\n  position: absolute;\r\n  left:278px;\r\n  top: 50%;\r\n  transform: translateY(-35%); /* 垂直居中对齐 */\r\n  padding-inline-end: 0px;\r\n}\r\n.delete{\r\n  cursor: pointer; /* 鼠标悬停时显示指针 */\r\n}\r\n.delete img {\r\n  pointer-events: none; /* 点击图片时不会影响输入框 （记得改成删除这个框框内容）*/\r\n}\r\n\r\n/* 搜索logo的样式 */\r\n.search-action img {\r\n  transform: scale(0.85); /* 将图片缩放到原始尺寸的50% */\r\n}\r\n.search-action:hover{\r\n  border-color: blue;\r\n}\r\n\r\n.main-container{\r\n  position: fixed;\r\n  z-index: 1;\r\n}\r\n\r\n.main-container{\r\n  position: absolute;\r\n  z-index: 1;\r\n}\r\n\r\n/* 选择时间框的样式 */\r\n.choose-time{\r\n  transform: none;\r\n  position: absolute;\r\n  display: block;\r\n  width: 390px;\r\n  height: 30px;\r\n  border-bottom-left-radius: 10px; /* 设置圆角 */\r\n  border-bottom-right-radius: 10px;\r\n  background-color:#FFFFFF;\r\n  margin-top: 90px;/* 控制时间选择框在网页垂直方向的位置 */\r\n  padding-left: 10px;\r\n  padding-top: 3px;\r\n}\r\n.form-group label,\r\n.form-group input {\r\n  margin-right: 10px; /* 右侧外边距 */\r\n}\r\n\r\n/* 路线展示框的样式 */\r\n.routelist{\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column; /* 垂直排列 */\r\n  left: 8px; /* 侧边栏靠在最左边 */\r\n  margin-top: 135px; /* 控制路线展示框在网页垂直方向的位置 */\r\n  width: 400px;\r\n  height: auto;\r\n  background-color: #FFFFFF;\r\n  border-radius: 10px; /* 设置圆角 */\r\n  -webkit-backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n  backdrop-filter: blur(25px); /* 应用毛玻璃效果 */\r\n}\r\n.cardlist{\r\n  padding:5px;\r\n}\r\n.route{\r\n  left: 8px; /* 距离左侧的距离 */\r\n  width:348px;\r\n  height: auto;\r\n  border-radius: 10px; /* 设置圆角 */\r\n  border: 2px solid #E4E6E7;\r\n  padding: 25px 20px 10px 15px;\r\n  cursor: pointer;\r\n  margin: 0 0 10px;\r\n}\r\n.route:hover{\r\n  border-color: blue;\r\n}\r\n.introduction{\r\n  color: #3385FF;\r\n}\r\n.intro span{\r\n  margin-right: 10px; /* 右侧外边距 */\r\n}\r\n\r\n/* 新的覆盖层容器样式 */\r\n.loader-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 50%;\r\n  width: 45%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(255, 255, 255, 0.8); /* 可选：添加半透明背景 */\r\n  transform: translateX(-50%);\r\n  z-index: 10; /* 确保覆盖层在最上层 */\r\n}\r\n\r\n/* 加载动画的样式 */\r\n.loader {\r\n  display: inline-grid;\r\n  width: 90px;\r\n  aspect-ratio: 1;\r\n  animation: l3-0 5s steps(10) infinite;\r\n}\r\n.loader:before,\r\n.loader:after {\r\n  content:\"\";\r\n  grid-area: 1/1;\r\n}\r\n.loader:before {\r\n  clip-path: polygon(100% 50%,90.45% 79.39%,65.45% 97.55%,34.55% 97.55%,9.55% 79.39%,0% 50%,9.55% 20.61%,34.55% 2.45%,65.45% 2.45%,90.45% 20.61%,100% 50%,85.6% 24.14%,63.6% 8.15%,36.4% 8.15%,14.4% 24.14%,6% 50%,14.4% 75.86%,36.4% 91.85%,63.6% 91.85%,85.6% 75.86%,94% 50%,85.6% 24.14%);\r\n  background: #574951;\r\n}\r\n.loader:after {\r\n  background: #83988E;\r\n  clip-path: polygon(100% 50%,65.45% 97.55%,9.55% 79.39%,9.55% 20.61%,65.45% 2.45%);\r\n  margin: 27%;\r\n  translate: 46% 0;\r\n  transform-origin: right;\r\n  animation: l3-1 .5s linear infinite;\r\n}\r\n@keyframes l3-0 {to{rotate: 1turn}}\r\n@keyframes l3-1 {\r\n  0%{rotate:  18deg}\r\n  to{rotate: -18deg}\r\n}\r\n.search-results li.highlighted {\r\n  background-color: #f0f0f0; /* 高亮背景颜色 */\r\n}\r\n</style>\r\n","import { render } from \"./RouteView.vue?vue&type=template&id=3fcfa9d1\"\nimport script from \"./RouteView.vue?vue&type=script&lang=js\"\nexport * from \"./RouteView.vue?vue&type=script&lang=js\"\n\nimport \"./RouteView.vue?vue&type=style&index=0&id=3fcfa9d1&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/*\r\nAll material copyright GeoScene, All Rights Reserved, unless otherwise specified.\r\nSee https://js.geoscene.cn/4.27/geoscene/copyright.txt for details.\r\n*/\r\nimport{_ as r}from\"../chunks/tslib.es6.js\";import{property as e}from\"../core/accessorSupport/decorators/property.js\";import\"../core/accessorSupport/ensureType.js\";import\"../core/arrayUtils.js\";import\"../core/has.js\";import{subclass as o}from\"../core/accessorSupport/decorators/subclass.js\";import{owningCollectionProperty as s}from\"../core/support/OwningCollection.js\";import t from\"./Layer.js\";import{BlendLayer as i}from\"./mixins/BlendLayer.js\";import{ScaleRangeLayer as p}from\"./mixins/ScaleRangeLayer.js\";import{GraphicsCollection as a}from\"../support/GraphicsCollection.js\";import c from\"../symbols/support/ElevationInfo.js\";let n=class extends(i(p(t))){constructor(r){super(r),this.elevationInfo=null,this.graphics=new a,this.screenSizePerspectiveEnabled=!0,this.type=\"graphics\",this.internal=!1}destroy(){this.removeAll(),this.graphics.destroy()}add(r){return this.graphics.add(r),this}addMany(r){return this.graphics.addMany(r),this}removeAll(){return this.graphics.removeAll(),this}remove(r){this.graphics.remove(r)}removeMany(r){this.graphics.removeMany(r)}on(r,e){return super.on(r,e)}graphicChanged(r){this.emit(\"graphic-update\",r)}};r([e({type:c})],n.prototype,\"elevationInfo\",void 0),r([e(s(a,\"graphics\"))],n.prototype,\"graphics\",void 0),r([e({type:[\"show\",\"hide\"]})],n.prototype,\"listMode\",void 0),r([e()],n.prototype,\"screenSizePerspectiveEnabled\",void 0),r([e({readOnly:!0})],n.prototype,\"type\",void 0),r([e({constructOnly:!0})],n.prototype,\"internal\",void 0),n=r([o(\"geoscene.layers.GraphicsLayer\")],n);const h=n;export{h as default};"],"names":["class","_createElementVNode","src","alt","style","_hoisted_6","_hoisted_11","key","ref","_hoisted_18","_hoisted_22","_hoisted_25","id","for","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","onClick","_cache","args","$options","swap","title","_hoisted_7","_hoisted_8","_hoisted_9","type","$event","$data","searchQueryStart","onInput","onSearchInputChange","placeholder","_hoisted_10","clc1","_hoisted_12","searchResults","length","_hoisted_13","_renderList","result","index","_normalizeClass","highlightedIndex","selectResult","name","_hoisted_14","_createCommentVNode","_hoisted_15","_hoisted_16","searchQueryEnd","_hoisted_17","clc2","_hoisted_19","searchResultsEnd","_hoisted_20","_hoisted_21","onSearch","_hoisted_23","isLoading","_hoisted_24","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","selectedDate","min","minDate","max","maxDate","isDateDisabled","onChange","handleDateChange","_hoisted_32","_hoisted_33","formattedTime","onTimeInputChange","step","_hoisted_34","_hoisted_35","_hoisted_36","_normalizeStyle","color","getColor","_hoisted_37","_hoisted_38","_toDisplayString","totalHours","totalMinutes","_hoisted_39","totalDistance","_hoisted_40","_hoisted_41","_hoisted_42","noGlareTotalHours","noGlareTotalMinutes","_hoisted_43","noGlareTotalDistance","data","selectedResultStart","selectedResultEnd","selectedTime","mounted","this","initMap","$route","query","start","end","JSON","parse","parseUrlParams","window","addEventListener","handleKeydown","beforeUnmount","removeEventListener","computed","hours","minutes","split","map","Number","roundedMinutes","Math","floor","String","padStart","methods","event","value","target","date","selected","Date","month","getMonth","day","getDate","alert","preventDefault","nextTick","highlightedElement","$refs","searchResultsStart","querySelector","scrollIntoView","block","behavior","updateTime","now","currentTime","getHours","getMinutes","isTimeFromUrl","isSwapping","tempQuery","tempResult","then","urlParams","URLSearchParams","location","search","startParam","get","endParam","dateParam","timeParam","defaultRouteIdParam","timeBasedRouteIdParam","startObj","decodeURIComponent","address","e","console","error","endObj","defaultRouteId","timeBasedRouteId","isStart","searchResultsField","includes","log","fetch","method","headers","body","stringify","response","json","catch","simplifiedResult","wgs84_latitude","wgs84_longitude","baidu_index","baidu_latitude","baidu_longitude","label","currentStart","currentEnd","$router","push","path","time","Promise","resolve","reject","startWithLocation","endWithLocation","axios","post","defaultRoutePlanId","default_id","timeBasedRoutePlanId","time_based_id","Error","Map","basemap","view","MapView","container","center","zoom","constraints","geometry","xmin","ymin","xmax","ymax","minScale","maxScale","rotationEnabled","snapToZoom","basemapGallery","BasemapGallery","source","compass","Compass","ui","add","move","graphicsLayer","GraphicsLayer","featureLayer","FeatureLayer","url","renderer","symbol","outline","width","popupTemplate","content","fieldInfos","fieldName","when","drawPoints","adjustView","drawRoutes","err","padding","extent","Extent","goTo","startPoint","Point","longitude","latitude","endPoint","startGraphic","Graphic","size","attributes","endGraphic","addMany","fetchAndDrawRoute","routeId","isNoGlareRoute","geojsonUrl","totalLength","totalCost","geojsonLayer","features","feature","properties","cost","paths","coordinates","objectIdField","fields","layers","distance","toFixed","__exports__","render","n","i","p","t","constructor","r","super","elevationInfo","graphics","a","screenSizePerspectiveEnabled","internal","destroy","removeAll","remove","removeMany","on","graphicChanged","emit","c","prototype","s","readOnly","constructOnly","o","h"],"sourceRoot":""}