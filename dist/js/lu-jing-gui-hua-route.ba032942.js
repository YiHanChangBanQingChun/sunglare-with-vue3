"use strict";(self["webpackChunksun_glare_project"]=self["webpackChunksun_glare_project"]||[]).push([[7922,3443],{33816:function(e,t,s){s.r(t),s.d(t,{default:function(){return I}});var r=s(56768),i=s(45130),o=s(24232);const n={class:"lu-jing-gui-hua"},a=(0,r.Lk)("h1",null,"这个页面是放路径规划的",-1),l={class:"search-containers"},u={class:"search-container start"},d={key:0,class:"search-results"},p=["onClick"],c={class:"search-container end"},h={key:0,class:"search-results"},y=["onClick"],m={class:"search-action"},g=(0,r.Lk)("div",{id:"mapViewDiv",style:{height:"560px"}},null,-1);function f(e,t,s,f,_,v){return(0,r.uX)(),(0,r.CE)("div",n,[a,(0,r.Lk)("div",l,[(0,r.Lk)("div",u,[(0,r.bo)((0,r.Lk)("input",{type:"text","onUpdate:modelValue":t[0]||(t[0]=e=>_.searchQueryStart=e),onInput:t[1]||(t[1]=e=>v.onSearchInputChange(e,!0)),placeholder:"搜索起点...",class:"search-box search-box-start"},null,544),[[i.Jo,_.searchQueryStart]]),_.searchResults.length&&_.searchQueryStart?((0,r.uX)(),(0,r.CE)("div",d,[(0,r.Lk)("ul",null,[((0,r.uX)(!0),(0,r.CE)(r.FK,null,(0,r.pI)(_.searchResults,((e,t)=>((0,r.uX)(),(0,r.CE)("li",{key:t,onClick:t=>v.selectResult(e,!0)},(0,o.v_)(e.name),9,p)))),128))])])):(0,r.Q3)("",!0)]),(0,r.Lk)("div",c,[(0,r.bo)((0,r.Lk)("input",{type:"text","onUpdate:modelValue":t[2]||(t[2]=e=>_.searchQueryEnd=e),onInput:t[3]||(t[3]=e=>v.onSearchInputChange(e,!1)),placeholder:"搜索终点...",class:"search-box search-box-end"},null,544),[[i.Jo,_.searchQueryEnd]]),_.searchResultsEnd.length&&_.searchQueryEnd?((0,r.uX)(),(0,r.CE)("div",h,[(0,r.Lk)("ul",null,[((0,r.uX)(!0),(0,r.CE)(r.FK,null,(0,r.pI)(_.searchResultsEnd,((e,t)=>((0,r.uX)(),(0,r.CE)("li",{key:t,onClick:t=>v.selectResult(e,!1)},(0,o.v_)(e.name),9,y)))),128))])])):(0,r.Q3)("",!0)]),(0,r.Lk)("div",m,[(0,r.Lk)("button",{onClick:t[4]||(t[4]=(...e)=>v.clcSearch&&v.clcSearch(...e))},"重新选择"),(0,r.Lk)("button",{onClick:t[5]||(t[5]=(...e)=>v.onSearch&&v.onSearch(...e))},"查询路径")])]),g])}s(44114),s(14603),s(47566),s(98721);var _=s(7382),v=s(56906),b=s(11134),S=s(74036),E=s(58423),R=s(63443),w={name:"RouteView",data(){return{selectedResultStart:null,selectedResultEnd:null,searchResults:[],searchResultsEnd:[],searchQueryStart:"",searchQueryEnd:""}},mounted(){this.initMap(),this.$route.query.start&&this.$route.query.end&&(this.selectedResultStart=JSON.parse(this.$route.query.start),this.selectedResultEnd=JSON.parse(this.$route.query.end)),this.parseUrlParams()},methods:{clcSearch(){this.$router.push("/lu-jing-gui-hua")},parseUrlParams(){const e=new URLSearchParams(window.location.search),t=e.get("start"),s=e.get("end");if(t)try{const e=JSON.parse(decodeURIComponent(t));e&&e.address&&(this.searchQueryStart=e.name)}catch(r){console.error("Error parsing start parameter:",r)}if(s)try{const e=JSON.parse(decodeURIComponent(s));e&&e.address&&(this.searchQueryEnd=e.name)}catch(r){console.error("Error parsing end parameter:",r)}},onSearchInputChange(e,t){const s=e.target.value,r=t?"searchResults":"searchResultsEnd";s.includes("'")?console.log("输入法临时输入，不发送请求"):s.length>=2?fetch("http://127.0.0.1:5000/search",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({searchQueryStart:s})}).then((e=>e.json())).then((e=>{this[r]=e})).catch((e=>{console.error("错误:",e)})):this[r]=[]},selectResult(e,t=!0){console.log("用户选择了搜索结果:",e);const s={name:e.name,address:e.address,wgs84_latitude:e.wgs84_latitude,wgs84_longitude:e.wgs84_longitude,location:[e.wgs84_longitude,e.wgs84_latitude],baidu_index:e.baidu_index,baidu_latitude:e.baidu_latitude,baidu_longitude:e.baidu_longitude,id:e.id,label:e.label};t?(this.selectedResultStart=s,this.searchQueryStart=s.name,this.searchResults=[],this.$router.push({path:"/lu-jing-gui-hua/intermediate-page",query:{start:JSON.stringify(s)}})):(this.selectedResultEnd=s,this.searchQueryEnd=s.name,this.searchResultsEnd=[],this.$router.push({path:"/lu-jing-gui-hua/intermediate-page",query:{end:JSON.stringify(s)}}))},onSearch(){if(this.selectedResultStart&&this.selectedResultEnd){const e={...this.selectedResultStart,location:[this.selectedResultStart.wgs84_longitude,this.selectedResultStart.wgs84_latitude]},t={...this.selectedResultEnd,location:[this.selectedResultEnd.wgs84_longitude,this.selectedResultEnd.wgs84_latitude]};this.$router.push({path:"/lu-jing-gui-hua/result",query:{start:JSON.stringify(e),end:JSON.stringify(t)}})}else alert("请确保起点和终点都已选择。")},initMap(){const e=new _.A({basemap:"tianditu-vector"});this.view=new v.A({container:"mapViewDiv",map:e,center:[114.3,30.7],zoom:4,constraints:{geometry:{type:"extent",xmin:113.6,ymin:29.9,xmax:115,ymax:31.3},minScale:500,maxScale:2e6,rotationEnabled:!1,snapToZoom:!1}});const t=new E.A;e.add(t),this.drawPoints(t),this.drawRoute(e)},drawPoints(e){if(!this.$route.query.start||!this.$route.query.end)return void console.error("Start or end point is undefined.");const t=JSON.parse(this.$route.query.start),s=JSON.parse(this.$route.query.end);if(!t.location||!s.location)return void console.error("Start or end point does not have a location.");const r=new S.A({longitude:t.location[0],latitude:t.location[1]}),i=new S.A({longitude:s.location[0],latitude:s.location[1]}),o=new b.A({geometry:r,symbol:{type:"simple-marker",color:"green",size:"20px"},popupTemplate:{title:"起点信息",content:[{type:"fields",fieldInfos:[{fieldName:"address",label:"地址"},{fieldName:"name",label:"名称"},{fieldName:"wgs84_latitude",label:"WGS84纬度"},{fieldName:"wgs84_longitude",label:"WGS84经度"},{fieldName:"baidu_index",label:"百度索引"},{fieldName:"baidu_latitude",label:"百度纬度"},{fieldName:"baidu_longitude",label:"百度经度"},{fieldName:"id",label:"ID"},{fieldName:"label",label:"标签"}]}]},attributes:t}),n=new b.A({geometry:i,symbol:{type:"simple-marker",color:"red",size:"20px"},popupTemplate:{title:"起点信息",content:[{type:"fields",fieldInfos:[{fieldName:"address",label:"地址"},{fieldName:"name",label:"名称"},{fieldName:"wgs84_latitude",label:"WGS84纬度"},{fieldName:"wgs84_longitude",label:"WGS84经度"},{fieldName:"baidu_index",label:"百度索引"},{fieldName:"baidu_latitude",label:"百度纬度"},{fieldName:"baidu_longitude",label:"百度经度"},{fieldName:"id",label:"ID"},{fieldName:"label",label:"标签"}]}]},attributes:s});e.addMany([o,n])},drawRoute(e){const t=this.$route.query.id;if(!t)return void console.error("Route ID is undefined.");const s=`http://localhost:5000/get_geojson/${t}`;fetch(s).then((e=>e.json())).then((t=>{const r=new R["default"]({url:s,renderer:{type:"simple",symbol:{type:"simple-line",color:[0,0,255],width:5}}});e.add(r)})).catch((e=>console.error("Error loading the geojson file:",e)))}}},x=s(71241);const O=(0,x.A)(w,[["render",f]]);var I=O},63443:function(e,t,s){s.r(t),s.d(t,{default:function(){return B}});var r=s(71457),i=(s(2516),s(3035)),o=(s(22070),s(118),s(92223),s(65907),s(71824),s(2882),s(65092),s(44829),s(11066),s(23928)),n=s(40912),a=s(71120),l=s(4244),u=s(76543),d=(s(37679),s(69292),s(51020)),p=s(29916),c=s(11894),h=s(71680),y=(s(44114),s(47966)),m=s(71926),g=s(15114),f=s(7533),_=s(37238),v=s(84619),b=s(41759),S=s(9737);const E="geoscene.layers.graphics.sources.GeoJSONSource",R=g.A.getLogger(E);let w=class extends m.A{constructor(){super(...arguments),this.type="geojson",this.refresh=(0,a.sg)((async e=>{await this.load();const{extent:t,timeExtent:s}=await this._connection.invoke("refresh",e);return this.sourceJSON.extent=t,s&&(this.sourceJSON.timeInfo.timeExtent=[s.start,s.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}}))}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}applyEdits(e){return this.load().then((()=>this._applyEdits(e)))}openPorts(){return this.load().then((()=>this._connection.openPorts()))}queryFeatures(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t))).then((e=>v.A.fromJSON(e)))}queryFeaturesJSON(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t)))}queryFeatureCount(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)))}queryObjectIds(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)))}queryExtent(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t))).then((e=>({count:e.count,extent:b.A.fromJSON(e.extent)})))}querySnapping(e,t={}){return this.load(t).then((()=>this._connection.invoke("querySnapping",e,t)))}_applyEdits(e){if(!this._connection)throw new y.A("geojson-layer-source:edit-failure","Memory source not loaded");const t=this.layer.objectIdField,s=[],r=[],i=[];if(e.addFeatures)for(const o of e.addFeatures)s.push(this._serializeFeature(o));if(e.deleteFeatures)for(const o of e.deleteFeatures)"objectId"in o&&null!=o.objectId?r.push(o.objectId):"attributes"in o&&null!=o.attributes[t]&&r.push(o.attributes[t]);if(e.updateFeatures)for(const o of e.updateFeatures)i.push(this._serializeFeature(o));return this._connection.invoke("applyEdits",{adds:s,updates:i,deletes:r}).then((({extent:e,timeExtent:t,featureEditResults:s})=>(this.sourceJSON.extent=e,t&&(this.sourceJSON.timeInfo.timeExtent=[t.start,t.end]),this._createEditsResult(s))))}_createEditsResult(e){return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(e){const t=!0===e.success?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new y.A("geojson-layer-source:edit-failure",t.description,{code:t.code}):null}}_serializeFeature(e){const{attributes:t}=e,s=this._geometryForSerialization(e);return s?{geometry:s.toJSON(),attributes:t}:{attributes:t}}_geometryForSerialization(e){const{geometry:t}=e;return null==t?null:"mesh"===t.type||"extent"===t.type?S.A.fromExtent(t.extent):t}async _startWorker(e){this._connection=await(0,f.ho)("GeoJSONSourceWorker",{strategy:(0,d.A)("feature-layers-workers")?"dedicated":"local",signal:e});const{fields:t,spatialReference:s,hasZ:r,geometryType:i,objectIdField:o,url:n,timeInfo:a,customParameters:l}=this.layer,u="defaults"===this.layer.originOf("spatialReference"),p={url:n,customParameters:l,fields:t&&t.map((e=>e.toJSON())),geometryType:c.g.toJSON(i),hasZ:r,objectIdField:o,timeInfo:a?a.toJSON():null,spatialReference:u?null:s&&s.toJSON()},h=await this._connection.invoke("load",p,{signal:e});for(const d of h.warnings)R.warn(d.message,{layer:this.layer,warning:d});h.featureErrors.length&&R.warn(`Encountered ${h.featureErrors.length} validation errors while loading features`,h.featureErrors),this.sourceJSON=h.layerDefinition,this.capabilities=(0,_.f)(this.sourceJSON.hasZ,!0)}};(0,r._)([(0,u.MZ)()],w.prototype,"capabilities",void 0),(0,r._)([(0,u.MZ)()],w.prototype,"type",void 0),(0,r._)([(0,u.MZ)({constructOnly:!0})],w.prototype,"layer",void 0),(0,r._)([(0,u.MZ)()],w.prototype,"sourceJSON",void 0),w=(0,r._)([(0,p.$)(E)],w);var x=s(79366),O=s(52084),I=s(298),F=s(81315),M=s(25673),N=s(20129),A=s(21107),Z=s(8197),C=s(99024),J=s(21899),j=s(83256),k=s(78129),q=s(82571),P=s(81937),Q=s(56408),T=s(30104),$=s(23540),D=s(9259),L=s(81809),G=s(55823),z=s(12790);const U=(0,Q.p)();let V=class extends((0,N.f)((0,O.d)((0,F.J)((0,I.F)((0,x.d)((0,J.e)((0,C.j)((0,Z.J)((0,M.q)((0,A.A)((0,n.P)(h.A)))))))))))){constructor(e){super(e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.editingEnabled=!1,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.hasZ=void 0,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="GeoJSON",this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new w({layer:this}),this.spatialReference=z.A.WGS84,this.templates=null,this.title="GeoJSON",this.type="geojson",this.typeIdField=null,this.types=null}destroy(){this.source?.destroy()}load(e){const t=this.loadFromPortal({supportedTypes:["GeoJson"],supportsData:!1},e).catch(a.QP).then((()=>this.source.load(e))).then((()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo"],"service"),(0,T.yp)(this.renderer,this.fieldsIndex),(0,T.sv)(this.timeInfo,this.fieldsIndex)}));return this.addResolvingPromise(t),Promise.resolve(this)}get capabilities(){return this.source?this.source.capabilities:null}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}get isTable(){return this.loaded&&null==this.geometryType}get parsedUrl(){return this.url?(0,l.An)(this.url):null}set renderer(e){(0,T.yp)(e,this.fieldsIndex),this._set("renderer",e)}set url(e){if(!e)return void this._set("url",e);const t=(0,l.An)(e);this._set("url",t.path),t.query&&(this.customParameters={...this.customParameters,...t.query})}async applyEdits(e,t){const{applyEdits:r}=await s.e(7312).then(s.bind(s,37312));await this.load();const i=await r(this,this.source,e,t);return this.read({extent:this.source.sourceJSON.extent,timeInfo:this.source.sourceJSON.timeInfo},{origin:"service",ignoreDefaults:!0}),i}on(e,t){return super.on(e,t)}createPopupTemplate(e){return(0,G.tn)(this,e)}createQuery(){const e=new L.A,t=this.get("capabilities.data");e.returnGeometry=!0,t&&t.supportsZ&&(e.returnZ=!0),e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:s,timeExtent:r}=this;return e.timeExtent=null!=s&&null!=r?r.offset(-s.value,s.unit):r||null,e}getFieldDomain(e,t){let s,r=!1;const i=t&&t.feature,o=i&&i.attributes,n=this.typeIdField&&o&&o[this.typeIdField];return null!=n&&this.types&&(r=this.types.some((t=>t.id==n&&(s=t.domains&&t.domains[e],s&&"inherited"===s.type&&(s=this._getLayerDomain(e)),!0)))),r||s||(s=this._getLayerDomain(e)),s}getField(e){return this.fieldsIndex.get(e)}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(L.A.from(e)||this.createQuery(),t))).then((e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this.load().then((()=>this.source.queryObjectIds(L.A.from(e)||this.createQuery(),t)))}queryFeatureCount(e,t){return this.load().then((()=>this.source.queryFeatureCount(L.A.from(e)||this.createQuery(),t)))}queryExtent(e,t){return this.load().then((()=>this.source.queryExtent(L.A.from(e)||this.createQuery(),t)))}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh(this.customParameters);return null!=t&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}_getLayerDomain(e){if(!this.fields)return null;let t=null;return this.fields.some((s=>(s.name===e&&(t=s.domain),!!t))),t}};(0,r._)([(0,u.MZ)({readOnly:!0,json:{read:!1,write:!1}})],V.prototype,"capabilities",null),(0,r._)([(0,u.MZ)({type:String})],V.prototype,"copyright",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],V.prototype,"createQueryVersion",null),(0,r._)([(0,u.MZ)({readOnly:!0})],V.prototype,"defaultPopupTemplate",null),(0,r._)([(0,u.MZ)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],V.prototype,"definitionExpression",void 0),(0,r._)([(0,u.MZ)({type:String})],V.prototype,"displayField",void 0),(0,r._)([(0,u.MZ)({type:Boolean})],V.prototype,"editingEnabled",void 0),(0,r._)([(0,u.MZ)(j.Yj)],V.prototype,"elevationInfo",void 0),(0,r._)([(0,u.MZ)({type:[P.A],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],V.prototype,"fields",void 0),(0,r._)([(0,u.MZ)(U.fieldsIndex)],V.prototype,"fieldsIndex",void 0),(0,r._)([(0,u.MZ)({type:b.A,json:{name:"extent"}})],V.prototype,"fullExtent",void 0),(0,r._)([(0,u.MZ)({type:["point","polygon","polyline","multipoint"],json:{read:{reader:c.g.read}}})],V.prototype,"geometryType",void 0),(0,r._)([(0,u.MZ)({type:Boolean})],V.prototype,"hasZ",void 0),(0,r._)([(0,u.MZ)(j.id)],V.prototype,"id",void 0),(0,r._)([(0,u.MZ)({type:Boolean,readOnly:!0})],V.prototype,"isTable",null),(0,r._)([(0,u.MZ)(j.kF)],V.prototype,"labelsVisible",void 0),(0,r._)([(0,u.MZ)({type:[$.A],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:D.w},write:!0}})],V.prototype,"labelingInfo",void 0),(0,r._)([(0,u.MZ)(j.fV)],V.prototype,"legendEnabled",void 0),(0,r._)([(0,u.MZ)({type:["show","hide"]})],V.prototype,"listMode",void 0),(0,r._)([(0,u.MZ)({type:String,json:{name:"layerDefinition.objectIdField",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"objectIdField"}}}})],V.prototype,"objectIdField",void 0),(0,r._)([(0,u.MZ)(j.ke)],V.prototype,"opacity",void 0),(0,r._)([(0,u.MZ)({type:["GeoJSON"]})],V.prototype,"operationalLayerType",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],V.prototype,"parsedUrl",null),(0,r._)([(0,u.MZ)(j.M6)],V.prototype,"popupEnabled",void 0),(0,r._)([(0,u.MZ)({type:i.A,json:{name:"popupInfo",write:!0}})],V.prototype,"popupTemplate",void 0),(0,r._)([(0,u.MZ)({types:o.H,json:{name:"layerDefinition.drawingInfo.renderer",write:!0,origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:o.X}}}})],V.prototype,"renderer",null),(0,r._)([(0,u.MZ)(j.PY)],V.prototype,"screenSizePerspectiveEnabled",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],V.prototype,"source",void 0),(0,r._)([(0,u.MZ)({type:z.A})],V.prototype,"spatialReference",void 0),(0,r._)([(0,u.MZ)({type:[k.A]})],V.prototype,"templates",void 0),(0,r._)([(0,u.MZ)()],V.prototype,"title",void 0),(0,r._)([(0,u.MZ)({json:{read:!1},readOnly:!0})],V.prototype,"type",void 0),(0,r._)([(0,u.MZ)({type:String,readOnly:!0})],V.prototype,"typeIdField",void 0),(0,r._)([(0,u.MZ)({type:[q.A]})],V.prototype,"types",void 0),(0,r._)([(0,u.MZ)(j.OZ)],V.prototype,"url",null),V=(0,r._)([(0,p.$)("geoscene.layers.GeoJSONLayer")],V);const B=V},58423:function(e,t,s){s.d(t,{A:function(){return h}});var r=s(71457),i=s(76543),o=(s(37679),s(69292),s(51020),s(29916)),n=s(46626),a=s(71680),l=s(79366),u=s(99024),d=s(41341),p=s(9693);let c=class extends((0,l.d)((0,u.j)(a.A))){constructor(e){super(e),this.elevationInfo=null,this.graphics=new d.Y,this.screenSizePerspectiveEnabled=!0,this.type="graphics",this.internal=!1}destroy(){this.removeAll(),this.graphics.destroy()}add(e){return this.graphics.add(e),this}addMany(e){return this.graphics.addMany(e),this}removeAll(){return this.graphics.removeAll(),this}remove(e){this.graphics.remove(e)}removeMany(e){this.graphics.removeMany(e)}on(e,t){return super.on(e,t)}graphicChanged(e){this.emit("graphic-update",e)}};(0,r._)([(0,i.MZ)({type:p.A})],c.prototype,"elevationInfo",void 0),(0,r._)([(0,i.MZ)((0,n.C)(d.Y,"graphics"))],c.prototype,"graphics",void 0),(0,r._)([(0,i.MZ)({type:["show","hide"]})],c.prototype,"listMode",void 0),(0,r._)([(0,i.MZ)()],c.prototype,"screenSizePerspectiveEnabled",void 0),(0,r._)([(0,i.MZ)({readOnly:!0})],c.prototype,"type",void 0),(0,r._)([(0,i.MZ)({constructOnly:!0})],c.prototype,"internal",void 0),c=(0,r._)([(0,o.$)("geoscene.layers.GraphicsLayer")],c);const h=c},31004:function(e,t,s){s.d(t,{F:function(){return r}});const r={supportsStatistics:!0,supportsPercentileStatistics:!0,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsCentroid:!0,supportsCacheHint:!1,supportsDistance:!0,supportsDistinct:!0,supportsExtent:!0,supportsGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQuantization:!0,supportsQuantizationEditMode:!1,supportsQueryGeometry:!0,supportsResultType:!1,supportsSqlExpression:!0,supportsMaxRecordCountFactor:!1,supportsStandardizedQueriesOnly:!0,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!0,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!0,supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsCompactGeometry:!1,maxRecordCountFactor:void 0,maxRecordCount:void 0,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}},37238:function(e,t,s){s.d(t,{F0:function(){return a},Vx:function(){return d},e2:function(){return p},f:function(){return c}});var r=s(51020),i=s(1834),o=s(31004),n=s(25138);function a(e){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===e||"esriGeometryMultipoint"===e?n.Cb:"esriGeometryPolyline"===e?n.yM:n.WR}}}const l=/^[_$a-zA-Z][_$a-zA-Z0-9]*$/;let u=1;function d(e,t){if((0,r.A)("geoscene-csp-restrictions"))return()=>({[t]:null,...e});try{let s=`this.${t} = null;`;for(const t in e)s+=`this${l.test(t)?`.${t}`:`["${t}"]`} = ${JSON.stringify(e[t])};`;const r=new Function(`\n      return class AttributesClass$${u++} {\n        constructor() {\n          ${s};\n        }\n      }\n    `)();return()=>new r}catch(s){return()=>({[t]:null,...e})}}function p(e={}){return[{name:"New Feature",description:"",prototype:{attributes:(0,i.o8)(e)}}]}function c(e,t){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:t,supportsDelete:t,supportsEditing:t,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:t,supportsExceedsLimitStatistics:!0,supportsAsyncConvert3D:!1},query:o.F,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsGeometryUpdate:t,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsAsyncApplyEdits:!1}}}}}]);
//# sourceMappingURL=lu-jing-gui-hua-route.ba032942.js.map