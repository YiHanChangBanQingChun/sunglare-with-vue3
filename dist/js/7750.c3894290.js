"use strict";(self["webpackChunksun_glare_project"]=self["webpackChunksun_glare_project"]||[]).push([[7750],{67779:function(e,t,s){s.d(t,{b:function(){return r},c:function(){return i},f:function(){return n}});s(16573),s(78100),s(77936),s(37467),s(44732),s(79577);function i(){return new Float32Array(3)}function r(e){const t=new Float32Array(3);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t}function n(e,t,s){const i=new Float32Array(3);return i[0]=e,i[1]=t,i[2]=s,i}function o(e,t){return new Float32Array(e,t,3)}function a(){return i()}function l(){return n(1,1,1)}function h(){return n(1,0,0)}function d(){return n(0,1,0)}function u(){return n(0,0,1)}const c=a(),f=l(),p=h(),m=d(),y=u();Object.freeze(Object.defineProperty({__proto__:null,ONES:f,UNIT_X:p,UNIT_Y:m,UNIT_Z:y,ZEROS:c,clone:r,create:i,createView:o,fromValues:n,ones:l,unitX:h,unitY:d,unitZ:u,zeros:a},Symbol.toStringTag,{value:"Module"}))},70620:function(e,t,s){s.d(t,{b3:function(){return d},jZ:function(){return h}});s(44114);var i=s(99359),r=s(84509),n=s(55040),o=s(55772),a=s(43166),l=s(72465);function h(e){return u(e,!0)}function d(e){return u(e,!1)}function u(e,t){if(null==e)return null;const s=e.spatialReference,i=(0,l.Vp)(s),n="toJSON"in e?e.toJSON():e;if(!i)return n;const h=(0,l.K8)(s)?102100:4326,d=a.j7[h].maxX,u=a.j7[h].minX;if((0,o.fT)(n))return f(n,d,u);if((0,o.U9)(n))return n.points=n.points.map((e=>f(e,d,u))),n;if((0,o.ZC)(n))return c(n,i);if((0,o.Bi)(n)||(0,o.Rg)(n)){const e=(0,r.Rg)(v,n),s={xmin:e[0],ymin:e[1],xmax:e[2],ymax:e[3]},i=(0,a.kd)(s.xmin,u)*(2*d),o=0===i?n:(0,a.kS)(n,i);return s.xmin+=i,s.xmax+=i,s.xmax>d?_(o,d,t):s.xmin<u?_(o,u,t):o}return n}function c(e,t){if(!t)return e;const s=p(e,t).map((e=>e.extent));return s.length<2?s[0]||e:s.length>2?(e.xmin=t.valid[0],e.xmax=t.valid[1],e):{rings:s.map((e=>[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]]))}}function f(e,t,s){if(Array.isArray(e)){const i=e[0];if(i>t){const s=(0,a.kd)(i,t);e[0]=i+s*(-2*t)}else if(i<s){const t=(0,a.kd)(i,s);e[0]=i+t*(-2*s)}}else{const i=e.x;if(i>t){const s=(0,a.kd)(i,t);e.x+=s*(-2*t)}else if(i<s){const t=(0,a.kd)(i,s);e.x+=t*(-2*s)}}return e}function p(e,t){const s=[],{ymin:i,ymax:r,xmin:n,xmax:o}=e,a=e.xmax-e.xmin,[l,h]=t.valid,{x:d,frameId:u}=m(e.xmin,t),{x:c,frameId:f}=m(e.xmax,t),p=d===c&&a>0;if(a>2*h){const e={xmin:n<o?d:c,ymin:i,xmax:h,ymax:r},t={xmin:l,ymin:i,xmax:n<o?c:d,ymax:r},a={xmin:0,ymin:i,xmax:h,ymax:r},p={xmin:l,ymin:i,xmax:0,ymax:r},m=[],g=[];y(e,a)&&m.push(u),y(e,p)&&g.push(u),y(t,a)&&m.push(f),y(t,p)&&g.push(f);for(let s=u+1;s<f;s++)m.push(s),g.push(s);s.push(new x(e,[u]),new x(t,[f]),new x(a,m),new x(p,g))}else d>c||p?s.push(new x({xmin:d,ymin:i,xmax:h,ymax:r},[u]),new x({xmin:l,ymin:i,xmax:c,ymax:r},[f])):s.push(new x({xmin:d,ymin:i,xmax:c,ymax:r},[u]));return s}function m(e,t){const[s,i]=t.valid,r=2*i;let n,o=0;return e>i?(n=Math.ceil(Math.abs(e-i)/r),e-=n*r,o=n):e<s&&(n=Math.ceil(Math.abs(e-s)/r),e+=n*r,o=-n),{x:e,frameId:o}}function y(e,t){const{xmin:s,ymin:i,xmax:r,ymax:n}=t;return g(e,s,i)&&g(e,s,n)&&g(e,r,n)&&g(e,r,i)}function g(e,t,s){return t>=e.xmin&&t<=e.xmax&&s>=e.ymin&&s<=e.ymax}function _(e,t,s=!0){const i=!(0,o.Rg)(e);if(i&&(0,n.m3)(e),s)return(new b).cut(e,t);const r=i?e.rings:e.paths,a=i?4:2,l=r.length,h=-2*t;for(let n=0;n<l;n++){const e=r[n];if(e&&e.length>=a){const t=[];for(const s of e)t.push([s[0]+h,s[1]]);r.push(t)}}return i?e.rings=r:e.paths=r,e}class x{constructor(e,t){this.extent=e,this.frameIds=t}}const v=(0,i.vt)();class b{constructor(){this._linesIn=[],this._linesOut=[]}cut(e,t){let s;if(this._xCut=t,e.rings)this._closed=!0,s=e.rings,this._minPts=4;else{if(!e.paths)return null;this._closed=!1,s=e.paths,this._minPts=2}for(const r of s){if(!r||r.length<this._minPts)continue;let e=!0;for(const t of r)e?(this.moveTo(t),e=!1):this.lineTo(t);this._closed&&this.close()}this._pushLineIn(),this._pushLineOut(),s=[];for(const r of this._linesIn)r&&r.length>=this._minPts&&s.push(r);const i=-2*this._xCut;for(const r of this._linesOut)if(r&&r.length>=this._minPts){for(const e of r)e[0]+=i;s.push(r)}return this._closed?e.rings=s:e.paths=s,e}moveTo(e){this._pushLineIn(),this._pushLineOut(),this._prevSide=this._side(e[0]),this._moveTo(e[0],e[1],this._prevSide),this._prevPt=e,this._firstPt=e}lineTo(e){const t=this._side(e[0]);if(t*this._prevSide==-1){const s=this._intersect(this._prevPt,e);this._lineTo(this._xCut,s,0),this._prevSide=0,this._lineTo(e[0],e[1],t)}else this._lineTo(e[0],e[1],t);this._prevSide=t,this._prevPt=e}close(){const e=this._firstPt,t=this._prevPt;e[0]===t[0]&&e[1]===t[1]||this.lineTo(e),this._checkClosingPt(this._lineIn),this._checkClosingPt(this._lineOut)}_moveTo(e,t,s){this._closed?(this._lineIn.push([s<=0?e:this._xCut,t]),this._lineOut.push([s>=0?e:this._xCut,t])):(s<=0&&this._lineIn.push([e,t]),s>=0&&this._lineOut.push([e,t]))}_lineTo(e,t,s){this._closed?(this._addPolyVertex(this._lineIn,s<=0?e:this._xCut,t),this._addPolyVertex(this._lineOut,s>=0?e:this._xCut,t)):s<0?(0===this._prevSide&&this._pushLineOut(),this._lineIn.push([e,t])):s>0?(0===this._prevSide&&this._pushLineIn(),this._lineOut.push([e,t])):this._prevSide<0?(this._lineIn.push([e,t]),this._lineOut.push([e,t])):this._prevSide>0&&(this._lineOut.push([e,t]),this._lineIn.push([e,t]))}_addPolyVertex(e,t,s){const i=e.length;i>1&&e[i-1][0]===t&&e[i-2][0]===t?e[i-1][1]=s:e.push([t,s])}_checkClosingPt(e){const t=e.length;t>3&&e[0][0]===this._xCut&&e[t-2][0]===this._xCut&&e[1][0]===this._xCut&&(e[0][1]=e[t-2][1],e.pop())}_side(e){return e<this._xCut?-1:e>this._xCut?1:0}_intersect(e,t){const s=(this._xCut-e[0])/(t[0]-e[0]);return e[1]+s*(t[1]-e[1])}_pushLineIn(){this._lineIn&&this._lineIn.length>=this._minPts&&this._linesIn.push(this._lineIn),this._lineIn=[]}_pushLineOut(){this._lineOut&&this._lineOut.length>=this._minPts&&this._linesOut.push(this._lineOut),this._lineOut=[]}}},73884:function(e,t,s){s.d(t,{A:function(){return et}});s(44114),s(43375),s(39225),s(13972),s(99209),s(25714),s(17561),s(66197);var i=s(71457),r=s(3734),n=s(69292),o=s(35175),a=s(45477),l=s(51020),h=s(49778),d=s(79908),u=s(71120),c=s(87400),f=s(76543),p=(s(37679),s(29916)),m=s(12790),y=s(99359),g=s(55040),_=s(55772),x=s(70620),v=s(72465),b=s(33292),C=s(75423),T=s(71008),D=s(17),w=s(54069);const B=-1;class F{constructor(){this._dirties=[{vertexFrom:B,vertexCount:B,indexFrom:B,indexCount:B,allDirty:!1},{vertexFrom:B,vertexCount:B,indexFrom:B,indexCount:B,allDirty:!1},{vertexFrom:B,vertexCount:B,indexFrom:B,indexCount:B,allDirty:!1},{vertexFrom:B,vertexCount:B,indexFrom:B,indexCount:B,allDirty:!1},{vertexFrom:B,vertexCount:B,indexFrom:B,indexCount:B,allDirty:!1}]}hasDirty(){return this._dirties.some((e=>e.indexCount!==B||e.allDirty))}markAllClean(){for(const e of this._dirties)e.indexFrom=B,e.indexCount=B,e.vertexFrom=B,e.vertexCount=B,e.allDirty=!1}markAllDirty(){for(const e of this._dirties)e.allDirty=!0}forEach(e){for(let t=0;t<this._dirties.length;++t){const{indexCount:s,indexFrom:i,vertexCount:r,vertexFrom:n,allDirty:o}=this._dirties[t],a={};let l,h=!1;(o||n!==B&&r>0)&&(a.geometry={count:r,from:n,allDirty:o},h=!0),(o||i!==B&&s>0)&&(l={count:s,from:i,allDirty:o},h=!0),h&&e({indices:l,vertices:a},t)}}markDirtyIndices(e,t,s){const i=this._dirties[e],r=t,n=s;if(!i.allDirty)if(i.indexCount!==B){const e=Math.min(i.indexFrom,r),t=Math.max(i.indexFrom+i.indexCount,r+n)-e;i.indexFrom=e,i.indexCount=t}else i.indexFrom=r,i.indexCount=n}markDirtyVertices(e,t,s,i){const r=this._dirties[e],n=s,o=i;if(!r.allDirty)if(r.vertexCount!==B){const e=Math.min(r.vertexFrom,n),t=Math.max(r.vertexFrom+r.vertexCount,n+o)-e;r.vertexFrom=e,r.vertexCount=t}else r.vertexFrom=n,r.vertexCount=o}}s(16573),s(78100),s(77936),s(37467),s(44732),s(79577);class I{get largestRange(){return this._largestRange}constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,s=null;for(;null!==t;)t.count>=e&&(!s||t.count-e<s.count-e)&&(s=t),t=t.next;return s}findAdjacentRanges(e,t){let s=!0,i=!1,r=null,n=this._parent._freeHead;for(;s&&!i;){const o=null!==r?r.from+r.count:0,a=null!==n?n.from:this._parent._size;e>=o&&e+t<=a?(s=!1,i=!0):null!==n?(r=n,n=n.next):s=!1}return[r,n]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}}class S{constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new I(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){const t=this._bookKeeper.findBestRange(e);if(null==t)return-1;const s=t.from,i=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,s,i),this._allocated+=e,0===t.count){const e=null!==t.prev?this._freeHead:t.next;S._removeRange(t),this._freeHead=e}return s}free(e,t){const[s,i]=this._bookKeeper.findAdjacentRanges(e,t),r={from:e,count:t,prev:s??null,next:i??null};if(null!=s&&(s.next=r),null!=i&&(i.prev=r),this._bookKeeper.rangeCreated(r),this._allocated-=t,null!=i&&r.from+r.count===i.from){const e=r.from,t=r.count;S._fuse(r,i),S._removeRange(i),this._bookKeeper.rangeResized(r,e,t),this._bookKeeper.rangeResized(i,void 0,0)}if(null!=s&&s.from+s.count===r.from){const e=s.from,t=s.count;S._fuse(s,r),S._removeRange(r),this._bookKeeper.rangeResized(s,e,t),this._bookKeeper.rangeResized(r,void 0,0)}this._freeHead=null!==r.prev?this._freeHead:r}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}}var R=s(62830);const M=["FILL","LINE","MARKER","TEXT","LABEL"];function L(e){const t=e.getStrides(),s={};for(let i=0;i<t.length;i++)s[M[i]]=t[i];return s}const z=.5;class A{constructor(e,t,s,i){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=s;for(const r in e){this._freeListsAndStorage[r]={vtxFreeList:i?new S(i):null,idxFreeList:i?new S(i):null,vertexBuffers:{},indexBuffer:i?new Uint32Array(i):null};for(const t in e[r])this._freeListsAndStorage[r].vertexBuffers[t]={data:i?(0,R.NM)(i,e[r][t]):null,stride:e[r][t]}}}static fromTileData(e,t){const s=L(e),i=[0,0,0,0,0],r=[0,0,0,0,0];for(const a of e.tileDisplayData.displayObjects)for(const e of a.displayRecords)i[e.geometryType]=Math.max(i[e.geometryType],e.vertexFrom+e.vertexCount),r[e.geometryType]=Math.max(r[e.geometryType],e.indexFrom+e.indexCount);const n=new A(s,e.tileDisplayData.displayList,t,void 0),o=e.tileBufferData?.geometries??[];for(let a=0;a<o.length;++a){const e=i[a],t=r[a],s=o[a],l=M[a],h=n._storageFor(l),d=o[a].indexBuffer;h.indexBuffer=d,h.idxFreeList=new S(d.length),h.idxFreeList.allocate(t);let u=0;for(const i in s.vertexBuffer){const e=o[a].vertexBuffer[i];h.vertexBuffers[i].data=e.data,h.vertexBuffers[i].stride=e.stride;const t=(0,R.vq)(e.stride),s=e.data.length*t/e.stride;u||(u=s)}h.vtxFreeList=new S(u),h.vtxFreeList.allocate(e)}return n}delete(e){const t=M[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,s,i,r){const n=M[e.geometryType];let o,a;e.meshData=null,void 0===e.vertexFrom?(a=t.vertexCount,o=this._allocateVertices(n,a)):t.vertexCount>e.vertexCount?(this._freeVertices(n,e.vertexFrom,e.vertexCount),a=t.vertexCount,o=this._allocateVertices(n,a)):t.vertexCount===e.vertexCount?(o=e.vertexFrom,a=e.vertexCount):(this._freeVertices(n,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),o=e.vertexFrom,a=t.vertexCount);let l,h,d,u=!0;if(void 0===e.indexFrom?(l=r,d=t.indexCount,h=this._allocateIndices(n,d)):t.indexCount>e.indexCount?(l=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom,e.indexCount),d=t.indexCount,h=this._allocateIndices(n,d)):t.indexCount===e.indexCount?(u=!1,h=e.indexFrom,d=e.indexCount):(l=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),h=e.indexFrom,d=t.indexCount),-1!==o&&-1!==h){const r=this._storageFor(n);if((0,R.Hp)(o,h,r.vertexBuffers,r.indexBuffer,t,s,i),e.vertexFrom=o,e.indexFrom=h,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in s)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount)}return u&&this._displayList.addToList(e,l),!0}return-1!==o&&this._freeVertices(n,o,a),-1!==h&&this._freeIndices(n,h,d),e.setMeshDataFromBuffers(t,s,i),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const s=t.vertexBuffer,i=t.indexBuffer,r=M[e.geometryType],n=this._allocateVertices(r,e.vertexCount);if(-1===n)return this._freeVertices(r,n,e.vertexCount),!1;const o=this._allocateIndices(r,e.indexCount);if(-1===o)return this._freeVertices(r,n,e.vertexCount),this._freeIndices(r,o,e.indexCount),!1;const a=this._storageFor(r);if((0,R.Hp)(n,o,a.vertexBuffers,a.indexBuffer,e,s,i),e.vertexFrom=n,e.indexFrom=o,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in s)this._dirtyMap.markDirtyVertices(e.geometryType,t,n,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const s=this._storageFor(e),i=s.vtxFreeList?.allocate(t);if(null==i||-1===i)return-1;const r=s.vtxFreeList?.fragmentation;return null==r||r>z?-1:i}_freeVertices(e,t,s){const i=this._storageFor(e);i.vtxFreeList?.free(t,s)}_freeIndices(e,t,s){const i=this._storageFor(e);i.idxFreeList?.free(t,s)}_allocateIndices(e,t){const s=this._storageFor(e),i=s.idxFreeList?.allocate(t);if(null==i||-1===i)return-1;const r=s.idxFreeList?.fragmentation;return null==r||r>z?-1:i}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}var O=s(64632),G=s(73719),P=s(79925);class U{constructor(e){this.geometryMap=(0,R.JK)((()=>({indexBuffer:O.g.createIndex(e,G._U.STATIC_DRAW),vao:null})),((t,s)=>({vertexBuffer:O.g.createVertex(e,R.HF[s])})))}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao?.disposeVAOOnly(),t.data.indexBuffer?.dispose();for(const e in t.buffers)t.buffers[e]?.data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{getVAO(e,s,i){if(!t.data.vao){const r={};for(const e in t.buffers)r[e]=t.buffers[e].data.vertexBuffer;t.data.vao=new P.Z(e,i,s,r,t.data.indexBuffer)}return t.data.vao}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach(((t,s)=>{this._upload(t,s,e)}))}_upload(e,t,s){if(e.indices&&(e.indices.allDirty?this._uploadIndices(s,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(s,t,e.indices.from,e.indices.count)),e.vertices){const i=e.vertices;for(const e in i){const r=i[e];r.allDirty?this._uploadVertices(s,t,e):null!=r.from&&null!=r.count&&this._uploadVertices(s,t,e,r.from,r.count)}}}_uploadVertices(e,t,s,i,r){const n=this.geometryMap[t];if(!n)return;const o=e.geometries[t].vertexBuffer[s];if(!o)return;const{data:a,stride:l}=o;if(n.buffers[s]&&a.length>0){const e=l/a.BYTES_PER_ELEMENT;null!=i&&null!=r?n.buffers[s].data.vertexBuffer.setSubData(a,i*e,i*e,(i+r)*e):n.buffers[s].data.vertexBuffer.setData(a)}}_uploadIndices(e,t,s,i){const r=this.geometryMap[t];if(!r)return;const n=e.geometries[t].indexBuffer;r.data.indexBuffer&&n.length>0&&(null!=s&&null!=i?r.data.indexBuffer.setSubData(n,s,s,s+i):r.data.indexBuffer.setData(n))}}var V=s(54277);class k extends V.X{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new F}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){return this._displayObjects??[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const t=e.addOrUpdate,s=e.remove;!this._data&&t&&t.tileDisplayData?.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new F,this._dispRecStore=A.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t&&t.tileDisplayData?.displayObjects.length||s.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new U(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=A.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const s=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],i=(e.remove||[]).slice();for(const o of s)null!=o.insertAfter&&i.push(o.id);let r;i.length>0&&(r=new Set(i));const n=this._data.tileDisplayData;for(const o of i){const e=n.displayObjectRegistry.get(o);if(e){n.displayList.removeFromList(e.displayRecords);for(const t of e.displayRecords)this._dispRecStore.delete(t);n.displayObjectRegistry.delete(o)}}r?.size&&(n.displayObjects=n.displayObjects.filter((e=>!r.has(e.id))));for(const o of s){let s,i=n.displayObjectRegistry.get(o.id);if(i){const e=i.displayRecords;i.set(o),i.displayRecords=e;const t=i.displayRecords.length;for(let s=0;s<t;++s){const e=i.displayRecords[s],t=o.displayRecords[s];(s>=o.displayRecords.length||e.geometryType!==t.geometryType||e.symbolLevel!==t.symbolLevel||e.zOrder!==t.zOrder||e.materialKey!==t.materialKey)&&(this._dispRecStore.delete(i.displayRecords[s]),s<o.displayRecords.length&&(i.displayRecords[s]=void 0))}i.displayRecords.length=o.displayRecords.length}else{let e;i=o.copy(),i.displayRecords=[],n.displayObjectRegistry.set(o.id,i);const t=n.displayObjects;if(null!=i.insertAfter)if(s={},i.insertAfter>=0){const s=n.displayObjectRegistry.get(i.insertAfter);s?(e=t.indexOf(s)+1,e<t.length?t.splice(e,0,i):(t.push(i),e=t.length)):(t.push(i),e=t.length)}else t.unshift(i),e=0;else t.push(i),e=t.length;if(s){const i=o.displayRecords.length>0?1:0;let r=0;for(let o=e-1;o>=0&&r<i;--o)for(let e=t[o].displayRecords.length-1;e>=0&&r<i;--e){const i=t[o].displayRecords[e],a=n.displayList.getDPInfoType();s[a]||(s[a]=i,++r)}}}const r=o.displayRecords.length;for(let a=0;a<r;++a){const r=o.displayRecords[a];let l=i.displayRecords[a];l?(l.meshData=r.meshData,l.materialKey=r.materialKey):(l=r.copy(),l.vertexFrom=void 0,l.indexFrom=void 0,i.displayRecords[a]=l);const h=r.geometryType,d=n.displayList.getDPInfoType(),u=e.addOrUpdate.tileBufferData.geometries[h],c=u.vertexBuffer,f=u.indexBuffer;let p;s&&(p=s[d]?n.displayList.splitAfter(s[d]):-1),t=this._dispRecStore.setMeshData(l,r,c,f,p)&&t,s&&null!=l.indexFrom&&null!=l.indexFrom&&(s[d]=l)}}return t}}class j{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,s){if(!t&&!s)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const i=this._byGeometryType[e];i.vertices+=t,i.indices+=s}}const K=5;class H{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){const e=new H;for(let t=0;t<this.geometries.length;t++){const s=this.geometries[t],i=e.geometries[t];i.indexBuffer=s.indexBuffer.slice(),i.vertexBuffer={};for(const e in s.vertexBuffer){const{data:t,stride:r}=s.vertexBuffer[e];i.vertexBuffer[e]={data:t.slice(),stride:r}}}return e}static deserialize(e){const t=new H;for(let s=0;s<K;++s){t.geometries[s].indexBuffer=new Uint32Array(e.geometries[s].indexBuffer),t.geometries[s].vertexBuffer={};for(const i in e.geometries[s].vertexBuffer)t.geometries[s].vertexBuffer[i]={data:(0,R.Jg)(e.geometries[s].vertexBuffer[i].data,e.geometries[s].vertexBuffer[i].stride),stride:e.geometries[s].vertexBuffer[i].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<K;++t)for(const s in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[s]={data:this.geometries[t].vertexBuffer[s].data.buffer,stride:this.geometries[t].vertexBuffer[s].stride};return e}getBuffers(){const e=[];for(let t=0;t<K;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const s in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[s].data.buffer)}return e}}var q=s(76036);function Z(e,t,s,...i){t<e.length?e.splice(t,s,...i):e.push(...i)}class E{constructor(){this.symbolLevels=[]}replay(e,t,s){for(const i of this.symbolLevels)for(const r of i.zLevels){const i=r.geometryDPInfo.unified;if(i)for(const r of i){const{geometryType:i,materialKey:n,indexFrom:o,indexCount:a}=r,l=q.ar.load(n).symbologyType,h=e.painter.getBrush(i,l),d={geometryType:i,materialKey:n,indexFrom:o,indexCount:a,target:t.getGeometry(i)};h.prepareState(e),h.drawGeometry(e,t,d,s)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const s of e)this._addToList(s,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const s of e)t=this._removeFromList(s);return t}clone(){const e=new E;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),s=t.length,i=e.indexFrom+e.indexCount;for(let r=0;r<s;++r){const s=t[r];if(s.geometryType===e.geometryType&&i>s.indexFrom&&i<=s.indexFrom+s.indexCount){if(i<s.indexFrom+s.indexCount){const e=new N;e.geometryType=s.geometryType,e.materialKey=s.materialKey,e.indexFrom=i,e.indexCount=s.indexFrom+s.indexCount-i,t.splice(r+1,0,e),s.indexCount=i-s.indexFrom}return r}}}_addToList(e,t){const s=e.symbolLevel,i=e.zOrder,r=this._getDisplayList(s,i),n=null!=t?t:r.length-1,o=n>=0&&n<r.length?r[n]:null;if(null!==o&&o.materialKey===e.materialKey&&o.indexFrom+o.indexCount===e.indexFrom&&o.geometryType===e.geometryType)o.indexCount+=e.indexCount;else{const t=new N;t.indexFrom=e.indexFrom,t.indexCount=e.indexCount,t.materialKey=e.materialKey,t.geometryType=e.geometryType,Z(r,n+1,0,t)}}_removeFromList(e){const t=e.symbolLevel,s=e.zOrder,i=this._getDisplayList(t,s),r=i.length;let n;for(let o=0;o<r;++o){const t=i[o];if(e.indexFrom+e.indexCount>t.indexFrom&&e.indexFrom<t.indexFrom+t.indexCount&&t.geometryType===e.geometryType){n=o;break}}if(void 0!==n){const t=i[n];if(e.indexFrom===t.indexFrom)return t.indexCount-=e.indexCount,t.indexFrom+=e.indexCount,0===t.indexCount&&Z(i,n,1),n-1;if(e.indexFrom+e.indexCount===t.indexFrom+t.indexCount)return t.indexCount-=e.indexCount,0===t.indexCount?(Z(i,n,1),n-1):n;{const s=t.indexFrom,r=e.indexFrom-t.indexFrom,o=e.indexCount,a=t.indexFrom+t.indexCount-(e.indexFrom+e.indexCount);t.indexCount=r;const l=new N;return l.geometryType=t.geometryType,l.materialKey=t.materialKey,l.indexFrom=s+r+o,l.indexCount=a,Z(i,n+1,0,l),n}}return null}_getDisplayList(e,t){let s;const i=this.symbolLevels.length;for(let o=0;o<i;o++)if(this.symbolLevels[o].symbolLevel===e){s=this.symbolLevels[o];break}let r;s||(s=new Y,s.symbolLevel=e,this.symbolLevels.push(s));const n=s.zLevels.length;for(let o=0;o<n;o++)if(s.zLevels[o].zLevel===t){r=s.zLevels[o];break}return r||(r=new J,r.geometryDPInfo=new X,r.zLevel=t,s.zLevels.push(r)),r.geometryDPInfo.unified||(r.geometryDPInfo.unified=[]),r.geometryDPInfo.unified}getDPInfoType(){return"unified"}}class N{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){const e=new N;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class X{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){const e=new X;return e.fill=this.fill&&this.fill.map((e=>e.clone())),e.line=this.line&&this.line.map((e=>e.clone())),e.marker=this.marker&&this.marker.map((e=>e.clone())),e.text=this.text&&this.text.map((e=>e.clone())),e.label=this.label&&this.label.map((e=>e.clone())),e.unified=this.unified&&this.unified.map((e=>e.clone())),e}}class J{constructor(){this.geometryDPInfo=new X}clone(){const e=new J;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class Y{constructor(){this.zLevels=[]}clone(){const e=new Y;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}class Q{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,s){for(const i in e)this.vertexData.set(i,e[i]);for(const i in this.vertexData)null===e[i]&&this.vertexData.delete(i);this.vertexCount=t,this.indexData=s}}class ${constructor(e,t,s,i=0,r=0){this.id=e,this.geometryType=t,this.materialKey=s,this.minZoom=i,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0,this._sortKey=null}get sortKey(){return null==this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new $(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,s){const i=new Q;for(const r in t){const s=t[r].stride,n=t[r].data;if(!n)continue;const o=[],a=(0,R.vq)(s);for(let t=0;t<s*e.vertexCount/a;++t)o[t]=n[t+s*e.vertexFrom/a];i.vertexData.set(r,o)}i.indexData.length=0;for(let r=0;r<e.indexCount;++r)i.indexData[r]=s[r+e.indexFrom]-e.vertexFrom;i.vertexCount=e.vertexCount,this.meshData=i}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new Q;for(const s in e){const t=e[s].stride,i=e[s].data,r=[],n=(0,R.vq)(t);for(let e=0;e<t*this.vertexCount/n;++e)r[e]=i[e+t*this.vertexFrom/n];this.meshData.vertexData.set(s,r)}this.meshData.indexData.length=0;for(let s=0;s<this.indexCount;++s)this.meshData.indexData[s]=t[s+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,s,i){if(this.meshData){for(const s in t){const i=t[s].stride,r=this.meshData.vertexData.get(s),n=t[s].data,o=(0,R.vq)(i);for(let t=0;t<i*this.meshData.vertexCount/o;++t)n[t+i*e/o]=r[t]}for(let t=0;t<this.meshData.indexData.length;++t)i[t+s]=this.meshData.indexData[t]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=s,this.indexCount=this.meshData.indexData.length}}static writeAllMeshDataToBuffers(e,t,s){let i=0,r=0;for(const n of e)n.writeMeshDataToBuffers(i,t,r,s),i+=n.vertexCount,r+=n.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const s=e.readInt32(),i=e.readInt32(),r=new $(t.id,s,i);return r.vertexFrom=e.readInt32(),r.vertexCount=e.readInt32(),r.indexFrom=e.readInt32(),r.indexCount=e.readInt32(),r.minZoom=e.readInt32(),r.maxZoom=e.readInt32(),r}}function W(e,t){if(null!==t){e.push(t.length);for(const s of t)s.serialize(e);return e}e.push(0)}function ee(e,t,s){const i=e.readInt32(),r=new Array(i);for(let n=0;n<r.length;n++)r[n]=t.deserialize(e,s);return r}class te{constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}copy(){const e=new te(this.id);return e.set(this),e}clone(){const e=new te(this.id);return e.displayRecords=this.displayRecords.map((e=>e.clone())),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),W(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),s=new te(t),i={id:t};return s.displayRecords=ee(e,$,i)??[],s}}class se{constructor(){this.displayObjects=[],this._displayList=null}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new E;for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new se;return this.displayObjects&&(e.displayObjects=this.displayObjects.map((e=>e.clone()))),e}serialize(e){return W(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),s=new Array(t),i=new Map;for(let r=0;r<s.length;++r){const t=te.deserialize(e);s[r]=t,i.set(t.id,t)}this.displayObjects=s,this._displayList=null,this._displayObjectRegistry=i}static deserialize(e){const t=new se;return t._deserializeObjects(e),t}}var ie=s(3293);class re{constructor(e,t){this.data=e,this.stride=t}static decode(e){const t=(0,R.Jg)(e.data,e.stride),s=e.stride;return new re(t,s)}static fromVertexVector(e){const t=(0,R.Jg)(e.data.buffer(),e.stride),s=e.stride;return new re(t,s)}}class ne{constructor(e,t,s){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=s}static decode(e){const t=e.geometryType,s=e.indexBuffer,i={};for(const r in e.namedBuffers)i[r]=re.decode(e.namedBuffers[r]);return new ne(t,s,i)}static fromVertexData(e,t){const s=e.indices,i=(0,R.Jg)(e.vertices,e.stride),r=e.stride,n={geometry:new re(i,r)};return new ne(t,s,n)}static fromVertexVectors(e){const t=e.geometryType,s=e.indexVector.buffer(),i={};let r;for(r in e.namedVectors)i[r]=re.fromVertexVector(e.namedVectors[r]);return new ne(t,s,i)}}var oe=s(22625);class ae{get vertexCount(){const e=this.stride/4,t=this.data.length/e;return t!==(0|t)&&console.debug("Corrupted stride"),t}constructor(e,t){this.data=e,this.stride=t}transfer(e,t){const s=this.data.buffer();e.vertexCount=this.vertexCount,e.data=s,e.stride=this.stride,t.push(s)}}class le{constructor(e,t,s){this.geometryType=e,this.indexVector=new oe.A(Uint32Array,6*t),this.namedVectors={};const i=(0,R.jG)(e,s);for(const r in i){const e=i[r];let s;switch(e%4){case 0:case 2:s=new oe.A(Uint32Array,e*t);break;case 1:case 3:s=new oe.A(Uint8Array,e*t)}this.namedVectors[r]=new ae(s,e)}}get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const s=this.indexVector.buffer(),i={};let r;for(r in t.push(s),this.namedVectors){const e=this.namedVectors[r];i[r]={},e.transfer(i[r],t)}e.geometryType=this.geometryType,e.indexBuffer=s,e.namedBuffers=i,this.destroy()}intoBuffers(){const e=ne.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}}const he=new j,de=new j,ue=5;function ce(e,t){const s={};for(const i in e){const r={data:(0,R.NM)(t,e[i]),stride:e[i]};s[i]=r}return s}function fe(e){return[e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}function pe(e){const t=[[],[],[],[],[]],s=e;for(const i of s)for(const e of i.displayRecords)t[e.geometryType].push(e);return t}class me{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){if(he.reset(),!this.tileDisplayData)return;const e=pe(this.tileDisplayData.displayObjects);for(const n of e)for(const e of n)e&&he.needMore(e.geometryType,e.meshData?e.meshData.vertexCount:e.vertexCount,e.meshData?e.meshData.indexData.length:e.indexCount);const t=e.length,s=new H;for(let o=0;o<t;++o){s.geometries[o].indexBuffer=new Uint32Array(Math.round(n.Hl*he.indicesFor(o)));const e=[],t=this.tileBufferData?.geometries[o].vertexBuffer;if(!t)continue;for(const s in t)e.push(t[s].stride);const i=me._computeVertexAlignment(e),r=Math.round(n.Hl*he.verticesFor(o)),a=me._align(r,i);for(const n in t){const e=t[n].stride;s.geometries[o].vertexBuffer[n]={stride:e,data:(0,R.NM)(a,e)}}}de.reset(),this.tileDisplayData.displayList?.clear();for(let n=0;n<t;++n){const t=e[n];for(const e of t){if(e.meshData)e.writeMeshDataToBuffers(de.verticesFor(n),s.geometries[n].vertexBuffer,de.indicesFor(n),s.geometries[n].indexBuffer),e.meshData=null;else{const t=this.tileBufferData?.geometries[n];if(t){const i=t.vertexBuffer,r=t.indexBuffer,o=s.geometries[n].vertexBuffer,a=s.geometries[n].indexBuffer,l=de.verticesFor(n),h=de.indicesFor(n);(0,R.Hp)(l,h,o,a,e,i,r),e.vertexFrom=l,e.indexFrom=h}}de.needMore(n,e.vertexCount,e.indexCount)}}const{displayList:i,displayObjects:r}=this.tileDisplayData;if(i)for(const n of r)i.addToList(n.displayRecords);this.tileBufferData=s}getStrides(){const e=[],t=this.tileBufferData?.geometries;if(!t)return e;for(let s=0;s<t.length;++s){const i=t[s];e[s]={};for(const t in i.vertexBuffer)e[s][t]=i.vertexBuffer[t].stride}return e}clone(){const e=new me;return e.tileBufferData=this.tileBufferData?.clone()??null,e.tileDisplayData=this.tileDisplayData?.clone()??null,e}_guessSize(){const e=this.tileDisplayData?.displayObjects??[],t=Math.min(e.length,4),s=12,i=40;let r=0;for(let n=0;n<t;n++)r=Math.max(r,e[n].displayRecords.length);return 2*(e.length*s+e.length*r*i)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),s=this.tileDisplayData.serialize(new oe.A(Int32Array,this._guessSize())).buffer();return t.push(s),{result:{displayData:s,bufferData:e},transferList:t}}static fromVertexData(e,t){const s={},i=new Map;for(const r of t)i.set(r.id,r);return(0,R.Th)((t=>{const r=e.data[t];if(null!=r){const e=ie.z.from(r.records).getCursor();for(;e.next();){const s=e.id,r=e.materialKey,n=e.indexFrom,o=e.indexCount,a=e.vertexFrom,l=e.vertexCount,h=i.get(s),d=new $(s,t,r);d.indexFrom=n,d.indexCount=o,d.vertexFrom=a,d.vertexCount=l,h.displayRecords.push(d)}s[t]=ne.fromVertexData(r,t)}else s[t]=new le(t,0,w.w4.DEFAULT).intoBuffers()})),me.fromMeshData({displayObjects:t,vertexBuffersMap:s})}static fromMeshData(e){const t=new me,s=new se,i=new H;s.displayObjects=e.displayObjects;for(const r in e.vertexBuffersMap){const t=r,s=e.vertexBuffersMap[t];i.geometries[t].indexBuffer=s.indexBuffer,i.geometries[t].vertexBuffer=s.namedBuffers}return t.tileDisplayData=s,t.tileBufferData=i,t}static bind(e,t){const s=new me;return s.tileDisplayData=e,s.tileBufferData=t,s}static create(e,t){const s=new me;s.tileDisplayData=new se,s.tileDisplayData.displayObjects=e;const i=[0,0,0,0,0],r=[0,0,0,0,0],n=[[],[],[],[],[]];for(const l of e)for(const e of l.displayRecords)n[e.geometryType].push(e),i[e.geometryType]+=e.meshData.vertexCount,r[e.geometryType]+=e.meshData.indexData.length;const o=new H,a=fe(t);for(let l=0;l<ue;l++){const e=new Uint32Array(r[l]),t=ce(a[l],i[l]);$.writeAllMeshDataToBuffers(n[l],t,e),o.geometries[l]={indexBuffer:e,vertexBuffer:t}}return s.tileBufferData=o,s}static _align(e,t){const s=e%t;return 0===s?e:e+(t-s)}static _computeVertexAlignment(e){let t=!1,s=!1;for(const i of e)i%4==2?t=!0:i%4!=0&&(s=!0);return s?4:t?2:1}}var ye=s(76990),ge=s(58073),_e=s(95879),xe=s(43182),ve=s(57470),be=s(98520),Ce=s(43569),Te=s(41312),De=s(85344),we=s(35698);class Be extends we.K{static from(e,t,s){const i=De.Y.createInstance(),r=[],n=e.filter((e=>!!e.geometry));for(const o of n){const e=(0,_.$B)(o.geometry);(0,Te.X9)(r,[o],e,!1,!1,t)}return new Be(i,r,s)}constructor(e,t,s){super(e,t,null),this._transform=s}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new Be(this.instance,this._features,this._transform);return this.copyInto(e),e}}var Fe=s(18513),Ie=s(12057),Se=s(84509),Re=s(42638),Me=s(51435),Le=s(58835),ze=s(91253),Ae=s(47086);const Oe=new Ae.A,Ge=new Ae.A,Pe="esriGeometryPolyline";function Ue(e){e.coords.length=0,e.lengths.length=0}class Ve{constructor(){this.bounds=(0,y.vt)(),this.graphic=null}static acquire(e=null,t,s,i,r){let n;return 0===Ve._pool.length?n=new Ve:(n=Ve._pool.pop(),this._set.delete(n)),n.acquire(e,t,s,i,r),n}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if((0,_.Bi)(e.geometry)){const s=e.symbol;if(null==s)return null;if(s?.layers.length>0&&s.layers.some((e=>"text"===e.type||"marker"===e.type))){const s=(0,Le.l8)(e.geometry);return null!==s?(0,ze.Gy)(t,{},{x:s[0],y:s[1]},!1,!1):null}}return null}acquire(e=null,t,s,i,r){e&&this.set(e,t,s,i,r)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,s,i,r){this.graphic=e,this.geometry=s,this.symbolResource=t,this.bounds=i,r&&(this.size=r)}getGeometryQuantized(e,t,s,i){const r=this.geometry,n=(0,_.$B)(r);if(null==n)return null;switch(n){case"esriGeometryPolygon":{const t=r,{rings:s}=t;if(!s||0===s.length)return null;let i;if(i=1===s.length&&2===s[0].length?(0,ze.qj)(e,{paths:[[s[0][0],s[0][1]]]}):(0,ze.qj)(e,this.geometry),!i){const t={x:s[0][0][0],y:s[0][0][1]};if(i=(0,ze.qj)(e,t),i){const{x:e,y:t}=i;return{rings:[[[e-1,t],[1,-1],[1,1],[-1,1],[-1,-1]]]}}}return i}case"esriGeometryPolyline":{const t=r;Ue(Oe),Ue(Ge);const s=t.hasZ??!1,i=t.hasM??!1;return(0,Te.Ap)(Oe,t),(0,Te.kz)(Ge,Oe,s,i,Pe,e.scale[0]),(0,Te.Nl)(Oe,Ge,s,i,Pe,e),(0,Te.BW)(Oe,t.hasZ??!1,t.hasM??!1)}case"esriGeometryMultipoint":{const n=r,o=.5*i*Math.max(Math.abs(this.size[0])+this.size[2]-this.size[0],Math.abs(this.size[1])+this.size[3]-this.size[1]),a=(0,v.Vp)(s);let l=n.points;if(a){const[e,s]=a.valid,i=s-e;l=l.filter((r=>{if(r[0]+o>s||r[0]-o<e){const e=[...r];return r[0]+o>s?e[0]-=i:e[0]+=i,(0,y.k$)(t,r,o)||(0,y.k$)(t,e,o)}return(0,y.k$)(t,r,o)}))}return 0===l.length?{points:l}:(0,ze.qj)(e,{points:l})}}return(0,ze.qj)(e,this.geometry)}}Ve._pool=[],Ve._set=new Set;var ke=s(42033);const je={minX:0,minY:0,maxX:0,maxY:0},Ke=(0,y.vt)(),He=1e-5;function qe(e,t,s,i,r){return je.minX=t,je.minY=s,je.maxX=i,je.maxY=r,e.search(je)}function Ze(e){return{minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}}class Ee{constructor(e,t,s,i,r,n,o){this._graphics=i,this._onAdd=r,this._onRemove=n,this._hashToCIM=o,this._index=(0,Ie.r)(9,Ze),this._itemByGraphic=new Map,this._inflatedSizeHelper=new C.Sc,this._tileInfoView=e,this._uidFieldName=s;const a=e.getClosestInfoForScale(t);a&&(this._resolution=this._tileInfoView.getTileResolution(a.level))}setResourceManager(e){this._cimResourceManager=e,this._hittestDrawHelper=new Me.CK(e)}hitTest(e,t,s,i,r){e=(0,Re.mT)(e,this._tileInfoView.spatialReference);const n=.5*i*window.devicePixelRatio*s;Ke[0]=e-n,Ke[1]=t-n,Ke[2]=e+n,Ke[3]=t+n;const o=.5*i*(s+ke.GP),a=qe(this._index,e-o,t-o,e+o,t+o);if(!a||0===a.length)return[];const l=[],h=(0,y.vt)(),d=(0,y.vt)();for(const f of a){const{geometry:e,symbolResource:t}=f;this._getSymbolBounds(h,t,e,d,r),d[3]=d[2]=d[1]=d[0]=0,(0,y.HY)(h,Ke)&&f.graphic?.visible&&l.push(f)}if(0===l.length)return[];const u=this._hittestDrawHelper,c=[];for(const f of l){const{geometry:e,symbolResource:t}=f,{hash:s,textInfo:n}=t,o=this._hashToCIM.get(s);o&&u.hitTest(Ke,o.symbol,e,n,r,i)&&c.push(f)}return c.sort(Ne),c.map((e=>e.graphic))}getGraphicsData(e,t,s){const i=this._searchForItems(t);if(0===i.length||0===s.length)return[];i.sort(((e,t)=>e.zorder-t.zorder)),i[0].insertAfter=-1;for(let d=1;d<i.length;d++)i[d].insertAfter=i[d-1].graphic.uid;i.sort(((e,t)=>e.graphic.uid-t.graphic.uid)),s.sort(((e,t)=>e.uid-t.uid));let r,n=0,o=0;const a=t.resolution,l=[],h={originPosition:"upperLeft",scale:[a,a],translate:[t.bounds[0],t.bounds[3]]};for(const d of s){for(o=-2;n<i.length;)if(r=i[n],n++,d.uid===r.graphic.uid){o=r.insertAfter;break}if(!r?.geometry||-2===o)continue;const s=r.getGeometryQuantized(h,t.bounds,this._tileInfoView.spatialReference,a),u={...r.graphic.attributes};u[this._uidFieldName]=d.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),l.push({centroid:Ve.getCentroidQuantized(r,h),geometry:s,attributes:u,symbol:r.symbol,groupId:r.groupId,insertAfter:o,zorder:r.zorder})}return l.sort(((e,t)=>e.zorder-t.zorder)),l}queryTileData(e,t){if(0===this._graphics.length)return[];const{bounds:s,resolution:i}=t,r=this._searchForItems(t),n=[];return 0===r.length||this._createTileGraphics(n,e,r,{originPosition:"upperLeft",scale:[i,i],translate:[s[0],s[3]]},t),n}has(e){return this._itemByGraphic.has(e)}getBounds(e){const t=this._itemByGraphic.get(e);return t?t.bounds:null}getAllBounds(){return Array.from(this._itemByGraphic.values()).filter((e=>e.graphic.visible)).map((e=>e.bounds))}addOrModify(e,t,s){if(!e||null==t)return;this.has(e)&&this.remove(e),this._onAdd(e);const i=[0,0,0,0],r=this._getSymbolBounds(null,t,s,i,0),n=Ve.acquire(e,t,s,null!=r?r:null,i);return this._itemByGraphic.set(e,n),s&&this._index.insert(n),n.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);t?.bounds&&this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,s;for(let i=0;i<e.length;i++)s=e[i],t=this._itemByGraphic.get(s),t&&(t.zorder=i)}update(e,t,s){const i=this._itemByGraphic.get(e);i.groupId=null;const r=(0,y.o8)(i.bounds);this._index.remove(i);const n=this._getSymbolBounds(i.bounds,t,s,i.size,0);return null!=n&&i.set(e,t,s,n,i.size),s&&this._index.insert(i),{oldBounds:r,newBounds:i.bounds}}updateLevel(e){if(this._resolution===e)return;this._resolution=e,this._index.clear();const t=this._itemByGraphic,s=[];for(const[i,r]of t){const e=this._getSymbolBounds(r.bounds,r.symbolResource,r.geometry,r.size,0);r.geometry&&null!=e&&(r.bounds=e,s.push(r))}this._index.load(s)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,s,i,r){const n=this._uidFieldName,o=this._tileInfoView.spatialReference,{bounds:a,resolution:l}=r;let h,d,u,c;s.sort(((e,t)=>e.zorder-t.zorder));for(let f=0;f<s.length;f++){u=s[f],h=u.graphic,d=u.getGeometryQuantized(i,a,o,l),c=0===f?-1:s[f-1].graphic.uid;const r={...u.graphic.attributes};r[n]=h.uid,null==u.groupId&&(u.groupId=t.createTemplateGroup(u.symbol,null)),e.push({centroid:Ve.getCentroidQuantized(u,i),geometry:d,attributes:r,symbol:u.symbol,groupId:u.groupId,insertAfter:c,zorder:u.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,s=e.bounds,i=(0,v.Vp)(t);if(i&&t.isWrappable){const[t,r]=i.valid,n=Math.abs(s[2]-r)<He,o=Math.abs(s[0]-t)<He;if((!n||!o)&&(n||o)){const i=e.resolution;let o;o=(0,y.vt)(n?[t,s[1],t+i*ke.GP,s[3]]:[r-i*ke.GP,s[1],r,s[3]]);const a=qe(this._index,s[0],s[1],s[2],s[3]),l=qe(this._index,o[0],o[1],o[2],o[3]);return[...new Set([...a,...l])]}}return qe(this._index,s[0],s[1],s[2],s[3])}_getSymbolBounds(e,t,s,i,r){if(!t||!t.symbol||!s)return null;if(e||(e=(0,y.vt)()),(0,Se.Rg)(e,s),!i||0===i[0]&&0===i[1]&&0===i[2]&&0===i[3]){const{hash:e,textInfo:s}=t,n=this._hashToCIM.get(e);if(!n)return null;i||(i=[0,0,0,0]);const o=this._inflatedSizeHelper.getSymbolInflateSize(i,n.symbol,this._cimResourceManager,r,s);i[0]=(0,Fe.Lz)(o[0]),i[1]=(0,Fe.Lz)(o[1]),i[2]=(0,Fe.Lz)(o[2]),i[3]=(0,Fe.Lz)(o[3])}const n=this._resolution,o=C.Sc.safeSize(i);return e[0]-=o*n,e[1]-=o*n,e[2]+=o*n,e[3]+=o*n,e}}const Ne=(e,t)=>{const s=(0,ke.NF)(e.graphic),i=(0,ke.NF)(t.graphic);return s===i?t.zorder-e.zorder:s-i};var Xe=s(95863),Je=s(81371),Ye=s(68918);const Qe=(0,l.A)("geoscene-2d-graphic-debug");function $e(e,t,s){let i=s.get(e);return i||(i={tile:t,addedOrModified:[],removed:[]},s.set(e,i)),i}let We=class extends((0,h.sA)((0,a.$)(r.A))){constructor(e){super(e),this._storage=new Ce.l,this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashToExpandedSymbolPromise=new Map,this._hashToCIMSymbolPromise=new Map,this._hashToCIM=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.renderer=null,this.updateRequested=!1,this.defaultPointSymbolEnabled=!0,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null,this._hashToCIM.clear(),this._hashToCIMSymbolPromise.clear(),this._hashToExpandedSymbolPromise.clear()}_createMatcher(e,t,s){if(e){const i=(0,ve.um)(e),r=(0,ve.wu)({indexCount:0,fields:{}},"feature",e,i);this._matcher=(0,xe.P7)(r,t,null,s)}}_createDisplayId(e){let t=this._displayIds.get(e);return t||(t=this._storage.createDisplayId(),this._displayIds.set(e,t)),t}initialize(){this._attributeStore=new be.A({type:"local",initialize:e=>Promise.resolve(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},(0,Je.Cx)("2d")),this.container.hasHighlight=()=>this._attributeStore.hasHighlight;const e=e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)},t=e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)},s=new _e._y(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._graphicStore=new Ee(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,e,t,this._hashToCIM),this._meshFactory=new ge.K(null,this.uid,s),this._templateStore=s,this.handles.add([(0,c.wB)((()=>this._effectiveRenderer),(e=>{this._createMatcher(e,s,this.container.stage.resourceManager);for(const t of this.graphics)this._pendingUpdate.updated.add(t);this.requestUpdate()})),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",(()=>{Qe&&this.container.enableRenderingBounds((()=>this._graphicStore.getAllBounds())),this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",(e=>this._graphicsChangeHandler(e))),"graphics");const e=this.container.stage.resourceManager;this._createMatcher(this._effectiveRenderer,s,e),this._graphicStore.setResourceManager(e),this._attached=!0,this.notifyChange("updating")}))]);const i=this.view.graphicsTileStore.tiles;this._onTileUpdate({added:i,removed:[]})}get _effectiveRenderer(){return"function"==typeof this.renderer?this.renderer():this.renderer}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._pendingUpdate.added.size>0||this._pendingUpdate.removed.size>0||this._pendingUpdate.updated.size>0||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0||this._attributeStore?.updatingHandles.updating||this._processing}hitTest(e){if(!this.view||this.view.suspended)return[];const{resolution:t,rotation:s}=this.view.state;return this._graphicStore.hitTest(e.x,e.y,2,t,s)}update(e){(0,u.Te)(this._controller.signal);const t=e.state,{resolution:s}=t;if(this._graphicStore.updateLevel(s),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}graphicUpdateHandler(e){const{graphic:t,property:s}=e;switch(s){case"attributes":case"geometry":case"symbol":this._pendingUpdate.updated.add(t),this.requestUpdate();break;case"visible":this._setFilterState(t.uid,t.visible),this._attributeStore.sendUpdates()}}setHighlight(e){const t=e.map((e=>this._displayIds.get(e))).filter(n.Ru);this._attributeStore.setHighlight(e,t)}_getIntersectingTiles(e){const t=this._graphicStore.getBounds(e);if(!t||0===(0,y.VL)(t)||0===(0,y.uJ)(t))return[];const s=(0,ke.aW)(t,this.view.spatialReference);return null!=s?[...new Set([...this.view.graphicsTileStore.boundsIntersections(s[0]),...this.view.graphicsTileStore.boundsIntersections(s[1])])]:this.view.graphicsTileStore.boundsIntersections(t)}async _updateTile(e){(0,u.Te)(this._controller.signal);const t=e.tile,s=this._getGraphicsData(this._templateStore,t,e.addedOrModified),i=await this._processGraphics(t,s);return(0,u.Te)(this._controller.signal),this._patchTile(t.key,{type:"update",addOrUpdate:i,remove:e.removed,end:!0,clear:!1,sort:!1}),i}_patchTile(e,t){const s=this._tiles.get(e);s&&(this.container.onTileData(s,t),this.container.requestRender())}_graphicsChangeHandler(e){const t=this._pendingUpdate;for(const s of e.added)t.added.add(s);for(const s of e.moved)t.updated.add(s);for(const s of e.removed)this._pendingUpdate.added.has(s)?t.added.delete(s):t.removed.add(s);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const e={added:[],removed:[],updated:[]};if(!this.graphics)return e;const t=this._pendingUpdate;for(const s of this.graphics.items)t.added.has(s)?e.added.push(s):t.updated.has(s)&&e.updated.push(s);for(const s of t.removed)this._graphicStore.has(s)&&e.removed.push(s);return t.added.clear(),t.removed.clear(),t.updated.clear(),e}async _updateGraphics(){this._processing=!0;const{added:e,removed:t,updated:s}=this._getGraphicsToUpdate(),i=this._tilesToUpdate;let r;try{if(!this._graphicStoreUpdate){const e=this.view.state,{resolution:t}=e;this._graphicStore.updateLevel(t)}const n=[],o=new Array(e.length+t.length);for(let e=0;e<s.length;e++){const t=s[e],a=this._getIntersectingTiles(t);for(const e of a)r=e.id,$e(r,e,i).removed.push(this._displayIds.get(t.uid));n.push(this._updateGraphic(t,null)),o[e]=t}const a=s.length;for(let t=0;t<e.length;t++){const s=e[t];o[a+t]=s,this._graphicsSet.add(s),n.push(this._addGraphic(s))}for(const e of t){this._abortProcessingGraphic(e.uid);const t=this._getIntersectingTiles(e);for(const s of t)r=s.id,$e(r,s,i).removed.push(this._displayIds.get(e.uid));this._graphicsSet.delete(e),this._graphicStore.remove(e)}let l;this._flipUpdatingGraphics(),await Promise.all(n);for(let e=0;e<o.length;e++){l=o[e];const t=this._getIntersectingTiles(l);for(const e of t)r=e.id,$e(r,e,i).addedOrModified.push(l)}this._graphicStore.updateZ();const h=[];for(const[e,t]of i)h.push(this._updateTile(t));await Promise.all(h)}catch(L){(0,u.zf)(L)}for(const n of t)try{const e=await this._getSymbolForGraphic(n,null);if(e){const t=e.hash();this._hashToExpandedSymbol.delete(t)}}catch(L){(0,u.zf)(L)}i.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())}_getArcadeInfo(e){const t=(e.attributes?Object.keys(e.attributes):[]).map((t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"})));return null==e.geometry?null:{geometryType:(0,_.$B)(e.geometry),spatialReference:m.A.fromJSON(e.geometry.spatialReference),fields:t}}_getSymbolForGraphic(e,t){return(0,u.Te)(this._controller.signal),null!=e.symbol?Promise.resolve(e.symbol):null!=this._effectiveRenderer?this._effectiveRenderer.getSymbolAsync(e,{scale:this.view.state.scale,signal:null!=t?t.signal:null}):Promise.resolve(this._getNullSymbol(e))}_getCIMSymbol(e,t,s){let i=this._hashToCIM.get(t);if(i)return Promise.resolve(i);const r=(0,C.Vb)(e);if(null!=r){if("CIMSymbolReference"===r.type)return i=r,this._hashToCIM.set(t,i),Promise.resolve(i);let e=this._hashToCIMSymbolPromise.get(t);return e||(e=r.fetchCIMSymbol(s).then((e=>(this._hashToCIM.set(t,e.data),this._hashToCIMSymbolPromise.delete(t),e))).catch((e=>(this._hashToCIMSymbolPromise.delete(t),(0,u.QP)(e),null))),this._hashToCIMSymbolPromise.set(t,e),e)}return Promise.resolve(null)}_expandCIMSymbol(e,t,s,i){const r=this._hashToExpandedSymbol.get(s);if(r)return Promise.resolve(r);let n=this._hashToExpandedSymbolPromise.get(s);if(n)return n;const o=this.container.stage,a=this._getArcadeInfo(t),l=(0,ve.um)(null),h=(0,Ye.createSymbolSchema)(e,l);return n=(0,Xe.Z)(h,a,o.resourceManager,i),this._hashToExpandedSymbolPromise.set(s,n),n.then((e=>(this._hashToExpandedSymbol.set(s,e),this._hashToExpandedSymbolPromise.delete(s),e))),n}async _getSymbolResources(e,t){return(0,u.Te)(this._controller.signal),this.container.stage?this._getSymbolForGraphic(e,t).then((s=>{if(!s)return null;const i=s.hash();return this._getCIMSymbol(s,i,t).then((s=>null==s?null:this._expandCIMSymbol(s,e,i,t).then((e=>{const t=e.layers.filter((e=>"text"===e.type&&"string"==typeof e.text));if(t&&t.length>0){const s=new Array(t.length);for(let e=0;e<t.length;e++){const i=t[e],r=[],[n]=(0,o.y)(i.text);i.text=n;for(let e=0;e<n.length;e++)r.push(n.charCodeAt(e));s[e]={symbol:i,id:e,glyphIds:r}}const r=new Map;return this.container.getMaterialItems(s).then((s=>{(0,d.Lw)(s);for(let e=0;e<t.length;e++){const i=t[e];r.set(i.cim,{text:i.text,mosaicItem:s[e].mosaicItem})}return{symbol:e,textInfo:r,hash:i}}))}return{symbol:e,hash:i}}))))})).catch((e=>((0,u.QP)(e),null))):null}async _projectAndNormalizeGeometry(e,t){if((0,u.Te)(this._controller.signal),null==e.geometry||"mesh"===e.geometry.type)return null;let s=e.geometry;if((0,_.Bi)(s)){const e=s.rings;s.rings=e}else if((0,_.Rg)(s)){const e=s.paths;s.paths=e}else if((0,_.ZC)(s)){const i=await this._getSymbolForGraphic(e,t);(0,u.Te)(this._controller.signal),s=i&&((0,ke.hH)(i.type)||(0,ke.Sb)(i.type))?s.center:(0,ke.DF)(s)}await(0,b.Nk)(s.spatialReference,this.view.spatialReference);const i=(0,x.b3)(s),r=(0,b.Cv)(i,s.spatialReference,this.view.spatialReference);return r&&(0,g.uC)(r),r}_onTileUpdate(e){const t=(0,v.Vp)(this.view.spatialReference);if(e.added&&e.added.length>0)for(const s of e.added)this._addNewTile(s,t);if(e.removed&&e.removed.length>0)for(const s of e.removed)this._removeTile(s.key)}async _addGraphic(e){this._abortProcessingGraphic(e.uid),(0,u.Te)(this._controller.signal);const t=new AbortController;this._graphicIdToAbortController.set(e.uid,t);const s={signal:t.signal};try{await this._addOrUpdateGraphic(e,s),(0,u.Te)(this._controller.signal),this._graphicIdToAbortController.delete(e.uid)}catch(X){if(this._graphicIdToAbortController.delete(e.uid),!(0,u.zf)(X))throw X}}_updateGraphic(e,t){(0,u.Te)(this._controller.signal);const s=this._projectAndNormalizeGeometry(e,t),i=this._getSymbolResources(e,t);return Promise.all([s,i]).then((([t,s])=>{(0,u.Te)(this._controller.signal),this._graphicStore.addOrModify(e,s,t)}))}_addOrUpdateGraphic(e,t){(0,u.Te)(this._controller.signal);const s=this._projectAndNormalizeGeometry(e,t),i=this._getSymbolResources(e,t);return Promise.all([s,i]).then((([t,s])=>{(0,u.Te)(this._controller.signal),this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,s,t)}))}_addTile(e){const t=this.view.featuresTilingScheme.getTileBounds((0,y.vt)(),e),s=this.view.featuresTilingScheme.getTileResolution(e.level),i=new k(e,s,t[0],t[3]);return this._tiles.set(e,i),this.container.addChild(i),i}async _addNewTile(e,t){const s=this._addTile(e.key),i=this._graphicStore.queryTileData(this._templateStore,e);if(0===i.length)return;if(t){const s=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of i)e.geometry&&((0,_.fT)(e.geometry)||(0,_.U9)(e.geometry))&&this._wrapPoints(e,s)}const r=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating");try{const t={type:"update",clear:!1,addOrUpdate:await this._processGraphics(e,i),remove:[],end:!0,sort:!1};s.patch(t),this._tileUpdateSet.delete(r),this.notifyChange("updating")}catch(L){if(this._tileUpdateSet.delete(r),this.notifyChange("updating"),!(0,u.zf)(L))throw L}}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)}_setFilterState(e,t){const s=this._displayIds.get(e),i=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(s,0,0,i|(t?D.Tp:0))}_getGraphicsData(e,t,s){const i=this.view,r=(0,v.Vp)(i.spatialReference),n=this._graphicStore.getGraphicsData(e,t,s);if(r){const e=Math.round((r.valid[1]-r.valid[0])/t.resolution);for(const t of n)t.geometry&&((0,_.fT)(t.geometry)||(0,_.U9)(t.geometry))&&this._wrapPoints(t,e)}return n}_wrapPoints(e,t){const s=e.geometry;(0,_.U9)(s)?this._wrapMultipoint(s,t):this._wrapPoint(e,t)}_wrapMultipoint(e,t){const s=e.points,i=[];let r=0,n=0;for(const[o,a]of s){if(i.push([o+r,a]),r=0,t===ke.dn){const e=5*ke.GP;o+n<e?(i.push([t,0]),r=-t):o+n>ke.dn-e&&(i.push([-t,0]),r=t)}else o+n<-ke.GP?(i.push([t,0]),r=-t):o+n>ke.dn+ke.GP&&(i.push([-t,0]),r=t);n+=o}e.points=i}_wrapPoint(e,t){const s=e.geometry;if(t===ke.dn){const i=5*ke.GP;s.x<i?e.geometry={points:[[s.x,s.y],[t,0]]}:s.x>ke.dn-i&&(e.geometry={points:[[s.x,s.y],[-t,0]]})}else s.x<-ke.GP?e.geometry={points:[[s.x,s.y],[t,0]]}:s.x>ke.dn+ke.GP&&(e.geometry={points:[[s.x,s.y],[-t,0]]})}_processGraphics(e,t,s){if(!t||!t.length||!this._meshFactory)return Promise.resolve(null);const i=Be.from(t,this.uid,e.transform),r=this._meshFactory;return this._matcher.then((t=>r.analyzeGraphics(i,this.container.stage.resourceManager,t,null,null,s).then((()=>(this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(e,i))))))}_processAnalyzedGraphics(e,t){const s=this._meshFactory,i=t.getSize(),r=t.getCursor(),n={features:i,records:i,metrics:0},o=new ye.U(e.key.id,n,w.w4.DEFAULT,!1,!1),a=[];for(;r.next();){const t=r.readGraphic();t.insertAfter=-1===t.insertAfter?-1:this._displayIds.get(t.insertAfter),t.displayId=this._displayIds.get(t.attributes[this.uid]);const i=new te(t.displayId);i.insertAfter=t.insertAfter,a.push(i),s.writeGraphic(o,r,e.level,this.container.stage.resourceManager)}const l=e.tileInfoView.tileInfo.isWrappable,h=o.serialize(l);if(1!==h.length)return new me;const d=h[0].message;return me.fromVertexData(d,a)}_abortProcessingGraphic(e){this._graphicIdToAbortController.get(e)?.abort()}_getNullSymbol(e){const t=e.geometry;return(0,_.Rg)(t)?T.x3:(0,_.Bi)(t)||(0,_.ZC)(t)?T.JJ:this.defaultPointSymbolEnabled?T.jM:null}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout((()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")}),160),this.notifyChange("updating")}};(0,i._)([(0,f.MZ)()],We.prototype,"_effectiveRenderer",null),(0,i._)([(0,f.MZ)({constructOnly:!0})],We.prototype,"requestUpdateCallback",void 0),(0,i._)([(0,f.MZ)()],We.prototype,"container",void 0),(0,i._)([(0,f.MZ)({constructOnly:!0})],We.prototype,"graphics",void 0),(0,i._)([(0,f.MZ)()],We.prototype,"renderer",void 0),(0,i._)([(0,f.MZ)()],We.prototype,"updating",null),(0,i._)([(0,f.MZ)()],We.prototype,"view",void 0),(0,i._)([(0,f.MZ)()],We.prototype,"updateRequested",void 0),(0,i._)([(0,f.MZ)()],We.prototype,"defaultPointSymbolEnabled",void 0),We=(0,i._)([(0,p.$)("geoscene.views.2d.layers.support.GraphicsView2D")],We);const et=We}}]);
//# sourceMappingURL=7750.c3894290.js.map