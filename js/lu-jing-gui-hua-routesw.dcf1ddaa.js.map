{"version":3,"file":"js/lu-jing-gui-hua-routesw.dcf1ddaa.js","mappings":"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","sources":["webpack://sun-glare-project/./src/assets/share_js/routeplanning_all.js","webpack://sun-glare-project/./src/assets/share_js/routeview_public.js","webpack://sun-glare-project/./src/views/RouteViewsw.vue","webpack://sun-glare-project/./src/views/RouteViewsw.vue?1fc5"],"sourcesContent":["// routeplanning_all.js\r\nimport { nextTick } from 'vue'\r\n\r\nexport function handleKeydown (context, event) {\r\n  if (context.searchResults.length && context.searchQueryStart) {\r\n    switch (event.key) {\r\n      case 'Escape':\r\n        context.searchResults = []\r\n        break\r\n      case 'Tab':\r\n        event.preventDefault()\r\n        context.highlightedIndex = (context.highlightedIndex + 1) % context.searchResults.length\r\n        nextTick(() => {\r\n          const highlightedElement = context.$refs.searchResultsStart.querySelector('li.highlighted')\r\n          if (highlightedElement) {\r\n            highlightedElement.scrollIntoView({ block: 'nearest', behavior: 'smooth' })\r\n          }\r\n        })\r\n        break\r\n      case 'Enter':\r\n        if (context.highlightedIndex >= 0 && context.highlightedIndex < context.searchResults.length) {\r\n          context.selectResult(context.searchResults[context.highlightedIndex], true)\r\n        }\r\n        break\r\n    }\r\n  } else if (context.searchResultsEnd.length && context.searchQueryEnd) {\r\n    switch (event.key) {\r\n      case 'Escape':\r\n        context.searchResultsEnd = []\r\n        break\r\n      case 'Tab':\r\n        event.preventDefault()\r\n        context.highlightedIndex = (context.highlightedIndex + 1) % context.searchResultsEnd.length\r\n        nextTick(() => {\r\n          const highlightedElement = context.$refs.searchResultsEnd.querySelector('li.highlighted')\r\n          if (highlightedElement) {\r\n            highlightedElement.scrollIntoView({ block: 'nearest', behavior: 'smooth' })\r\n          }\r\n        })\r\n        break\r\n      case 'Enter':\r\n        if (context.highlightedIndex >= 0 && context.highlightedIndex < context.searchResultsEnd.length) {\r\n          context.selectResult(context.searchResultsEnd[context.highlightedIndex], false)\r\n        }\r\n        break\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateTime (context) {\r\n  const now = new Date()\r\n  const currentTime = `${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`\r\n  // 只有当 selectedTime 是当前时间时，才更新\r\n  if (!context.isTimeFromUrl || context.selectedTime === currentTime) {\r\n    context.selectedTime = currentTime\r\n    context.isTimeFromUrl = false // 重置标志位\r\n  }\r\n}\r\n\r\nexport function clc1 (context) {\r\n  // 清空搜索框1\r\n  context.searchQueryStart = ''\r\n}\r\n\r\nexport function clc2 (context) {\r\n  // 清空搜索框2\r\n  context.searchQueryEnd = ''\r\n}\r\n\r\nexport function isDateDisabled (context, date) {\r\n  if (!date) return false\r\n  const selected = new Date(date)\r\n  const month = selected.getMonth() + 1\r\n  const day = selected.getDate()\r\n  if (month >= 1 && month <= 7 && day !== 15) {\r\n    return true\r\n  }\r\n  if (month === 8 && day <= 25) {\r\n    return true\r\n  }\r\n  if ((month === 10 || month === 12) && day !== 15) {\r\n    return true\r\n  }\r\n  if (month === 11 && day >= 9) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nexport function handleDateChange (context, event) {\r\n  const date = event.target.value\r\n  if (isDateDisabled(context, date)) {\r\n    alert('抱歉，选择的日期未进行模拟，请选择其他日期。可选日期为，9月1日-9月30日，11月1日到9日，以及其他月份的15日.')\r\n    context.selectedDate = ''\r\n  }\r\n}\r\n\r\nexport function onTimeInputChange (context, event) {\r\n  const value = event.target.value\r\n  const [hours, minutes] = value.split(':').map(Number)\r\n  const roundedMinutes = Math.floor(minutes / 10) * 10\r\n  context.selectedTime = `${String(hours).padStart(2, '0')}:${String(roundedMinutes).padStart(2, '0')}`\r\n}\r\n\r\nexport function onSearchInputChange (context, event, isStart) {\r\n  const query = event.target.value\r\n  const searchResultsField = isStart ? 'searchResults' : 'searchResultsEnd'\r\n  if (query.includes(\"'\")) {\r\n    console.log('输入法临时输入，不发送请求')\r\n    return\r\n  }\r\n  if (query.length >= 2) {\r\n    fetch(`${process.env.VUE_APP_API_URL}/api/search`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ searchQueryStart: query })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        context[searchResultsField] = data\r\n      })\r\n      .catch((error) => {\r\n        console.error('错误:', error)\r\n      })\r\n  } else {\r\n    context[searchResultsField] = []\r\n  }\r\n}\r\n","// routeview_public.js\r\nexport function parseUrlParams (context) {\r\n  const urlParams = new URLSearchParams(window.location.search)\r\n  const startParam = urlParams.get('start')\r\n  const endParam = urlParams.get('end')\r\n  const dateParam = urlParams.get('date')\r\n  const timeParam = urlParams.get('time')\r\n  const defaultRouteIdParam = urlParams.get('default_id')\r\n  const timeBasedRouteIdParam = urlParams.get('time_based_id')\r\n  if (startParam) {\r\n    try {\r\n      const startObj = JSON.parse(decodeURIComponent(startParam))\r\n      if (startObj && startObj.address) {\r\n        context.searchQueryStart = startObj.name\r\n      }\r\n    } catch (e) {\r\n      console.error('Error parsing start parameter:', e)\r\n    }\r\n  }\r\n  if (endParam) { // 如果有终点参数，进行解析\r\n    try {\r\n      const endObj = JSON.parse(decodeURIComponent(endParam))\r\n      if (endObj && endObj.address) {\r\n        context.searchQueryEnd = endObj.name // 绑定终点查询字符串\r\n      }\r\n    } catch (e) {\r\n      console.error('Error parsing end parameter:', e)\r\n    }\r\n  }\r\n  // 如果有日期参数，进行解析\r\n  if (dateParam) {\r\n    context.selectedDate = dateParam\r\n  }\r\n  // 如果有时间参数，进行解析\r\n  if (timeParam) {\r\n    context.selectedTime = timeParam\r\n    context.isTimeFromUrl = true // 设置标志位\r\n  }\r\n  // 如果有默认路径ID参数，进行解析\r\n  if (defaultRouteIdParam) {\r\n    context.defaultRouteId = defaultRouteIdParam\r\n  }\r\n  // 如果有基于时间的路径ID参数，进行解析\r\n  if (timeBasedRouteIdParam) {\r\n    context.timeBasedRouteId = timeBasedRouteIdParam\r\n  }\r\n\r\n  // 如果有底图参数，进行解析\r\n  context.created()\r\n}\r\n\r\nexport function toggleRouteList (context) {\r\n  context.isRouteListVisible = !context.isRouteListVisible\r\n}\r\n\r\nexport function getColor (index) {\r\n  if (index === 0) {\r\n    return 'rgb(25, 202, 173)' // 绿色，耗时少路径\r\n  } else if (index === 1) {\r\n    return 'rgb(244, 96, 108)' // 红色，无眩光路径\r\n  }\r\n  return 'black' // 默认颜色\r\n}\r\n\r\nexport function highlightRoute (context, routeId) {\r\n  routeId = routeId === 'defaultRouteId' ? 'noGlareRouteId' : 'defaultRouteId'\r\n  if (context.highlightedRouteId && context.highlightedRouteId !== routeId) {\r\n    resetRouteStyle(context, context.highlightedRouteId)\r\n  }\r\n  if (context.blinkingTimers[routeId]) {\r\n    clearInterval(context.blinkingTimers[routeId])\r\n    delete context.blinkingTimers[routeId]\r\n    resetRouteStyle(context, routeId)\r\n  }\r\n  const layer = context.routeLayers[routeId]\r\n  if (layer) {\r\n    const color = context.highlightedColor\r\n    const newRenderer = {\r\n      type: 'simple',\r\n      title: '路径',\r\n      symbol: {\r\n        type: 'simple-line',\r\n        color: color,\r\n        width: 5\r\n      }\r\n    }\r\n    layer.renderer = newRenderer\r\n  }\r\n  context.highlightedRouteId = routeId\r\n  startBlinking(context, routeId)\r\n}\r\n\r\nexport function startBlinking (context, routeId) {\r\n  const layer = context.routeLayers[routeId]\r\n  if (!layer) return\r\n\r\n  let isBlinkOn = false\r\n  const originalColor = routeId === context.noGlareRouteId ? context.noGlareColor : context.defaultColor\r\n\r\n  const intervalId = setInterval(() => {\r\n    isBlinkOn = !isBlinkOn\r\n    const color = isBlinkOn ? context.highlightedColor : context.highlightedBlinkColor\r\n    const newRenderer = {\r\n      type: 'simple',\r\n      title: '路径',\r\n      symbol: {\r\n        type: 'simple-line',\r\n        color: color,\r\n        width: 4.5\r\n      }\r\n    }\r\n    layer.renderer = newRenderer\r\n  }, 300)\r\n\r\n  context.blinkingTimers[routeId] = intervalId\r\n\r\n  setTimeout(() => {\r\n    clearInterval(context.blinkingTimers[routeId])\r\n    delete context.blinkingTimers[routeId]\r\n    const finalRenderer = {\r\n      type: 'simple',\r\n      title: '路径',\r\n      symbol: {\r\n        type: 'simple-line',\r\n        color: context.highlightedColor,\r\n        width: 4.5\r\n      }\r\n    }\r\n    layer.renderer = finalRenderer\r\n    setTimeout(() => {\r\n      resetRouteStyle(context, routeId, originalColor)\r\n    }, 3000)\r\n  }, 3000)\r\n}\r\n\r\nexport function resetRouteStyle (context, routeId, originalColor = null) {\r\n  if (context.blinkingTimers[routeId]) {\r\n    clearInterval(context.blinkingTimers[routeId])\r\n    delete context.blinkingTimers[routeId]\r\n  }\r\n  const layer = context.routeLayers[routeId]\r\n  if (layer) {\r\n    const isNoGlare = routeId === context.noGlareRouteId\r\n    const color = (isNoGlare ? context.defaultColor : context.noGlareColor)\r\n    const newRenderer = {\r\n      type: 'simple',\r\n      title: '路径',\r\n      symbol: {\r\n        type: 'simple-line',\r\n        color: color,\r\n        width: isNoGlare ? 4.5 : 3\r\n      }\r\n    }\r\n    layer.renderer = newRenderer\r\n  }\r\n}\r\n\r\nexport function selectResult (context, result, isStart = true) {\r\n  console.log('用户选择了搜索结果:', result)\r\n  const simplifiedResult = {\r\n    name: result.name,\r\n    address: result.address,\r\n    wgs84_latitude: result.wgs84_latitude,\r\n    wgs84_longitude: result.wgs84_longitude,\r\n    location: [result.wgs84_longitude, result.wgs84_latitude],\r\n    baidu_index: result.baidu_index,\r\n    baidu_latitude: result.baidu_latitude,\r\n    baidu_longitude: result.baidu_longitude,\r\n    id: result.id,\r\n    label: result.label\r\n  }\r\n  let currentStart = context.selectedResultStart ? JSON.stringify(context.selectedResultStart) : null\r\n  let currentEnd = context.selectedResultEnd ? JSON.stringify(context.selectedResultEnd) : null\r\n  if (isStart) {\r\n    context.selectedResultStart = simplifiedResult\r\n    context.searchQueryStart = simplifiedResult.name\r\n    context.searchResults = []\r\n    currentStart = JSON.stringify(simplifiedResult)\r\n  } else {\r\n    context.selectedResultEnd = simplifiedResult\r\n    context.searchQueryEnd = simplifiedResult.name\r\n    context.searchResultsEnd = []\r\n    currentEnd = JSON.stringify(simplifiedResult)\r\n  }\r\n  context.$router.push({\r\n    path: '/lu-jing-gui-hua/Intermediate-page',\r\n    query: {\r\n      start: currentStart,\r\n      end: currentEnd,\r\n      date: context.selectedDate,\r\n      time: context.selectedTime,\r\n      BasemapLayer: context.BasemapName\r\n    }\r\n  })\r\n}\r\n\r\nexport function swap (context) {\r\n  context.isSwapping = true // 设置标志位\r\n  // 交换 searchQueryStart 和 searchQueryEnd\r\n  const tempQuery = context.searchQueryStart\r\n  context.searchQueryStart = context.searchQueryEnd\r\n  context.searchQueryEnd = tempQuery\r\n  // 交换 selectedResultStart 和 selectedResultEnd\r\n  const tempResult = context.selectedResultStart\r\n  context.selectedResultStart = context.selectedResultEnd\r\n  context.selectedResultEnd = tempResult\r\n  // 调用 onSearch 方法重新查询路径\r\n  context.onSearch().then(() => {\r\n    parseUrlParams(context)\r\n    context.initMap()\r\n    // 确保在交换操作完成后，更新搜索框的值\r\n    context.searchQueryStart = context.selectedResultStart.name\r\n    context.searchQueryEnd = context.selectedResultEnd.name\r\n    context.isSwapping = false // 重置标志位\r\n  }).catch(() => {\r\n    context.isSwapping = false // 确保在错误情况下也重置标志位\r\n  })\r\n}\r\n","<template>\r\n  <!-- 输入了起点和终点之后,还没有摁查询路径的画面 -->\r\n  <div class=\"lu-jing-gui-hua\">\r\n    <!-- 搜索框 -->\r\n    <!-- 外层容器 -->\r\n    <div class=\"search-containers\">\r\n      <!-- 交换的侧边栏 -->\r\n      <div class=\"revert-containers\">\r\n        <div class=\"car\"><img src='@/assets/image/map_icon/car.png'></div>\r\n        <div class=\"swap-action\">\r\n          <!-- 绑定 swap 方法到点击事件 -->\r\n          <button @click=\"swap\" title=\"切换起终点\">\r\n            <img :src=\"require('@/assets/image/map_icon/revert_new_dark.png')\" alt=\"\" class=\"revert\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <!-- 搜索起点的容器 -->\r\n      <div class=\"search-container start\">\r\n        <!-- 图片 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src='@/assets/image/map_icon/pink-circle.png' alt=\"pink\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryStart\" @input=\"onSearchInputChange($event, true)\" placeholder=\"请输入起点\" class=\"search-box search-box-start\"/>\r\n        <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete\" title=\"清空\" @click=\"clc1\">\r\n            <img src='@/assets/image/map_icon/cancel.png' alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 起点搜索结果展示 -->\r\n        <div class=\"search-results\" v-if=\"searchResults.length && searchQueryStart\" ref=\"searchResultsStart\">\r\n    <ul>\r\n      <li v-for=\"(result, index) in searchResults\" :key=\"index\" :class=\"{ 'highlighted': index === highlightedIndex }\" @click=\"selectResult(result, true)\">\r\n        {{ result.name }}\r\n      </li>\r\n        </ul>\r\n        </div>\r\n    </div>\r\n      <!-- 搜索终点的容器 -->\r\n      <div class=\"search-container end\">\r\n        <!-- 图片容器 -->\r\n        <div class=\"search-icon-wrapper\">\r\n          <img src='@/assets/image/map_icon/green-circle.png' alt=\"green\">\r\n        </div>\r\n        <!-- 输入框 -->\r\n        <input type=\"text\" v-model=\"searchQueryEnd\" @input=\"onSearchInputChange($event, false)\" placeholder=\"请输入终点\" class=\"search-box search-box-end\"/>\r\n         <!-- 搜索框内部的删除图片 -->\r\n        <span class=\"search-box-img\">\r\n          <div class=\"delete\" title=\"清空\" @click=\"clc2\">\r\n            <img src='@/assets/image/map_icon/cancel.png' alt=\"delete1\">\r\n          </div>\r\n        </span>\r\n        <!-- 终点搜索结果展示 -->\r\n        <div class=\"search-results\" v-if=\"searchResultsEnd.length && searchQueryEnd\" ref=\"searchResultsEnd\">\r\n    <ul>\r\n      <li v-for=\"(result, index) in searchResultsEnd\" :key=\"index\" :class=\"{ 'highlighted': index === highlightedIndex }\" @click=\"selectResult(result, false)\">\r\n        {{ result.name }}\r\n      </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"search-action\" @click=\"onSearch\" title=\"搜索\">\r\n        <img :src=\"require('@/assets/image/map_icon/search.png')\" alt=\"\" class=\"search\">\r\n      </div>\r\n    <!-- 新的覆盖层容器 -->\r\n    <div v-if=\"isLoading\" class=\"loader-overlay\">\r\n      <div class=\"loader\">\r\n      </div>\r\n    </div>\r\n    </div>\r\n  </div>\r\n  <!-- 地图展示 -->\r\n  <div id=\"viewDiv\"></div>\r\n  <div v-if=\"ismaploading\" class=\"maploader-overlay\">\r\n    <div class=\"maploader\">\r\n    </div>\r\n  </div>\r\n  <!-- 时间选择框和路径展示框 -->\r\n  <div class=\"main-container\">\r\n    <!-- 时间选择框 -->\r\n    <div class=\"choose-time\">\r\n      <div class=\"form-group\">\r\n        <label for=\"date-input\">选择日期：</label>\r\n        <input id=\"date-input\" type=\"date\" v-model=\"selectedDate\" :min=\"minDate\" :max=\"maxDate\" :class=\"{ 'invalid-date': isDateDisabled(selectedDate) }\" @change=\"handleDateChange\">\r\n        <label for=\"time-input\">选择时间：</label>\r\n        <input id=\"time-input\" type=\"time\" v-model=\"formattedTime\" @input=\"onTimeInputChange\" step=\"600\"> <!-- 600秒 = 10分钟 -->\r\n      </div>\r\n    </div>\r\n    <div>\r\n   <!-- 路线展示 -->\r\n   <transition name=\"fade\">\r\n      <div class=\"routelist\" v-show=\"isRouteListVisible\">\r\n        <ul class=\"cardlist\">\r\n          <div class=\"route\" data-index=\"1\" @click=\"highlightRoute('noGlareRouteId')\">\r\n            <div class=\"introduction\" :style=\"{ color: getColor(1) }\">无眩光路径</div>\r\n            <p class=\"intro\">\r\n              <span>用时：{{totalHours}}小时{{totalMinutes}}分钟</span> |\r\n              <!-- <span></span> -->\r\n              <span>路长：{{totalDistance}}</span>\r\n              <!-- <span></span> -->\r\n            </p>\r\n            <p class=\"intro\">\r\n              <span>途径：{{totalPass }}</span>\r\n              <!-- <span></span> -->\r\n            </p>\r\n          </div>\r\n          <div class=\"route\" data-index=\"0\" @click=\"highlightRoute('defaultRouteId')\">\r\n            <div class=\"introduction\" :style=\"{ color: getColor(0) }\">常规路径</div>\r\n            <p class=\"intro\">\r\n              <span>用时：{{noGlareTotalHours}}小时{{noGlareTotalMinutes}}分钟</span> |\r\n              <!-- <span></span> -->\r\n              <span>路长：{{noGlareTotalDistance}}</span>\r\n              <!-- <span></span> -->\r\n            </p>\r\n            <p class=\"intro\">\r\n              <span>途径：{{noGlareTotalPass}}</span>\r\n              <!-- <span></span> -->\r\n            </p>\r\n          </div>\r\n        </ul>\r\n        <span class=\"toggle-button\" @click=\"toggleRouteList\" title=\"隐藏\">\r\n          <img src='@/assets/image/map_icon/cancel.png' alt=\"delete1\">\r\n        </span>\r\n      </div>\r\n    </transition>\r\n    <button v-if=\"!isRouteListVisible\" @click=\"toggleRouteList\" class=\"open-button\">展开路线结果</button>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Map from '@geoscene/core/Map.js'\r\nimport MapView from '@geoscene/core/views/MapView.js'\r\nimport Graphic from '@geoscene/core/Graphic'\r\nimport Point from '@geoscene/core/geometry/Point.js'\r\nimport GraphicsLayer from '@geoscene/core/layers/GraphicsLayer'\r\nimport FeatureLayer from '@geoscene/core/layers/FeatureLayer'\r\nimport Extent from '@geoscene/core/geometry/Extent'\r\nimport axios from 'axios'\r\nimport { markRaw } from 'vue'\r\nimport BasemapGallery from '@geoscene/core/widgets/BasemapGallery.js'\r\nimport Compass from '@geoscene/core/widgets/Compass.js'\r\nimport ScaleBar from '@geoscene/core/widgets/ScaleBar.js'\r\nimport DistanceMeasurement2D from '@geoscene/core/widgets/DistanceMeasurement2D.js'\r\nimport LayerList from '@geoscene/core/widgets/LayerList.js'\r\nimport { parseUrlParams, toggleRouteList, getColor, highlightRoute, selectResult, swap } from '@/assets/share_js/routeview_public'\r\nimport { handleKeydown, updateTime, clc1, clc2, isDateDisabled, handleDateChange, onTimeInputChange, onSearchInputChange } from '@/assets/share_js/routeplanning_all'\r\n\r\nexport default {\r\n  name: 'RouteView',\r\n  data () {\r\n    return {\r\n      searchQueryStart: '',\r\n      searchQueryEnd: '',\r\n      selectedResultStart: null,\r\n      selectedResultEnd: null,\r\n      searchResults: [],\r\n      searchResultsEnd: [],\r\n      isLoading: false,\r\n      ismaploading: false,\r\n      totalHours: 0,\r\n      totalMinutes: 0,\r\n      totalDistance: '0千米',\r\n      selectedDate: '', // 用户选择的日期\r\n      selectedTime: '', // 用户选择的时间\r\n      noGlareTotalHours: 0, // 无眩光路径的总时长（小时）\r\n      noGlareTotalMinutes: 0, // 无眩光路径的总时长（分钟）\r\n      highlightedIndex: -1, // 高亮的搜索结果索引\r\n      noGlareTotalDistance: '0千米', // 无眩光路径的总距离\r\n      highlightedRouteId: null, // 当前高亮显示的路径ID\r\n      routeLayers: {}, // 存储路径的FeatureLayer实例\r\n      // 闪烁路径的相关数据\r\n      blinkingTimers: {}, // 存储每条路径的闪烁定时器 ID\r\n      highlightedColor: [0, 123, 255, 1], // 浅蓝色，完全不透明\r\n      highlightedBlinkColor: [0, 123, 255, 0.2], // 浅蓝色，半透明\r\n      noGlareColor: [244, 96, 108], // 无眩光路径为红色\r\n      defaultColor: [25, 202, 173], // 常规路径为绿色\r\n      noGlareRouteId: 'noGlareRouteId',\r\n      defaultRouteId: 'defaultRouteId',\r\n      isRouteListVisible: true, // 路线列表是否可见\r\n      totalPass: '',\r\n      noGlareTotalPass: '',\r\n      BasemapName: null\r\n    }\r\n  },\r\n  // 在组件挂载时初始化地图\r\n  mounted () {\r\n    // this.parseUrlParams()\r\n    this.created()\r\n    this.initMap()\r\n    if (this.$route.query.start && this.$route.query.end) {\r\n      this.selectedResultStart = JSON.parse(this.$route.query.start)\r\n      this.selectedResultEnd = JSON.parse(this.$route.query.end)\r\n    }\r\n    parseUrlParams(this)\r\n    // 设置定时器，每隔1分钟更新时间\r\n    window.addEventListener('keydown', this.handleKeydown)\r\n  },\r\n  beforeUnmount () {\r\n    window.removeEventListener('keydown', this.handleKeydown)\r\n  },\r\n  computed: {\r\n    minDate () {\r\n      return '2024-01-01'\r\n    },\r\n    maxDate () {\r\n      return '2024-12-31'\r\n    },\r\n    formattedTime () {\r\n      // 格式化时间为10分钟间隔\r\n      if (!this.selectedTime) return ''\r\n      const [hours, minutes] = this.selectedTime.split(':').map(Number)\r\n      const roundedMinutes = Math.floor(minutes / 10) * 10\r\n      return `${String(hours).padStart(2, '0')}:${String(roundedMinutes).padStart(2, '0')}`\r\n    }\r\n  },\r\n  methods: {\r\n    toggleRouteList () {\r\n      toggleRouteList(this)\r\n    },\r\n    getColor (index) {\r\n      return getColor(index)\r\n    },\r\n    highlightRoute (routeId) {\r\n      highlightRoute(this, routeId)\r\n    },\r\n    onTimeInputChange (event) {\r\n      onTimeInputChange(this, event)\r\n    },\r\n    isDateDisabled (date) {\r\n      return isDateDisabled(this, date)\r\n    },\r\n    handleDateChange (event) {\r\n      handleDateChange(this, event)\r\n    },\r\n    handleKeydown (event) {\r\n      handleKeydown(this, event)\r\n    },\r\n    updateTime () {\r\n      updateTime(this)\r\n    },\r\n    clc1 () {\r\n      clc1(this)\r\n    },\r\n    clc2 () {\r\n      clc2(this)\r\n    },\r\n    swap () {\r\n      swap(this)\r\n    },\r\n    onSearchInputChange (event, isStart) {\r\n      onSearchInputChange(this, event, isStart)\r\n    },\r\n    selectResult (result, isStart = true) {\r\n      selectResult(this, result, isStart)\r\n    },\r\n    onSearch () {\r\n      return new Promise((resolve, reject) => {\r\n        // 检查是否两个结果都已选择\r\n        if (this.selectedResultStart && this.selectedResultEnd) {\r\n          // 显示加载动画\r\n          this.isLoading = true\r\n          // 构造包含location属性的起点和终点对象\r\n          const startWithLocation = {\r\n            ...this.selectedResultStart,\r\n            location: [this.selectedResultStart.wgs84_longitude, this.selectedResultStart.wgs84_latitude]\r\n          }\r\n          const endWithLocation = {\r\n            ...this.selectedResultEnd,\r\n            location: [this.selectedResultEnd.wgs84_longitude, this.selectedResultEnd.wgs84_latitude]\r\n          }\r\n          const formattedTime = this.selectedTime.length === 5 ? `${this.selectedTime}:00` : this.selectedTime\r\n          console.log('Formatted Time:', formattedTime) // 打印时间参数\r\n          // 发送请求到后端进行路径规划\r\n          axios.post(`${process.env.VUE_APP_API_URL}/api/route/plan`, { start: startWithLocation, end: endWithLocation, date: this.selectedDate, time: formattedTime })\r\n            .then(response => {\r\n              // 后端返回的路径规划结果ID\r\n              const defaultRoutePlanId = response.data.default_id\r\n              const timeBasedRoutePlanId = response.data.time_based_id\r\n              console.log('默认路径规划结果ID:', defaultRoutePlanId)\r\n              console.log('基于时间的路径规划结果ID:', timeBasedRoutePlanId)\r\n              console.log('路径规划成功，时间日期是:', this.selectedDate, this.selectedTime)\r\n              // 隐藏加载动画\r\n              this.isLoading = false\r\n              // 使用Vue Router跳转到结果页面，并传递路径规划结果ID\r\n              this.$router.push({\r\n                path: '/lu-jing-gui-hua/route',\r\n                query: {\r\n                  start: JSON.stringify(startWithLocation),\r\n                  end: JSON.stringify(endWithLocation),\r\n                  default_id: defaultRoutePlanId,\r\n                  time_based_id: timeBasedRoutePlanId,\r\n                  date: this.selectedDate,\r\n                  time: formattedTime,\r\n                  BasemapLayer: this.BasemapName\r\n                }\r\n              })\r\n              // 更新搜索框的值\r\n              this.searchQueryStart = startWithLocation.name\r\n              this.searchQueryEnd = endWithLocation.name\r\n              resolve()\r\n            })\r\n            .catch(error => {\r\n              console.error(error)\r\n              // 隐藏加载动画\r\n              this.isLoading = false\r\n              // 错误处理，例如显示提示信息\r\n              alert('路径规划失败，请稍后再试。')\r\n              reject(error)\r\n            })\r\n        } else {\r\n          // 如果起点或终点未选择，显示提示信息\r\n          alert('请确保起点和终点都已选择。')\r\n          reject(new Error('请确保起点和终点都已选择。'))\r\n        }\r\n      })\r\n    },\r\n    // 初始化地图\r\n    initMap (basemapName) {\r\n      const map = new Map({\r\n        basemap: basemapName || this.BasemapName || 'tianditu-vector' // 使用适合的底图\r\n      })\r\n      this.map = map\r\n      // console.log('当前底图名称:', this.BasemapName, basemapName)\r\n      this.view = new MapView({\r\n        container: 'viewDiv', // 使用正确的容器ID\r\n        map: map,\r\n        center: [114.3, 30.7], // 默认中心点坐标\r\n        zoom: 4, // 默认缩放级别\r\n        constraints: {\r\n          geometry: {\r\n            type: 'extent',\r\n            xmin: 113.6,\r\n            ymin: 29.9,\r\n            xmax: 115.0,\r\n            ymax: 31.3\r\n          },\r\n          minScale: 500,\r\n          maxScale: 2000000,\r\n          rotationEnabled: false,\r\n          snapToZoom: false\r\n        }\r\n      })\r\n      // 创建 BasemapGallery 实例\r\n      const basemapGallery = new BasemapGallery({\r\n        view: this.view,\r\n        source: {\r\n          query: {\r\n            title: '\"Basemaps for Developers\" AND owner:geoscenedev'\r\n          }\r\n        }\r\n      })\r\n      // 监听底图选择事件\r\n      basemapGallery.watch('activeBasemap', (newBasemap) => {\r\n        this.handleBasemapChange(newBasemap)\r\n      })\r\n      const compass = new Compass({\r\n        view: this.view\r\n      })\r\n      // 创建 ScaleBar 实例\r\n      const scaleBar = new ScaleBar({\r\n        view: this.view,\r\n        unit: 'metric', // 使用公制单位\r\n        style: 'ruler' // 使用标尺样式\r\n      })\r\n      // 创建 DistanceMeasurement2D 实例\r\n      const distanceMeasurement2D = new DistanceMeasurement2D({\r\n        view: this.view,\r\n        unit: 'metric',\r\n        unitOptions: {\r\n          metric: ['kilometers', 'meters'],\r\n          nonMetric: ['miles', 'feet']\r\n        },\r\n        iconClass: 'esri-icon-measure-line' // 设置图标类\r\n      })\r\n      // 创建 LayerList 实例\r\n      const layerList = new LayerList({\r\n        view: this.view\r\n      })\r\n      // 将 DistanceMeasurement2D 添加到地图视图的左下角\r\n      this.view.ui.add(distanceMeasurement2D, {\r\n        position: 'bottom-leading',\r\n        index: 0 // 确保它在最上面\r\n      })\r\n      // 将 BasemapGallery 添加到地图视图的右下角\r\n      this.view.ui.add(basemapGallery, {\r\n        position: 'bottom-right',\r\n        index: 0\r\n      })\r\n      // 将 LayerList 添加到地图视图的右下角\r\n      this.view.ui.add(layerList, {\r\n        position: 'bottom-right',\r\n        index: 1\r\n      })\r\n      // 移动缩放控件到左下角\r\n      this.view.ui.move('zoom', {\r\n        position: 'bottom-left',\r\n        index: 1\r\n      })\r\n      // 将指南针添加到地图视图的左下角\r\n      this.view.ui.add(compass, {\r\n        position: 'bottom-left',\r\n        index: 2\r\n      })\r\n      // 将 ScaleBar 添加到地图视图的左下角\r\n      this.view.ui.add(scaleBar, {\r\n        position: 'bottom-left',\r\n        index: 3\r\n      })\r\n\r\n      // 创建一个新的GraphicsLayer实例，以便在地图上绘制点\r\n      const graphicsLayer = new GraphicsLayer(\r\n        {\r\n          title: '起点与终点'\r\n        }\r\n      )\r\n      map.add(graphicsLayer)\r\n\r\n      // 创建 FeatureLayer 实例\r\n      const featureLayer = new FeatureLayer({\r\n        url: 'https://www.geosceneonline.cn/server/rest/services/Hosted/wuhan_village/FeatureServer',\r\n        title: '武汉县区面', // 设置图层名称\r\n        renderer: {\r\n          type: 'simple', // 使用简单渲染器\r\n          title: '县区边界',\r\n          symbol: {\r\n            type: 'simple-fill', // 使用简单填充符号\r\n            color: [0, 0, 0, 0], // 填充颜色透明\r\n            outline: {\r\n              color: [0, 0, 0, 1], // 轮廓颜色红色\r\n              width: 1\r\n            }\r\n          }\r\n        },\r\n        popupTemplate: {\r\n          content: [{\r\n            type: 'fields',\r\n            fieldInfos: [{\r\n              fieldName: '县区name',\r\n              label: '县区名称'\r\n            }]\r\n          }]\r\n        }\r\n      })\r\n      // 将 FeatureLayer 添加到地图\r\n      map.add(featureLayer)\r\n      map.add(graphicsLayer)\r\n\r\n      this.view.when(() => {\r\n        this.drawPoints(graphicsLayer)\r\n        this.adjustView()\r\n        this.drawRoutes(map)\r\n      }).catch((err) => {\r\n        console.error('MapView initialization error:', err)\r\n      })\r\n    },\r\n    // 处理底图选择\r\n    handleBasemapChange (basemap) {\r\n      const basemapMapping = {\r\n        '天地图-矢量（球面墨卡托投影）': 'tianditu-vector',\r\n        '天地图-影像（球面墨卡托投影）': 'tianditu-image',\r\n        '天地图-地形（球面墨卡托投影）': 'tianditu-topography'\r\n      }\r\n      // 检查 basemap.title 是否是中文\r\n      if (basemapMapping[basemap.title]) {\r\n        this.BasemapName = basemapMapping[basemap.title]\r\n      } else {\r\n        this.BasemapName = basemap.title\r\n      }\r\n      console.log('Basemap changed:', this.BasemapName)\r\n      const urlParams = new URLSearchParams(window.location.search)\r\n      urlParams.set('BasemapLayer', this.BasemapName)\r\n      window.history.replaceState({}, '', `${window.location.pathname}?${urlParams}`)\r\n    },\r\n    created () {\r\n      const BasemapLayer = this.$route.query.BasemapLayer\r\n      const basemapMapping = {\r\n        '天地图-矢量（球面墨卡托投影）': 'tianditu-vector',\r\n        '天地图-影像（球面墨卡托投影）': 'tianditu-image',\r\n        '天地图-地形（球面墨卡托投影）': 'tianditu-topography',\r\n        '天地图-矢量（含注记）（球面墨卡托投影）': 'tianditu-vector'\r\n      }\r\n\r\n      // 如果有底图参数，进行解析\r\n      if (BasemapLayer) {\r\n        // 检查 BasemapLayer 是否是中文\r\n        if (basemapMapping[BasemapLayer]) {\r\n          this.BasemapName = basemapMapping[BasemapLayer]\r\n        } else {\r\n          this.BasemapName = BasemapLayer\r\n        }\r\n      }\r\n      console.log('BasemapLayer is update', this.BasemapName)\r\n    },\r\n    // 调整视图以适应起点和终点\r\n    adjustView () {\r\n      if (this.selectedResultStart && this.selectedResultEnd) {\r\n        const padding = 0.01 // 调整这个值以增加或减少边界的放宽程度\r\n        const extent = new Extent({\r\n          xmin: Math.min(this.selectedResultStart.location[0], this.selectedResultEnd.location[0]) - 10 * padding,\r\n          ymin: Math.min(this.selectedResultStart.location[1], this.selectedResultEnd.location[1]) - 10 * padding,\r\n          xmax: Math.max(this.selectedResultStart.location[0], this.selectedResultEnd.location[0]) + 10 * padding,\r\n          ymax: Math.max(this.selectedResultStart.location[1], this.selectedResultEnd.location[1]) + 10 * padding\r\n        })\r\n        this.view.goTo(extent).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      } else if (this.selectedResultStart) {\r\n        this.view.goTo({\r\n          center: [this.selectedResultStart.location[0], this.selectedResultStart.location[1]],\r\n          zoom: 10\r\n        }).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      } else if (this.selectedResultEnd) {\r\n        this.view.goTo({\r\n          center: [this.selectedResultEnd.location[0], this.selectedResultEnd.location[1]],\r\n          zoom: 10\r\n        }).catch((err) => {\r\n          console.error('Error adjusting view:', err)\r\n        })\r\n      }\r\n    },\r\n    drawPoints (graphicsLayer) {\r\n      // 检查this.$route.query.start和this.$route.query.end是否定义\r\n      if (!this.$route.query.start || !this.$route.query.end) {\r\n        console.error('Start or end point is undefined.')\r\n        return // 如果未定义，直接返回\r\n      }\r\n      const start = JSON.parse(this.$route.query.start)\r\n      const end = JSON.parse(this.$route.query.end)\r\n      // 检查start和end是否有location属性\r\n      if (!start.location || !end.location) {\r\n        console.error('Start or end point does not have a location.')\r\n        return // 如果没有location属性，直接返回\r\n      }\r\n      // 创建起点和终点的Point对象\r\n      const startPoint = new Point({\r\n        longitude: start.location[0],\r\n        latitude: start.location[1]\r\n      })\r\n      const endPoint = new Point({\r\n        longitude: end.location[0],\r\n        latitude: end.location[1]\r\n      })\r\n      const startGraphic = new Graphic({\r\n        geometry: startPoint,\r\n        title: '起点',\r\n        symbol: {\r\n          type: 'simple-marker', // autocasts as new SimpleMarkerSymbol()\r\n          color: 'red',\r\n          size: '20px'\r\n        },\r\n        // 添加popupTemplate\r\n        popupTemplate: {\r\n          title: '起点信息',\r\n          content: [\r\n            {\r\n              type: 'fields',\r\n              fieldInfos: [\r\n                {\r\n                  fieldName: 'address',\r\n                  label: '地址'\r\n                },\r\n                {\r\n                  fieldName: 'name',\r\n                  label: '名称'\r\n                },\r\n                // 可以继续添加更多字段\r\n                {\r\n                  fieldName: 'wgs84_latitude',\r\n                  label: 'WGS84纬度'\r\n                },\r\n                {\r\n                  fieldName: 'wgs84_longitude',\r\n                  label: 'WGS84经度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_index',\r\n                  label: '百度索引'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_latitude',\r\n                  label: '百度纬度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_longitude',\r\n                  label: '百度经度'\r\n                },\r\n                {\r\n                  fieldName: 'id',\r\n                  label: 'ID'\r\n                },\r\n                {\r\n                  fieldName: 'label',\r\n                  label: '标签'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        attributes: start\r\n      })\r\n      const endGraphic = new Graphic({\r\n        geometry: endPoint,\r\n        title: '终点',\r\n        symbol: {\r\n          type: 'simple-marker',\r\n          color: 'green',\r\n          size: '20px'\r\n        },\r\n        // 添加popupTemplate\r\n        popupTemplate: {\r\n          title: '终点信息',\r\n          content: [\r\n            {\r\n              type: 'fields',\r\n              fieldInfos: [\r\n                {\r\n                  fieldName: 'address',\r\n                  label: '地址'\r\n                },\r\n                {\r\n                  fieldName: 'name',\r\n                  label: '名称'\r\n                },\r\n                // 可以继续添加更多字段\r\n                {\r\n                  fieldName: 'wgs84_latitude',\r\n                  label: 'WGS84纬度'\r\n                },\r\n                {\r\n                  fieldName: 'wgs84_longitude',\r\n                  label: 'WGS84经度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_index',\r\n                  label: '百度索引'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_latitude',\r\n                  label: '百度纬度'\r\n                },\r\n                {\r\n                  fieldName: 'baidu_longitude',\r\n                  label: '百度经度'\r\n                },\r\n                {\r\n                  fieldName: 'id',\r\n                  label: 'ID'\r\n                },\r\n                {\r\n                  fieldName: 'label',\r\n                  label: '标签'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        attributes: end\r\n      })\r\n      // 将起点和终点添加到图形图层\r\n      graphicsLayer.addMany([startGraphic, endGraphic])\r\n    },\r\n    drawRoutes (map) {\r\n      const defaultRouteId = this.$route.query.default_id // 从URL获取默认路线ID\r\n      const timeBasedRouteId = this.$route.query.time_based_id // 从URL获取基于时间的路线ID\r\n\r\n      if (!defaultRouteId && !timeBasedRouteId) {\r\n        console.error('Route IDs are undefined.')\r\n        return\r\n      }\r\n      if (defaultRouteId) {\r\n        this.fetchAndDrawRoute(map, defaultRouteId, [25, 202, 173], true) // 绿色，耗时少路径\r\n      }\r\n      if (timeBasedRouteId) {\r\n        this.fetchAndDrawRoute(map, timeBasedRouteId, [244, 96, 108]) // 红色，无眩光路径\r\n      }\r\n    },\r\n    fetchAndDrawRoute (map, routeId, color, isNoGlareRoute = false) {\r\n      const geojsonUrl = `${process.env.VUE_APP_API_URL}/api/get_geojson/${routeId}`\r\n      fetch(geojsonUrl) // 使用fetch API获取GeoJSON文件\r\n        .then(response => response.json()) // 将响应转换为JSON\r\n        .then(data => {\r\n          let totalLength = 0\r\n          let totalCost = 0\r\n          const roadLengths = {}\r\n\r\n          const features = data.features.map((feature, index) => {\r\n            if (feature.properties.cost !== 99999) {\r\n              totalLength += feature.properties.length\r\n              totalCost += feature.properties.cost\r\n            }\r\n            if (!feature.properties.name.includes('未知')) {\r\n              if (!roadLengths[feature.properties.name]) {\r\n                roadLengths[feature.properties.name] = { length: 0, order: index }\r\n              }\r\n              roadLengths[feature.properties.name].length += feature.properties.length\r\n            }\r\n            return {\r\n              geometry: {\r\n                type: 'polyline',\r\n                paths: feature.geometry.coordinates\r\n              },\r\n              attributes: {\r\n                ...feature.properties,\r\n                id: index, // 为每个要素生成唯一的ID\r\n                routeType: isNoGlareRoute ? '耗时少路径' : '无眩光路径' // 添加路线类型\r\n              }\r\n            }\r\n          })\r\n          const sortedRoads = Object.entries(roadLengths)\r\n            .sort((a, b) => b[1].length - a[1].length || a[1].order - b[1].order)\r\n          const topPassRoads = sortedRoads.slice(0, 3).map(road => road[0]).join('->')\r\n\r\n          const geojsonLayer = new FeatureLayer({ // 创建FeatureLayer图层\r\n            title: isNoGlareRoute ? '耗时少路径' : '无眩光路径',\r\n            source: features,\r\n            renderer: {\r\n              type: 'simple', // 使用简单渲染器\r\n              title: isNoGlareRoute ? '耗时少路径' : '无眩光路径',\r\n              symbol: {\r\n                type: 'simple-line', // 使用简单线符号\r\n                color: color, // 使用传入的颜色\r\n                width: isNoGlareRoute ? 4.5 : 3 // 根据是否为无眩光路径设置宽度\r\n              }\r\n            },\r\n            objectIdField: 'id', // 必须指定一个唯一的字段作为ObjectId\r\n            fields: [\r\n              { name: 'id', type: 'oid' },\r\n              { name: 'seq', type: 'integer' },\r\n              { name: 'path_seq', type: 'integer' },\r\n              { name: 'node', type: 'integer' },\r\n              { name: 'edge', type: 'integer' },\r\n              { name: 'cost', type: 'double' },\r\n              { name: 'agg_cost', type: 'double' },\r\n              { name: 'length', type: 'double' },\r\n              { name: 'name', type: 'string' },\r\n              { name: 'maxspeed', type: 'integer' },\r\n              { name: 'routeType', type: 'string' } // 添加routeType字段\r\n            ],\r\n            popupTemplate: {\r\n              title: '{routeType} - {name}', // 显示路线类型和路名\r\n              content: [\r\n                {\r\n                  type: 'text',\r\n                  text: `总距离: ${(totalLength / 1000).toFixed(2)} km<br>总耗时: ${(totalCost / 3600).toFixed(2)} 小时`\r\n                },\r\n                {\r\n                  type: 'fields',\r\n                  fieldInfos: [\r\n                    {\r\n                      fieldName: 'length',\r\n                      label: '长度（米）'\r\n                    },\r\n                    {\r\n                      fieldName: 'cost',\r\n                      label: '耗时（秒）'\r\n                    },\r\n                    {\r\n                      fieldName: 'maxspeed',\r\n                      label: '最大速度'\r\n                    },\r\n                    {\r\n                      fieldName: 'name',\r\n                      label: '名称'\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          })\r\n          const rawGeojsonLayer = markRaw(geojsonLayer)\r\n          map.layers.add(rawGeojsonLayer)\r\n          if (totalCost < 3600) {\r\n            totalCost += 60\r\n          }\r\n          const hours = Math.floor(totalCost / 3600)\r\n          const minutes = Math.floor((totalCost % 3600) / 60)\r\n          let distance\r\n          if (totalLength < 1000) {\r\n            distance = `${totalLength.toFixed(2)}米`\r\n          } else {\r\n            distance = `${(totalLength / 1000).toFixed(2)}千米`\r\n          }\r\n          // 根据是否为无眩光路径来存储结果\r\n          if (isNoGlareRoute) {\r\n            this.noGlareTotalHours = hours\r\n            console.log('Hours:', hours)\r\n            this.noGlareTotalMinutes = minutes\r\n            this.noGlareTotalDistance = distance\r\n            this.noGlareTotalPass = topPassRoads\r\n            this.routeLayers.noGlareRouteId = geojsonLayer\r\n          } else {\r\n            this.totalHours = hours\r\n            this.totalMinutes = minutes\r\n            this.totalDistance = distance\r\n            this.totalPass = topPassRoads\r\n            this.routeLayers.defaultRouteId = geojsonLayer\r\n          }\r\n        })\r\n        .catch(error => console.error('Error loading the geojson file:', error))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style src=\"@/assets/share_css/routeplanning.css\">\r\n\r\n</style>\r\n","import { render } from \"./RouteViewsw.vue?vue&type=template&id=490fad7c\"\nimport script from \"./RouteViewsw.vue?vue&type=script&lang=js\"\nexport * from \"./RouteViewsw.vue?vue&type=script&lang=js\"\n\nimport \"@/assets/share_css/routeplanning.css?vue&type=style&index=0&lang=css&external\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["handleKeydown","context","event","searchResults","length","searchQueryStart","key","preventDefault","highlightedIndex","nextTick","highlightedElement","$refs","searchResultsStart","querySelector","scrollIntoView","block","behavior","selectResult","searchResultsEnd","searchQueryEnd","updateTime","now","Date","currentTime","String","getHours","padStart","getMinutes","isTimeFromUrl","selectedTime","clc1","clc2","isDateDisabled","date","selected","month","getMonth","day","getDate","handleDateChange","target","value","alert","selectedDate","onTimeInputChange","hours","minutes","split","map","Number","roundedMinutes","Math","floor","onSearchInputChange","isStart","query","searchResultsField","includes","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","parseUrlParams","urlParams","URLSearchParams","window","location","search","startParam","get","endParam","dateParam","timeParam","defaultRouteIdParam","timeBasedRouteIdParam","startObj","parse","decodeURIComponent","address","name","e","endObj","defaultRouteId","timeBasedRouteId","created","toggleRouteList","isRouteListVisible","getColor","index","highlightRoute","routeId","highlightedRouteId","resetRouteStyle","blinkingTimers","clearInterval","layer","routeLayers","color","highlightedColor","newRenderer","type","title","symbol","width","renderer","startBlinking","isBlinkOn","originalColor","noGlareRouteId","noGlareColor","defaultColor","intervalId","setInterval","highlightedBlinkColor","setTimeout","finalRenderer","isNoGlare","result","simplifiedResult","wgs84_latitude","wgs84_longitude","baidu_index","baidu_latitude","baidu_longitude","id","label","currentStart","selectedResultStart","currentEnd","selectedResultEnd","$router","push","path","start","end","time","BasemapLayer","BasemapName","swap","isSwapping","tempQuery","tempResult","onSearch","initMap","class","ref","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","src","_imports_0","_hoisted_4","onClick","_cache","args","$options","require","alt","_hoisted_5","_hoisted_6","_imports_1","$event","$data","onInput","placeholder","_hoisted_7","_imports_2","_hoisted_8","_renderList","_normalizeClass","_hoisted_9","_createCommentVNode","_hoisted_10","_imports_3","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","isLoading","_hoisted_15","ismaploading","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","for","min","minDate","max","maxDate","onChange","_hoisted_20","formattedTime","step","_createVNode","_Transition","default","_withCtx","_hoisted_21","_hoisted_22","style","_normalizeStyle","_hoisted_23","_toDisplayString","totalHours","totalMinutes","_createTextVNode","totalDistance","_hoisted_24","totalPass","_hoisted_25","noGlareTotalHours","noGlareTotalMinutes","noGlareTotalDistance","_hoisted_26","noGlareTotalPass","_","mounted","this","$route","addEventListener","beforeUnmount","removeEventListener","computed","methods","Promise","resolve","reject","startWithLocation","endWithLocation","axios","post","defaultRoutePlanId","default_id","timeBasedRoutePlanId","time_based_id","Error","basemapName","Map","basemap","view","MapView","container","center","zoom","constraints","geometry","xmin","ymin","xmax","ymax","minScale","maxScale","rotationEnabled","snapToZoom","basemapGallery","BasemapGallery","source","watch","newBasemap","handleBasemapChange","compass","Compass","scaleBar","ScaleBar","unit","distanceMeasurement2D","DistanceMeasurement2D","unitOptions","metric","nonMetric","iconClass","layerList","LayerList","ui","add","position","move","graphicsLayer","GraphicsLayer","featureLayer","FeatureLayer","url","outline","popupTemplate","content","fieldInfos","fieldName","when","drawPoints","adjustView","drawRoutes","err","basemapMapping","set","history","replaceState","pathname","padding","extent","Extent","goTo","startPoint","Point","longitude","latitude","endPoint","startGraphic","Graphic","size","attributes","endGraphic","addMany","fetchAndDrawRoute","isNoGlareRoute","geojsonUrl","totalLength","totalCost","roadLengths","features","feature","properties","cost","order","paths","coordinates","routeType","sortedRoads","Object","entries","sort","a","b","topPassRoads","slice","road","join","geojsonLayer","objectIdField","fields","text","toFixed","rawGeojsonLayer","markRaw","layers","distance","__exports__","render"],"sourceRoot":""}