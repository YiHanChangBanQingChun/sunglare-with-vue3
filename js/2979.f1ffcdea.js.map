{"version":3,"file":"js/2979.f1ffcdea.js","mappings":"+XAI8a,IAAIA,EAAE,cAAcC,EAAAA,GAAEC,WAAAA,CAAYC,GAAGC,MAAMD,GAAGE,KAAKC,WAAW,GAAGD,KAAKE,oBAAoB,KAAKF,KAAKG,eAAe,KAAKH,KAAKI,iBAAiB,IAAI,CAACC,MAAAA,GAAS,MAAMP,EAAEE,KAAKC,WAAWK,KAAKR,GAAGA,EAAEO,WAAWT,EAAEI,KAAKC,WAAW,GAAGM,EAAE,CAAC,EAAE,OAAOA,EAAEC,MAAMR,KAAKE,oBAAoBO,MAAMC,KAAKC,UAAUX,KAAKE,oBAAoBG,UAAUE,EAAEK,KAAKhB,EAAEiB,iBAAiBJ,MAAMC,KAAKC,UAAUf,EAAEiB,iBAAiBR,UAAUE,EAAEN,WAAWS,KAAKC,UAAU,CAACG,cAAaC,EAAAA,EAAAA,IAAEnB,GAAGK,WAAWH,IAAIE,KAAKG,iBAAiBI,EAAEJ,eAAeH,KAAKG,eAAeM,MAAMC,KAAKC,UAAUX,KAAKG,iBAAiB,MAAMH,KAAKI,mBAAmBG,EAAEH,iBAAiBJ,KAAKI,kBAAkBG,CAAC,IAAGT,EAAAA,EAAAA,GAAE,EAACS,EAAAA,EAAAA,OAAKZ,EAAEqB,UAAU,kBAAa,IAAQlB,EAAAA,EAAAA,GAAE,EAACS,EAAAA,EAAAA,IAAE,CAACU,KAAK,CAACC,KAAK,CAACC,OAAO,aAAaxB,EAAEqB,UAAU,2BAAsB,IAAQlB,EAAAA,EAAAA,GAAE,EAACS,EAAAA,EAAAA,OAAKZ,EAAEqB,UAAU,sBAAiB,IAAQlB,EAAAA,EAAAA,GAAE,EAACS,EAAAA,EAAAA,OAAKZ,EAAEqB,UAAU,wBAAmB,GAAQrB,GAAEG,EAAAA,EAAAA,GAAE,EAACsB,EAAAA,EAAAA,GAAE,4CAA4CzB,GAAG,MAAM0B,EAAE1B,ECA1/BA,GAAEY,EAAAA,EAAAA,IAAEe,GAAGC,eAAeC,EAAEjB,EAAEe,EAAEE,GAAGF,EAAE3B,EAAE2B,GAAG,MAAMG,GAAEL,EAAAA,EAAAA,IAAEb,GAAGmB,EAAE,IAAID,EAAEE,MAAMC,EAAE,UAAUN,EAAEjB,UAAUwB,EAAEP,EAAEpB,oBAAoBmB,GAAEzB,EAAAA,EAAAA,IAAE0B,EAAErB,WAAW,IAAI2B,GAAEb,EAAAA,EAAAA,IAAEW,EAAEF,GAAG,OAAO1B,EAAAA,EAAAA,YAAE2B,EAAEK,KAAK,WAAWF,GAAGG,MAAM,EAAEC,MAAM/B,WAAWH,OAAMmC,EAAAA,EAAAA,GAAEnC,EAAEuB,EAAEQ,IAAI,CCAvUN,eAAeC,EAAEjB,EAAE,KAAKZ,GAAG,GAAGG,EAAAA,EAAEoC,mBAAmB,OAAOpC,EAAAA,EAAEoC,mBAAmB,IAAI3B,EAAE,MAAM,IAAIa,EAAAA,EAAE,gDAAgD,IAAII,EAAEA,EAAE,WAAWjB,EAAEA,EAAE4B,QAAQvC,EAAAA,EAAEwC,aAAa7B,QAAQiB,EAAEa,KAAK,CAACC,OAAO3C,IAAI,MAAM0B,EAAEG,EAAEe,gBAAgBC,UAAUC,IAAI,IAAIpB,EAAE,MAAM,IAAID,EAAAA,EAAE,gDAAgD,OAAOC,CAAC,CAACE,eAAeF,EAAEvB,EAAEF,EAAEyB,EAAE,KAAKqB,GAAG,MAAMhB,QAAQF,EAAEH,EAAEqB,GAAG3B,EAAE,IAAIpB,EAAEoB,EAAEd,WAAW,CAACH,GAAGiB,EAAEb,oBAAoBN,EAAE,MAAM0B,QAAQf,EAAEmB,EAAEX,EAAE,CAACuB,OAAOI,IAAI,GAAGpB,GAAGqB,MAAMC,QAAQtB,IAAI,IAAIA,EAAEuB,OAAO,OAAOvB,EAAE,GAAG,MAAM,IAAIF,EAAAA,EAAE,8CAA8C,C","sources":["webpack://sun-glare-project/./node_modules/@geoscene/core/rest/support/ProjectParameters.js","webpack://sun-glare-project/./node_modules/@geoscene/core/rest/geometryService/project.js","webpack://sun-glare-project/./node_modules/@geoscene/core/portal/support/geometryServiceUtils.js"],"sourcesContent":["/*\r\nAll material copyright GeoScene, All Rights Reserved, unless otherwise specified.\r\nSee https://js.geoscene.cn/4.27/geoscene/copyright.txt for details.\r\n*/\r\nimport{_ as r}from\"../../chunks/tslib.es6.js\";import{JSONSupport as t}from\"../../core/JSONSupport.js\";import{property as o}from\"../../core/accessorSupport/decorators/property.js\";import\"../../core/accessorSupport/ensureType.js\";import\"../../core/arrayUtils.js\";import\"../../core/has.js\";import{subclass as e}from\"../../core/accessorSupport/decorators/subclass.js\";import{getJsonType as s}from\"../../geometry/support/jsonUtils.js\";let i=class extends t{constructor(r){super(r),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const r=this.geometries.map((r=>r.toJSON())),t=this.geometries[0],o={};return o.outSR=this.outSpatialReference.wkid||JSON.stringify(this.outSpatialReference.toJSON()),o.inSR=t.spatialReference.wkid||JSON.stringify(t.spatialReference.toJSON()),o.geometries=JSON.stringify({geometryType:s(t),geometries:r}),this.transformation&&(o.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),null!=this.transformForward&&(o.transformForward=this.transformForward),o}};r([o()],i.prototype,\"geometries\",void 0),r([o({json:{read:{source:\"outSR\"}}})],i.prototype,\"outSpatialReference\",void 0),r([o()],i.prototype,\"transformation\",void 0),r([o()],i.prototype,\"transformForward\",void 0),i=r([e(\"geoscene.rest.support.ProjectParameters\")],i);const a=i;export{a as default};","/*\r\nAll material copyright GeoScene, All Rights Reserved, unless otherwise specified.\r\nSee https://js.geoscene.cn/4.27/geoscene/copyright.txt for details.\r\n*/\r\nimport r from\"../../request.js\";import{ensureType as o}from\"../../core/accessorSupport/ensureType.js\";import{getJsonType as t}from\"../../geometry/support/jsonUtils.js\";import{parseUrl as e,asValidOptions as s}from\"../utils.js\";import{decodeGeometries as p}from\"./utils.js\";import m from\"../support/ProjectParameters.js\";const i=o(m);async function n(o,m,n){m=i(m);const u=e(o),c={...u.query,f:\"json\",...m.toJSON()},j=m.outSpatialReference,a=t(m.geometries[0]),f=s(c,n);return r(u.path+\"/project\",f).then((({data:{geometries:r}})=>p(r,a,j)))}export{n as project};","/*\r\nAll material copyright GeoScene, All Rights Reserved, unless otherwise specified.\r\nSee https://js.geoscene.cn/4.27/geoscene/copyright.txt for details.\r\n*/\r\nimport r from\"../../config.js\";import e from\"../../core/Error.js\";import t from\"../Portal.js\";import{project as o}from\"../../rest/geometryService/project.js\";import i from\"../../rest/support/ProjectParameters.js\";async function n(o=null,i){if(r.geometryServiceUrl)return r.geometryServiceUrl;if(!o)throw new e(\"internal:geometry-service-url-not-configured\");let n;n=\"portal\"in o?o.portal||t.getDefault():o,await n.load({signal:i});const a=n.helperServices?.geometry?.url;if(!a)throw new e(\"internal:geometry-service-url-not-configured\");return a}async function a(r,t,a=null,l){const c=await n(a,l),s=new i;s.geometries=[r],s.outSpatialReference=t;const m=await o(c,s,{signal:l});if(m&&Array.isArray(m)&&1===m.length)return m[0];throw new e(\"internal:geometry-service-projection-failed\")}export{n as getGeometryServiceURL,a as projectGeometry};"],"names":["i","t","constructor","r","super","this","geometries","outSpatialReference","transformation","transformForward","toJSON","map","o","outSR","wkid","JSON","stringify","inSR","spatialReference","geometryType","s","prototype","json","read","source","e","a","m","async","n","u","c","query","f","j","path","then","data","p","geometryServiceUrl","portal","getDefault","load","signal","helperServices","geometry","url","l","Array","isArray","length"],"sourceRoot":""}