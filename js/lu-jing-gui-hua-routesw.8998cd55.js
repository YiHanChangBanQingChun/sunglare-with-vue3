"use strict";(self["webpackChunksun_glare_project"]=self["webpackChunksun_glare_project"]||[]).push([[3256],{55145:function(e,t,i){i.r(t),i.d(t,{default:function(){return ie}});var a=i(56768),s=i(45130),l=i(24232),o=i(34739),n=i(1592),r=i(9239),d=i(74963);const c={class:"lu-jing-gui-hua"},u={class:"search-containers"},h={class:"revert-containers"},m={class:"swap-action"},p=["src"],g={class:"search-container start"},y={class:"search-box-img"},w={key:0,class:"search-results",ref:"searchResultsStart"},f=["onClick"],k={class:"search-container end"},v={class:"search-box-img"},b={key:0,class:"search-results",ref:"searchResultsEnd"},L=["onClick"],R=["src"],x={key:0,class:"loader-overlay"},C={key:0,class:"maploader-overlay"},S={class:"main-container"},E={class:"choose-time"},_={class:"form-group"},N=["min","max"],T={class:"routelist"},D={class:"cardlist"},I={class:"intro"},G={class:"intro"},$={class:"intro"},A={class:"intro"};function M(e,t,M,B,j,q){return(0,a.uX)(),(0,a.CE)(a.FK,null,[(0,a.Lk)("div",c,[(0,a.Lk)("div",u,[(0,a.Lk)("div",h,[t[16]||(t[16]=(0,a.Lk)("div",{class:"car"},[(0,a.Lk)("img",{src:o})],-1)),(0,a.Lk)("div",m,[(0,a.Lk)("button",{onClick:t[0]||(t[0]=(...e)=>q.swap&&q.swap(...e)),title:"切换起终点"},[(0,a.Lk)("img",{src:i(23497),alt:"",class:"revert"},null,8,p)])])]),(0,a.Lk)("div",g,[t[18]||(t[18]=(0,a.Lk)("div",{class:"search-icon-wrapper"},[(0,a.Lk)("img",{src:n,alt:"pink"})],-1)),(0,a.bo)((0,a.Lk)("input",{type:"text","onUpdate:modelValue":t[1]||(t[1]=e=>j.searchQueryStart=e),onInput:t[2]||(t[2]=e=>q.onSearchInputChange(e,!0)),placeholder:"请输入起点",class:"search-box search-box-start"},null,544),[[s.Jo,j.searchQueryStart]]),(0,a.Lk)("span",y,[(0,a.Lk)("div",{class:"delete",title:"清空",onClick:t[3]||(t[3]=(...e)=>q.clc1&&q.clc1(...e))},t[17]||(t[17]=[(0,a.Lk)("img",{src:r,alt:"delete1"},null,-1)]))]),j.searchResults.length&&j.searchQueryStart?((0,a.uX)(),(0,a.CE)("div",w,[(0,a.Lk)("ul",null,[((0,a.uX)(!0),(0,a.CE)(a.FK,null,(0,a.pI)(j.searchResults,((e,t)=>((0,a.uX)(),(0,a.CE)("li",{key:t,class:(0,l.C4)({highlighted:t===j.highlightedIndex}),onClick:t=>q.selectResult(e,!0)},(0,l.v_)(e.name),11,f)))),128))])],512)):(0,a.Q3)("",!0)]),(0,a.Lk)("div",k,[t[20]||(t[20]=(0,a.Lk)("div",{class:"search-icon-wrapper"},[(0,a.Lk)("img",{src:d,alt:"green"})],-1)),(0,a.bo)((0,a.Lk)("input",{type:"text","onUpdate:modelValue":t[4]||(t[4]=e=>j.searchQueryEnd=e),onInput:t[5]||(t[5]=e=>q.onSearchInputChange(e,!1)),placeholder:"请输入终点",class:"search-box search-box-end"},null,544),[[s.Jo,j.searchQueryEnd]]),(0,a.Lk)("span",v,[(0,a.Lk)("div",{class:"delete",title:"清空",onClick:t[6]||(t[6]=(...e)=>q.clc2&&q.clc2(...e))},t[19]||(t[19]=[(0,a.Lk)("img",{src:r,alt:"delete1"},null,-1)]))]),j.searchResultsEnd.length&&j.searchQueryEnd?((0,a.uX)(),(0,a.CE)("div",b,[(0,a.Lk)("ul",null,[((0,a.uX)(!0),(0,a.CE)(a.FK,null,(0,a.pI)(j.searchResultsEnd,((e,t)=>((0,a.uX)(),(0,a.CE)("li",{key:t,class:(0,l.C4)({highlighted:t===j.highlightedIndex}),onClick:t=>q.selectResult(e,!1)},(0,l.v_)(e.name),11,L)))),128))])],512)):(0,a.Q3)("",!0)]),(0,a.Lk)("div",{class:"search-action",onClick:t[7]||(t[7]=(...e)=>q.onSearch&&q.onSearch(...e)),title:"搜索"},[(0,a.Lk)("img",{src:i(8105),alt:"",class:"search"},null,8,R)]),j.isLoading?((0,a.uX)(),(0,a.CE)("div",x,t[21]||(t[21]=[(0,a.Lk)("div",{class:"loader"},null,-1)]))):(0,a.Q3)("",!0)])]),t[28]||(t[28]=(0,a.Lk)("div",{id:"viewDiv"},null,-1)),j.ismaploading?((0,a.uX)(),(0,a.CE)("div",C,t[22]||(t[22]=[(0,a.Lk)("div",{class:"maploader"},null,-1)]))):(0,a.Q3)("",!0),(0,a.Lk)("div",S,[(0,a.Lk)("div",E,[(0,a.Lk)("div",_,[t[23]||(t[23]=(0,a.Lk)("label",{for:"date-input"},"选择日期：",-1)),(0,a.bo)((0,a.Lk)("input",{id:"date-input",type:"date","onUpdate:modelValue":t[8]||(t[8]=e=>j.selectedDate=e),min:q.minDate,max:q.maxDate,class:(0,l.C4)({"invalid-date":q.isDateDisabled(j.selectedDate)}),onChange:t[9]||(t[9]=(...e)=>q.handleDateChange&&q.handleDateChange(...e))},null,42,N),[[s.Jo,j.selectedDate]]),t[24]||(t[24]=(0,a.Lk)("label",{for:"time-input"},"选择时间：",-1)),(0,a.bo)((0,a.Lk)("input",{id:"time-input",type:"time","onUpdate:modelValue":t[10]||(t[10]=e=>q.formattedTime=e),onInput:t[11]||(t[11]=(...e)=>q.onTimeInputChange&&q.onTimeInputChange(...e)),step:"600"},null,544),[[s.Jo,q.formattedTime]])])]),(0,a.Lk)("div",null,[(0,a.bF)(s.eB,{name:"fade"},{default:(0,a.k6)((()=>[(0,a.bo)((0,a.Lk)("div",T,[(0,a.Lk)("ul",D,[(0,a.Lk)("div",{class:"route","data-index":"1",onClick:t[12]||(t[12]=e=>q.highlightRoute("noGlareRouteId"))},[(0,a.Lk)("div",{class:"introduction",style:(0,l.Tr)({color:q.getColor(1)})},"无眩光路径",4),(0,a.Lk)("p",I,[(0,a.Lk)("span",null,"用时："+(0,l.v_)(j.totalHours)+"小时"+(0,l.v_)(j.totalMinutes)+"分钟",1),t[25]||(t[25]=(0,a.eW)(" | ")),(0,a.Lk)("span",null,"路长："+(0,l.v_)(j.totalDistance),1)]),(0,a.Lk)("p",G,[(0,a.Lk)("span",null,"途径："+(0,l.v_)(j.totalPass),1)])]),(0,a.Lk)("div",{class:"route","data-index":"0",onClick:t[13]||(t[13]=e=>q.highlightRoute("defaultRouteId"))},[(0,a.Lk)("div",{class:"introduction",style:(0,l.Tr)({color:q.getColor(0)})},"常规路径",4),(0,a.Lk)("p",$,[(0,a.Lk)("span",null,"用时："+(0,l.v_)(j.noGlareTotalHours)+"小时"+(0,l.v_)(j.noGlareTotalMinutes)+"分钟",1),t[26]||(t[26]=(0,a.eW)(" | ")),(0,a.Lk)("span",null,"路长："+(0,l.v_)(j.noGlareTotalDistance),1)]),(0,a.Lk)("p",A,[(0,a.Lk)("span",null,"途径："+(0,l.v_)(j.noGlareTotalPass),1)])])]),(0,a.Lk)("span",{class:"toggle-button",onClick:t[14]||(t[14]=(...e)=>q.toggleRouteList&&q.toggleRouteList(...e)),title:"隐藏"},t[27]||(t[27]=[(0,a.Lk)("img",{src:r,alt:"delete1"},null,-1)]))],512),[[s.aG,j.isRouteListVisible]])])),_:1}),j.isRouteListVisible?(0,a.Q3)("",!0):((0,a.uX)(),(0,a.CE)("button",{key:0,onClick:t[15]||(t[15]=(...e)=>q.toggleRouteList&&q.toggleRouteList(...e)),class:"open-button"},"展开路线结果"))])])],64)}i(44114),i(14603),i(47566),i(98721);var B=i(3903),j=i(43487),q=i(11134),Q=i(74036),J=i(58423),V=i(3949),F=i(41759),P=i(94373),X=i(90144),z=i(57829),O=i(95587),U=i(87923),H=i(44432),K=i(50346),W=i(73241),Y=i(51197),Z={name:"RouteView",data(){return{searchQueryStart:"",searchQueryEnd:"",selectedResultStart:null,selectedResultEnd:null,searchResults:[],searchResultsEnd:[],isLoading:!1,ismaploading:!1,totalHours:0,totalMinutes:0,totalDistance:"0千米",selectedDate:"",selectedTime:"",noGlareTotalHours:0,noGlareTotalMinutes:0,highlightedIndex:-1,noGlareTotalDistance:"0千米",highlightedRouteId:null,routeLayers:{},blinkingTimers:{},highlightedColor:[0,123,255,1],highlightedBlinkColor:[0,123,255,.2],noGlareColor:[244,96,108],defaultColor:[25,202,173],noGlareRouteId:"noGlareRouteId",defaultRouteId:"defaultRouteId",isRouteListVisible:!0,totalPass:"",noGlareTotalPass:"",BasemapName:null}},mounted(){this.created(),this.initMap(),this.$route.query.start&&this.$route.query.end&&(this.selectedResultStart=JSON.parse(this.$route.query.start),this.selectedResultEnd=JSON.parse(this.$route.query.end)),(0,W.Dk)(this),window.addEventListener("keydown",this.handleKeydown)},beforeUnmount(){window.removeEventListener("keydown",this.handleKeydown)},computed:{minDate(){return"2024-01-01"},maxDate(){return"2024-12-31"},formattedTime(){if(!this.selectedTime)return"";const[e,t]=this.selectedTime.split(":").map(Number),i=10*Math.floor(t/10);return`${String(e).padStart(2,"0")}:${String(i).padStart(2,"0")}`}},methods:{toggleRouteList(){(0,W.U)(this)},getColor(e){return(0,W.oU)(e)},highlightRoute(e){(0,W.uG)(this,e)},onTimeInputChange(e){(0,Y.Lk)(this,e)},isDateDisabled(e){return(0,Y.zJ)(this,e)},handleDateChange(e){(0,Y.d5)(this,e)},handleKeydown(e){(0,Y.y9)(this,e)},updateTime(){(0,Y.JA)(this)},clc1(){(0,Y.YK)(this)},clc2(){(0,Y.dn)(this)},swap(){(0,W.wg)(this)},onSearchInputChange(e,t){(0,Y.eE)(this,e,t)},selectResult(e,t=!0){(0,W.wf)(this,e,t)},onSearch(){return new Promise(((e,t)=>{if(this.selectedResultStart&&this.selectedResultEnd){this.isLoading=!0;const i={...this.selectedResultStart,location:[this.selectedResultStart.wgs84_longitude,this.selectedResultStart.wgs84_latitude]},a={...this.selectedResultEnd,location:[this.selectedResultEnd.wgs84_longitude,this.selectedResultEnd.wgs84_latitude]},s=5===this.selectedTime.length?`${this.selectedTime}:00`:this.selectedTime;P.A.post("https://dce4-2001-da8-2019-b282-14c-86be-f57b-b795.ngrok-free.app/api/route/plan",{start:i,end:a,date:this.selectedDate,time:s}).then((t=>{const l=t.data.default_id,o=t.data.time_based_id;this.isLoading=!1,this.$router.push({path:"/lu-jing-gui-hua/route",query:{start:JSON.stringify(i),end:JSON.stringify(a),default_id:l,time_based_id:o,date:this.selectedDate,time:s,BasemapLayer:this.BasemapName}}),this.searchQueryStart=i.name,this.searchQueryEnd=a.name,e()})).catch((e=>{console.error(e),this.isLoading=!1,alert("路径规划失败，请稍后再试。"),t(e)}))}else alert("请确保起点和终点都已选择。"),t(new Error("请确保起点和终点都已选择。"))}))},initMap(e){const t=new B.A({basemap:e||this.BasemapName||"tianditu-vector"});this.map=t,this.view=new j.A({container:"viewDiv",map:t,center:[114.3,30.7],zoom:4,constraints:{geometry:{type:"extent",xmin:113.6,ymin:29.9,xmax:115,ymax:31.3},minScale:500,maxScale:2e6,rotationEnabled:!1,snapToZoom:!1}});const i=new z.A({view:this.view,source:{query:{title:'"Basemaps for Developers" AND owner:geoscenedev'}}});i.watch("activeBasemap",(e=>{this.handleBasemapChange(e)}));const a=new O.A({view:this.view}),s=new U.A({view:this.view,unit:"metric",style:"ruler"}),l=new H.A({view:this.view,unit:"metric",unitOptions:{metric:["kilometers","meters"],nonMetric:["miles","feet"]},iconClass:"esri-icon-measure-line"}),o=new K.A({view:this.view});this.view.ui.add(l,{position:"bottom-leading",index:0}),this.view.ui.add(i,{position:"bottom-right",index:0}),this.view.ui.add(o,{position:"bottom-right",index:1}),this.view.ui.move("zoom",{position:"bottom-left",index:1}),this.view.ui.add(a,{position:"bottom-left",index:2}),this.view.ui.add(s,{position:"bottom-left",index:3});const n=new J.A({title:"起点与终点"});t.add(n);const r=new V["default"]({url:"https://www.geosceneonline.cn/server/rest/services/Hosted/wuhan_village/FeatureServer",title:"武汉县区面",renderer:{type:"simple",title:"县区边界",symbol:{type:"simple-fill",color:[0,0,0,0],outline:{color:[0,0,0,1],width:1}}},popupTemplate:{content:[{type:"fields",fieldInfos:[{fieldName:"县区name",label:"县区名称"}]}]}});t.add(r),t.add(n),this.view.when((()=>{this.drawPoints(n),this.adjustView(),this.drawRoutes(t)})).catch((e=>{console.error("MapView initialization error:",e)}))},handleBasemapChange(e){const t={"天地图-矢量（球面墨卡托投影）":"tianditu-vector","天地图-影像（球面墨卡托投影）":"tianditu-image","天地图-地形（球面墨卡托投影）":"tianditu-topography"};t[e.title]?this.BasemapName=t[e.title]:this.BasemapName=e.title;const i=new URLSearchParams(window.location.search);i.set("BasemapLayer",this.BasemapName),window.history.replaceState({},"",`${window.location.pathname}?${i}`)},created(){const e=this.$route.query.BasemapLayer,t={"天地图-矢量（球面墨卡托投影）":"tianditu-vector","天地图-影像（球面墨卡托投影）":"tianditu-image","天地图-地形（球面墨卡托投影）":"tianditu-topography","天地图-矢量（含注记）（球面墨卡托投影）":"tianditu-vector"};e&&(t[e]?this.BasemapName=t[e]:this.BasemapName=e)},adjustView(){if(this.selectedResultStart&&this.selectedResultEnd){const e=.01,t=new F.A({xmin:Math.min(this.selectedResultStart.location[0],this.selectedResultEnd.location[0])-10*e,ymin:Math.min(this.selectedResultStart.location[1],this.selectedResultEnd.location[1])-10*e,xmax:Math.max(this.selectedResultStart.location[0],this.selectedResultEnd.location[0])+10*e,ymax:Math.max(this.selectedResultStart.location[1],this.selectedResultEnd.location[1])+10*e});this.view.goTo(t).catch((e=>{console.error("Error adjusting view:",e)}))}else this.selectedResultStart?this.view.goTo({center:[this.selectedResultStart.location[0],this.selectedResultStart.location[1]],zoom:10}).catch((e=>{console.error("Error adjusting view:",e)})):this.selectedResultEnd&&this.view.goTo({center:[this.selectedResultEnd.location[0],this.selectedResultEnd.location[1]],zoom:10}).catch((e=>{console.error("Error adjusting view:",e)}))},drawPoints(e){if(!this.$route.query.start||!this.$route.query.end)return void console.error("Start or end point is undefined.");const t=JSON.parse(this.$route.query.start),i=JSON.parse(this.$route.query.end);if(!t.location||!i.location)return void console.error("Start or end point does not have a location.");const a=new Q.A({longitude:t.location[0],latitude:t.location[1]}),s=new Q.A({longitude:i.location[0],latitude:i.location[1]}),l=new q.A({geometry:a,title:"起点",symbol:{type:"simple-marker",color:"red",size:"20px"},popupTemplate:{title:"起点信息",content:[{type:"fields",fieldInfos:[{fieldName:"address",label:"地址"},{fieldName:"name",label:"名称"},{fieldName:"wgs84_latitude",label:"WGS84纬度"},{fieldName:"wgs84_longitude",label:"WGS84经度"},{fieldName:"baidu_index",label:"百度索引"},{fieldName:"baidu_latitude",label:"百度纬度"},{fieldName:"baidu_longitude",label:"百度经度"},{fieldName:"id",label:"ID"},{fieldName:"label",label:"标签"}]}]},attributes:t}),o=new q.A({geometry:s,title:"终点",symbol:{type:"simple-marker",color:"green",size:"20px"},popupTemplate:{title:"终点信息",content:[{type:"fields",fieldInfos:[{fieldName:"address",label:"地址"},{fieldName:"name",label:"名称"},{fieldName:"wgs84_latitude",label:"WGS84纬度"},{fieldName:"wgs84_longitude",label:"WGS84经度"},{fieldName:"baidu_index",label:"百度索引"},{fieldName:"baidu_latitude",label:"百度纬度"},{fieldName:"baidu_longitude",label:"百度经度"},{fieldName:"id",label:"ID"},{fieldName:"label",label:"标签"}]}]},attributes:i});e.addMany([l,o])},drawRoutes(e){const t=this.$route.query.default_id,i=this.$route.query.time_based_id;t||i?(t&&this.fetchAndDrawRoute(e,t,[25,202,173],!0),i&&this.fetchAndDrawRoute(e,i,[244,96,108])):console.error("Route IDs are undefined.")},fetchAndDrawRoute(e,t,i,a=!1){const s=`https://dce4-2001-da8-2019-b282-14c-86be-f57b-b795.ngrok-free.app/api/get_geojson/${t}`;fetch(s).then((e=>e.json())).then((t=>{let s=0,l=0;const o={},n=t.features.map(((e,t)=>(99999!==e.properties.cost&&(s+=e.properties.length,l+=e.properties.cost),e.properties.name.includes("未知")||(o[e.properties.name]||(o[e.properties.name]={length:0,order:t}),o[e.properties.name].length+=e.properties.length),{geometry:{type:"polyline",paths:e.geometry.coordinates},attributes:{...e.properties,id:t,routeType:a?"耗时少路径":"无眩光路径"}}))),r=Object.entries(o).sort(((e,t)=>t[1].length-e[1].length||e[1].order-t[1].order)),d=r.slice(0,3).map((e=>e[0])).join("->"),c=new V["default"]({title:a?"耗时少路径":"无眩光路径",source:n,renderer:{type:"simple",title:a?"耗时少路径":"无眩光路径",symbol:{type:"simple-line",color:i,width:a?4.5:3}},objectIdField:"id",fields:[{name:"id",type:"oid"},{name:"seq",type:"integer"},{name:"path_seq",type:"integer"},{name:"node",type:"integer"},{name:"edge",type:"integer"},{name:"cost",type:"double"},{name:"agg_cost",type:"double"},{name:"length",type:"double"},{name:"name",type:"string"},{name:"maxspeed",type:"integer"},{name:"routeType",type:"string"}],popupTemplate:{title:"{routeType} - {name}",content:[{type:"text",text:`总距离: ${(s/1e3).toFixed(2)} km<br>总耗时: ${(l/3600).toFixed(2)} 小时`},{type:"fields",fieldInfos:[{fieldName:"length",label:"长度（米）"},{fieldName:"cost",label:"耗时（秒）"},{fieldName:"maxspeed",label:"最大速度"},{fieldName:"name",label:"名称"}]}]}}),u=(0,X.IG)(c);e.layers.add(u),l<3600&&(l+=60);const h=Math.floor(l/3600),m=Math.floor(l%3600/60);let p;p=s<1e3?`${s.toFixed(2)}米`:`${(s/1e3).toFixed(2)}千米`,a?(this.noGlareTotalHours=h,this.noGlareTotalMinutes=m,this.noGlareTotalDistance=p,this.noGlareTotalPass=d,this.routeLayers.noGlareRouteId=c):(this.totalHours=h,this.totalMinutes=m,this.totalDistance=p,this.totalPass=d,this.routeLayers.defaultRouteId=c)})).catch((e=>console.error("Error loading the geojson file:",e)))}}},ee=i(71241);const te=(0,ee.A)(Z,[["render",M]]);var ie=te}}]);
//# sourceMappingURL=lu-jing-gui-hua-routesw.8998cd55.js.map