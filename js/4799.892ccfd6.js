"use strict";(self["webpackChunksun_glare_project"]=self["webpackChunksun_glare_project"]||[]).push([[4799],{34799:function(e,t,s){s.r(t),s.d(t,{default:function(){return d}});var i=s(71457),r=s(41879),n=s(89921),a=s(76543),o=(s(37679),s(69292),s(51020),s(29916)),l=s(15235),p=s(48278);let h=class extends((0,l.e)(p.A)){constructor(e){super(e),this.layerViews=new r.A}set layerViews(e){this._set("layerViews",(0,n.V)(e,this._get("layerViews")))}get updatingProgress(){return 0===this.layerViews.length?1:this.layerViews.reduce(((e,t)=>e+t.updatingProgress),0)/this.layerViews.length}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",(()=>this._updateStageChildren())))}detach(){this.container.removeAllChildren()}update(e){}moveStart(){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach(((e,t)=>this.container.addChildAt(e.container,t)))}};(0,i._)([(0,a.MZ)({cast:n.H})],h.prototype,"layerViews",null),(0,i._)([(0,a.MZ)({readOnly:!0})],h.prototype,"updatingProgress",null),h=(0,i._)([(0,o.$)("geoscene.views.2d.layers.KnowledgeGraphLayerView2D")],h);const d=h},15235:function(e,t,s){s.d(t,{e:function(){return C}});var i=s(71457),r=s(41879),n=s(89921),a=s(47966),o=s(87400),l=s(76543),p=(s(37679),s(69292),s(51020),s(29916)),h=s(57138),d=s(1110),c=s(28920);let u=class extends c.oY{get version(){return this.commitVersionProperties(),(this._get("version")||0)+1}};(0,i._)([(0,l.MZ)({readOnly:!0})],u.prototype,"version",null),u=(0,i._)([(0,p.$)("geoscene.views.layers.support.ClipArea")],u);const y=u;var g;let v=g=class extends y{constructor(e){super(e),this.type="rect",this.left=null,this.right=null,this.top=null,this.bottom=null}clone(){return new g({left:this.left,right:this.right,top:this.top,bottom:this.bottom})}commitVersionProperties(){this.commitProperty("left"),this.commitProperty("right"),this.commitProperty("top"),this.commitProperty("bottom")}};(0,i._)([(0,l.MZ)({type:[Number,String],json:{write:!0}})],v.prototype,"left",void 0),(0,i._)([(0,l.MZ)({type:[Number,String],json:{write:!0}})],v.prototype,"right",void 0),(0,i._)([(0,l.MZ)({type:[Number,String],json:{write:!0}})],v.prototype,"top",void 0),(0,i._)([(0,l.MZ)({type:[Number,String],json:{write:!0}})],v.prototype,"bottom",void 0),v=g=(0,i._)([(0,p.$)("geoscene.views.layers.support.ClipRect")],v);const w=v;s(2516);var f,m=s(88679),_=s(55772),b=s(41759),R=s(9737);const S={base:m.A,key:"type",typeMap:{extent:b.A,polygon:R.A}};let M=f=class extends y{constructor(e){super(e),this.type="geometry",this.geometry=null}clone(){return new f({geometry:this.geometry?.clone()??null})}commitVersionProperties(){this.commitProperty("geometry")}};(0,i._)([(0,l.MZ)({types:S,json:{read:_.rS,write:!0}})],M.prototype,"geometry",void 0),M=f=(0,i._)([(0,p.$)("geoscene.views.layers.support.Geometry")],M);const A=M;let Z=class extends y{constructor(e){super(e),this.type="path",this.path=[]}commitVersionProperties(){this.commitProperty("path")}};(0,i._)([(0,l.MZ)({type:[[[Number]]],json:{write:!0}})],Z.prototype,"path",void 0),Z=(0,i._)([(0,p.$)("geoscene.views.layers.support.Path")],Z);const V=Z,P=r.A.ofType({key:"type",base:null,typeMap:{rect:w,path:V,geometry:A}}),C=e=>{let t=class extends e{constructor(){super(...arguments),this.attached=!1,this.clips=new P,this.lastUpdateId=-1,this.moving=!1,this.updateRequested=!1,this.visibleAtCurrentScale=!1,this.highlightOptions=null}initialize(){const e=this.view?.spatialReferenceLocked??!0,t=this.view?.spatialReference;t&&e&&!this.spatialReferenceSupported?this.addResolvingPromise(Promise.reject(new a.A("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer}))):(this.container||(this.container=new h.m),this.container.fadeTransitionEnabled=!0,this.container.visible=!1,this.container.endTransitions(),this.addHandles([(0,o.wB)((()=>this.suspended),(e=>{this.container&&(this.container.visible=!e),this.view&&!e&&this.updateRequested&&this.view.requestUpdate()}),o.pc),(0,o.wB)((()=>this.layer?.opacity??1),(e=>{this.container&&(this.container.opacity=e)}),o.pc),(0,o.wB)((()=>this.layer&&"blendMode"in this.layer?this.layer.blendMode:"normal"),(e=>{this.container&&(this.container.blendMode=e)}),o.pc),(0,o.wB)((()=>this.layer&&"effect"in this.layer?this.layer.effect:null),(e=>{this.container&&(this.container.effect=e)}),o.pc),(0,o.wB)((()=>this.highlightOptions),(e=>this.container.highlightOptions=e),o.pc),(0,o.on)((()=>this.clips),"change",(()=>{this.container&&(this.container.clips=this.clips)}),o.pc),(0,o.wB)((()=>({scale:this.view?.scale,scaleRange:this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null})),(({scale:e})=>{const t=null!=e&&this.isVisibleAtScale(e);t!==this.visibleAtCurrentScale&&this._set("visibleAtCurrentScale",t)}),o.pc)],"constructor"),this.view?.whenLayerView?this.view.whenLayerView(this.layer).then((e=>{e===this&&this.processAttach()}),(()=>{})):this.when().then((()=>{this.processAttach()}),(()=>{})))}destroy(){this.processDetach(),this.updateRequested=!1}get spatialReferenceSupported(){const e=this.view?.spatialReference;return null==e||this.supportsSpatialReference(e)}get updating(){return this.spatialReferenceSupported&&(!this.attached||!this.suspended&&(this.updateRequested||this.isUpdating())||!!this.updatingHandles?.updating)}processAttach(){this.isResolved()&&!this.attached&&!this.destroyed&&this.spatialReferenceSupported&&(this.attach(),this.attached=!0,this.requestUpdate())}processDetach(){this.attached&&(this.attached=!1,this.removeHandles("attach"),this.detach(),this.updateRequested=!1)}isVisibleAtScale(e){const t=this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null;if(!t)return!0;const{minScale:s,maxScale:i}=t;return(0===s||e<=s)&&(0===i||e>=i)}requestUpdate(){this.destroyed||this.updateRequested||(this.updateRequested=!0,this.suspended||this.view.requestUpdate())}processUpdate(e){!this.isFulfilled()||this.isResolved()?(this._set("updateParameters",e),this.updateRequested&&!this.suspended&&(this.updateRequested=!1,this.update(e))):this.updateRequested=!1}hitTest(e,t){return Promise.resolve(null)}supportsSpatialReference(e){return!0}canResume(){return!!this.spatialReferenceSupported&&!!super.canResume()&&this.visibleAtCurrentScale}getSuspendInfo(){const e=super.getSuspendInfo(),t=!this.spatialReferenceSupported,s=this.visibleAtCurrentScale;return t&&(e.spatialReferenceNotSupported=t),s&&(e.outsideScaleRange=s),e}addAttachHandles(e){this.addHandles(e,"attach")}};return(0,i._)([(0,l.MZ)()],t.prototype,"attached",void 0),(0,i._)([(0,l.MZ)({type:P,set(e){const t=(0,n.V)(e,this._get("clips"),P);this._set("clips",t)}})],t.prototype,"clips",void 0),(0,i._)([(0,l.MZ)()],t.prototype,"container",void 0),(0,i._)([(0,l.MZ)()],t.prototype,"moving",void 0),(0,i._)([(0,l.MZ)({readOnly:!0})],t.prototype,"spatialReferenceSupported",null),(0,i._)([(0,l.MZ)({readOnly:!0})],t.prototype,"updateParameters",void 0),(0,i._)([(0,l.MZ)()],t.prototype,"updateRequested",void 0),(0,i._)([(0,l.MZ)()],t.prototype,"updating",null),(0,i._)([(0,l.MZ)()],t.prototype,"view",void 0),(0,i._)([(0,l.MZ)({readOnly:!0})],t.prototype,"visibleAtCurrentScale",void 0),(0,i._)([(0,l.MZ)({type:d.A})],t.prototype,"highlightOptions",void 0),t=(0,i._)([(0,p.$)("geoscene.views.2d.layers.LayerView2D")],t),t}},48278:function(e,t,s){s.d(t,{A:function(){return u}});var i=s(71457),r=s(3734),n=s(20573),a=s(45477),o=s(49778),l=s(15114),p=s(80473),h=s(76543),d=(s(37679),s(69292),s(51020),s(29916));let c=class extends((0,a.$)((0,o.sA)((0,p.g)(n.A.EventedMixin(r.A))))){constructor(e){super(e),this.layer=null,this.parent=null}initialize(){this.when().catch((e=>{if("layerview:create-error"!==e.name){const t=this.layer&&this.layer.id||"no id",s=this.layer&&this.layer.title||"no title";l.A.getLogger(this).error("#resolve()",`Failed to resolve layer view (layer title: '${s}', id: '${t}')`,e)}}))}get fullOpacity(){return(this.layer?.opacity??1)*(this.parent?.fullOpacity??1)}get suspended(){return!this.canResume()}get suspendInfo(){return this.getSuspendInfo()}get legendEnabled(){return!this.suspended&&!0===this.layer?.legendEnabled}get updating(){return!(!this.updatingHandles?.updating&&!this.isUpdating())}get updatingProgress(){return this.updating?0:1}get visible(){return!0===this.layer?.visible}set visible(e){this._overrideIfSome("visible",e)}canResume(){return this.visible&&this.layer?.loaded&&!this.parent?.suspended&&this.view?.ready||!1}getSuspendInfo(){const e=this.parent&&this.parent.suspended?this.parent.suspendInfo:{},t=this;return t.view&&t.view.ready||(e.viewNotReady=!0),this.layer&&this.layer.loaded||(e.layerNotLoaded=!0),this.visible||(e.layerInvisible=!0),e}isUpdating(){return!1}};(0,i._)([(0,h.MZ)()],c.prototype,"fullOpacity",null),(0,i._)([(0,h.MZ)()],c.prototype,"layer",void 0),(0,i._)([(0,h.MZ)()],c.prototype,"parent",void 0),(0,i._)([(0,h.MZ)({readOnly:!0})],c.prototype,"suspended",null),(0,i._)([(0,h.MZ)({readOnly:!0})],c.prototype,"suspendInfo",null),(0,i._)([(0,h.MZ)({readOnly:!0})],c.prototype,"legendEnabled",null),(0,i._)([(0,h.MZ)({type:Boolean,readOnly:!0})],c.prototype,"updating",null),(0,i._)([(0,h.MZ)({readOnly:!0})],c.prototype,"updatingProgress",null),(0,i._)([(0,h.MZ)()],c.prototype,"visible",null),(0,i._)([(0,h.MZ)()],c.prototype,"view",void 0),c=(0,i._)([(0,d.$)("geoscene.views.layers.LayerView")],c);const u=c}}]);
//# sourceMappingURL=4799.892ccfd6.js.map