"use strict";(self["webpackChunksun_glare_project"]=self["webpackChunksun_glare_project"]||[]).push([[2979],{12979:function(e,t,r){r.r(t),r.d(t,{getGeometryServiceURL:function(){return w},projectGeometry:function(){return v}});var o=r(19470),n=r(47966),i=r(67681),s=r(86039),a=r(37679),c=r(55772),l=r(42116),u=r(63504),f=r(71457),p=r(28920),m=r(76543),g=(r(69292),r(51020),r(29916));let y=class extends p.oY{constructor(e){super(e),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const e=this.geometries.map((e=>e.toJSON())),t=this.geometries[0],r={};return r.outSR=this.outSpatialReference.wkid||JSON.stringify(this.outSpatialReference.toJSON()),r.inSR=t.spatialReference.wkid||JSON.stringify(t.spatialReference.toJSON()),r.geometries=JSON.stringify({geometryType:(0,c.$B)(t),geometries:e}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),null!=this.transformForward&&(r.transformForward=this.transformForward),r}};(0,f._)([(0,m.MZ)()],y.prototype,"geometries",void 0),(0,f._)([(0,m.MZ)({json:{read:{source:"outSR"}}})],y.prototype,"outSpatialReference",void 0),(0,f._)([(0,m.MZ)()],y.prototype,"transformation",void 0),(0,f._)([(0,m.MZ)()],y.prototype,"transformForward",void 0),y=(0,f._)([(0,g.$)("geoscene.rest.support.ProjectParameters")],y);const h=y,d=(0,a.dp)(h);async function S(e,t,r){t=d(t);const o=(0,l.Dl)(e),n={...o.query,f:"json",...t.toJSON()},i=t.outSpatialReference,a=(0,c.$B)(t.geometries[0]),f=(0,l.jV)(n,r);return(0,s["default"])(o.path+"/project",f).then((({data:{geometries:e}})=>(0,u.V)(e,a,i)))}async function w(e=null,t){if(o.A.geometryServiceUrl)return o.A.geometryServiceUrl;if(!e)throw new n.A("internal:geometry-service-url-not-configured");let r;r="portal"in e?e.portal||i.A.getDefault():e,await r.load({signal:t});const s=r.helperServices?.geometry?.url;if(!s)throw new n.A("internal:geometry-service-url-not-configured");return s}async function v(e,t,r=null,o){const i=await w(r,o),s=new h;s.geometries=[e],s.outSpatialReference=t;const a=await S(i,s,{signal:o});if(a&&Array.isArray(a)&&1===a.length)return a[0];throw new n.A("internal:geometry-service-projection-failed")}}}]);
//# sourceMappingURL=2979.f1ffcdea.js.map